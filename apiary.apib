FORMAT: 1A
HOST: https://api.birdeye.com/resources

# BirdEye
The BirdEye API is built on HTTP. Our API is RESTful and it:

* Uses predictable, resource-oriented URLs.
* Uses built-in HTTP capabilities for passing parameters and authentication.
* Responds with standard HTTP response codes to indicate errors.
* Returns JSON.



# Group Base
All API URLs referenced in this documentation start with the following base part

## Base URL [https://api.birdeye.com/resources]

## 1023 [/1023]

+ Model (application/json)

        {
            errorCode: 1023,
            errorMessage: "No email addresses specified"
        }

## 1052 [/1052]

+ Model (application/json)

        {
            errorCode: 1052,
            errorMessage: "User email id cannot be blank"
        }

## 1150 [/1150]

+ Model (application/json)

        {
            errorCode: 1150,
            errorMessage: "Business already associated with this reseller"
        }

## 1151 [/1151]

+ Model (application/json)

        {
            errorCode: 1151,
            errorMessage: "Business already associated with another reseller"
        }

## 1045 [/1045]

+ Model (application/json)

        {
            errorCode: 1045,
            errorMessage: "Business name cannot be blank"
        }

## 1046 [/1046]

+ Model (application/json)

        {
            errorCode: 1046,
            errorMessage: "Business name cannot be more than 250 characters"
        }

## 1047 [/1047]

+ Model (application/json)

        {
            errorCode: 1047,
            errorMessage: "Business name cannot be less than 3 characters"
        }

## 1094 [/1094]

+ Model (application/json)

        {
            errorCode: 1094,
            errorMessage: "Postal code cannot be blank."
        }

## 1030 [/1030]

+ Model (application/json)

        {
            errorCode: 1030,
            errorMessage: "URL cannot be blank"
        }

## 1031 [/1031]

+ Model (application/json)

        {
            errorCode: 1031,
            errorMessage: "Source id cannot be blank"
        }

## 1032 [/1032]

+ Model (application/json)

        {
            errorCode: 1032,
            errorMessage: "Invalid source id"
        }

## 1039 [/1039]

+ Model (application/json)

        {
            errorCode: 1039,
            errorMessage: "Invalid business aggregation id"
        }

## 1067 [/1067]

+ Model (application/json)

        {
            errorCode: 1067,
            errorMessage: "URL is invalid"
        }

## 1075 [/1075]

+ Model (application/json)

        {
            errorCode: 1075,
            errorMessage: "Business location zip cannot be more than 6 numbers"
        }

## 1025 [/1025]

+ Model (application/json)

        {
            errorCode: 1025,
            errorMessage: "Invalid business type"
        }

## 1161 [/1161]

+ Model (application/json)

        {
            errorCode: 1161,
            errorMessage: "Invalid API key"
        }


## 1167 [/1167]

+ Model (application/json)

        {
            errorCode: 1167,
            errorMessage: "API key is missing"
        }

## 89 [/89]
+ Model (application/json)

        {
            errorCode: 89,
            errorMessage: "Rate limit exceeded"
        }

## 1033 [/1033]

+ Model (application/json)

        {
            errorCode: 1033,
            errorMessage: "You are not authorized to perform this action"
        }

## 1175 [/1175]

+ Model (application/json)

        {
            errorCode: 1175,
            errorMessage: "No business found with the given id"
        }

##  1010 [/1010]

+ Model (application/json)

        {
            errorCode: 1010,
            errorMessage: "No user found with the given id"
        }

## 1076 [/1076]

+ Model (application/json)

        {
            errorCode: 1176,
            errorMessage: "Business info cannot be blank"
        }

## 1162 [/1162]

+ Model (application/json)

        {
            errorCode: 1162,
            errorMessage: "Either search string or location or both should be specified"
        }

## 1163 [/1163]

+ Model (application/json)

        {
            errorCode: 1163,
            errorMessage: "Invalid start index value"
        }

## 1164 [/1164]

+ Model (application/json)

        {
            errorCode: 1164,
            errorMessage: "Invalid result count value"
        }

## 1011 [/1011]

+ Model (application/json)

        {
            errorCode: 1011,
            errorMessage: "Business id is invalid"
        }

## 1048 [/1048]

+ Model (application/json)

        {
            errorCode: 1048,
            errorMessage: "Business email id cannot be blank."
        }

## 1049 [/1049]

+ Model (application/json)

        {
            errorCode: 1049,
            errorMessage: "Business email id is invalid."
        }

## 1050 [/1050]

+ Model (application/json)

        {
            errorCode: 1050,
            errorMessage: "Business email id cannot be more than 40 characters."
        }

## 1055 [/1055]

+ Model (application/json)

        {
            errorCode: 1055,
            errorMessage: "Not a valid US phone number."
        }

## 1056 [/1056]

+ Model (application/json)

        {
            errorCode: 1056,
            errorMessage: "Not a valid US fax number."
        }


## 1069 [/1069]

+ Model (application/json)

        {
            errorCode: 1069,
            errorMessage: "Business description cannot be more than 4000 characters."
        }

## 1070 [/1070]

+ Model (application/json)

        {
            errorCode: 1070,
            errorMessage: "Business keywords cannot be more than 1000 characters."
        }

## 1089 [/1089]

+ Model (application/json)

        {
            errorCode: 1089,
            errorMessage: "Customer id is invalid."
        }

## 1091 [/1091]

+ Model (application/json)

        {
            errorCode: 1091,
            errorMessage: "User id not authorized to view this customer."
        }

## 1190 [/1190]

+ Model (application/json)

        {
            errorCode: 1190,
            errorMessage: "Invalid category"
        }

## 1184 [/1184]

+ Model (application/json)

        {
            errorCode: 1184,
            errorMessage: "Status change is not allowed"
        }

## 1191 [/1191]

+ Model (application/json)

        {
            errorCode: 1191,
            errorMessage: "Invalid status."
        }

## 1174 [/1174]

+ Model (application/json)

        {
            errorCode: 1174,
            errorMessage: "Reseller can't be removed as it has child accounts."
        }

## 1160 [/1160]

+ Model (application/json)

        {
            errorCode: 1160,
            errorMessage: "User is already associated with business."
        }

## 1053 [/1053]

+ Model (application/json)

        {
            errorCode: 1053,
            errorMessage: "User email id is invalid"
        }

## 1054 [/1054]

+ Model (application/json)

        {
            errorCode: 1054,
            errorMessage: "User email id cannot be more than 40 characters"
        }

## 1014 [/1014]

+ Model (application/json)

        {
            errorCode: 1014,
            errorMessage: "User role cannot be blank"
        }


## 1013 [/1013]

+ Model (application/json)

        {
            errorCode: 1013,
            errorMessage: "Unknown user role"
        }


## 1057 [/1057]

+ Model (application/json)

        {
            errorCode: 1057,
            errorMessage: "First name cannot be more than 50 characters"
        }

## 1059 [/1059]

+ Model (application/json)

        {
            errorCode: 1059,
            errorMessage: "Last name cannot be more than 50 characters"
        }

## 1188 [/1188]

+ Model (application/json)

        {
            errorCode: 1188,
            errorMessage: "User is not associated with the business."
        }


## 1189 [/1189]

+ Model (application/json)

        {
            errorCode: 1189,
            errorMessage: "User with given email id not found."
        }

## 1177 [/1177]

+ Model (application/json)

        {
            errorCode: 1177,
            errorMessage: "User is not authorized to perform any action on any business"
        }

## 1081 [/1081]

+ Model (application/json)

        {
            errorCode: 1081,
            errorMessage: "Review comment is too long"
        }


## 1082 [/1082]

+ Model (application/json)

        {
            errorCode: 1082,
            errorMessage: "Review rating is missing"
        }

## 1142 [/1142]

+ Model (application/json)

        {
            errorCode: 1142,
            errorMessage: "Customer name cannot be blank"
        }


## 1086 [/1086]

+ Model (application/json)

        {
            errorCode: 1086,
            errorMessage: "Customer email id cannot be blank."
        }

## 1087 [/1087]

+ Model (application/json)

        {
            errorCode: 1087,
            errorMessage: "Customer email id is invalid."
        }

## 1088 [/1088]

+ Model (application/json)

        {
            errorCode: 1088,
            errorMessage: "Customer email id cannot be more than 40 characters."
        }

## 1170 [/1170]

+ Model (application/json)

        {
            errorCode: 1170,
            errorMessage: "SMS Alert flag is invalid. Valid values are 0 or 1."
        }

## 1242 [/1242]

+ Model (application/json)

        {
            errorCode: 1242,
            errorMessage: "Invalid rating value. Allowed value between 0-5."
        }

## 1243 [/1243]

+ Model (application/json)

        {
            errorCode: 1243,
            errorMessage: "Invalid rating value. Allowed value between 1-5."
        }

## 1244 [/1244]

+ Model (application/json)

        {
            errorCode: 1244,
            errorMessage: "Maximum 5 keywords can be selected for filter."
        }

## 1246 [/1246]

+ Model (application/json)

        {
            errorCode: 1246,
            errorMessage: "Customer email or phone number is required."
        }

## 1215 [/1215]

+ Model (application/json)

        {
            errorCode: 1215,
            errorMessage: "Invalid report month."
        }

## 1251 [/1251]

+ Model (application/json)

        {
            errorCode: 1251,
            errorMessage: "No review to mark featured/un-featured."
        }

## 1042 [/1042]

+ Model (application/json)

        {
            errorCode: 1042,
            errorMessage: "Invalid review id"
        }

## 1252 [/1252]

+ Model (application/json)

        {
            errorCode: 1252,
            errorMessage: "Review does not belong to the business."
        }

## 1248 [/1248]

+ Model (application/json)

        {
            errorCode: 1248,
            errorMessage: "Allowed limit for featured reviews exceeded."
        }

## 1186 [/1186]

+ Model (application/json)

        {
            errorCode: 1186,
            errorMessage: "Invalid from date. Allowed format is "MM/dd/yyyy"."
        }

## 1187 [/1187]

+ Model (application/json)

        {
            errorCode: 1187,
            errorMessage: "Invalid to date. Allowed format is "MM/dd/yyyy"."
        }

## 1265 [/1265]

+ Model (application/json)

        {
            errorCode: 1265,
            errorMessage: "Value for showOnFacebook is mandatory."
        }

## 1266 [/1266]

+ Model (application/json)

        {
            errorCode: 1266,
            errorMessage: "Value for showOnProfile is mandatory."
        }

## 1267 [/1267]

+ Model (application/json)

        {
            errorCode: 1267,
            errorMessage: "Value for showOnWebsite is mandatory."
        }

## 1268 [/1268]

+ Model (application/json)

        {
            errorCode: 1268,
            errorMessage: "TabType is mandatory field."
        }

## 1269 [/1269]

+ Model (application/json)

        {
            errorCode: 1269,
            errorMessage: "Max length for lable is 30."
        }

## 1270 [/1270]

+ Model (application/json)

        {
            errorCode: 1270,
            errorMessage: "Max length for URL is 1000."
        }

## 1360 [/1360]

+ Model (application/json)

        {
            errorCode: 1360,
            errorMessage: "Hierarchy is not supported for this parent type."
        }

## 1361 [/1361]

+ Model (application/json)

        {
            errorCode: 1361,
            errorMessage: "Hierarchy is not supported for this child type."
        }

## 1362 [/1362]

+ Model (application/json)

        {
            errorCode: 1362,
            errorMessage: "{Child type} cannot be added under {Parent type}."
        }

## 1363 [/1363]

+ Model (application/json)

        {
            errorCode: 1363,
            errorMessage: "Invalid parent child mapping."
        }


## 1029 [/1029]

+ Model (application/json)

        {
            errorCode: 1029,
            errorMessage: "Aggregation source not found"
        }

## 1315 [/1315]

+ Model (application/json)

        {
            errorCode: 1315,
            errorMessage: "Invalid survey."
        }

## 1523 [/1523]

+ Model (application/json)

        {
            errorCode: 1523,
            errorMessage: "The correct date format should be mm/dd/yyyy."
        }

## 1524 [/1524]

+ Model (application/json)

        {
            errorCode: 1524,
            errorMessage: "Date entered is invalid."
        }

## 2110 [/2110]

+ Model (application/json)

        {
            errorCode: 2110,
            errorMessage: "Your review response could not be submitted due to a temporary error on Google. Please try after some time."
        }

## 21101 [/21101]

+ Model (application/json)

        {
            errorCode: 21101,
            errorMessage: "Google page is not integrated. Kindly integrate it first."
        }

## 21103 [/21103]

+ Model (application/json)

        {
            errorCode: 21103,
            errorMessage: "Your review response could not be submitted due to a temporary error on Google."
        }

## 21104 [/21104]

+ Model (application/json)

        {
            errorCode: 21104,
            errorMessage: "Sorry, We could not find this review on Google. Please go to your Google Business page and reply to this review. Thank you."
        }

## 2111 [/2111]

+ Model (application/json)

        {
            errorCode: 2111,
            errorMessage: "Your review response could not be submitted due to a temporary error on Facebook. Please try after some time."
        }

## 21113 [/21113]

+ Model (application/json)

        {
            errorCode: 21113,
            errorMessage: "Facebook page is not integrated. Kindly integrate it first."
        }

## 21114 [/21114]

+ Model (application/json)

        {
            errorCode: 21114,
            errorMessage: "Sorry, We could not find this review on Facebook. Please go to your Facebook page and reply to this review. Thank you."
        }

## 21112 [/21112]

+ Model (application/json)

        {
            errorCode: 21112,
            errorMessage: "Your review response could not be submitted due to a temporary error on Facebook."
        }

## 2222 [/2222]

+ Model (application/json)

        {
            errorCode: 2222,
            errorMessage: "Oops! Something is off on our side. We are working on it. Please check later."
        }

## 2075 [/2075]

+ Model (application/json)

        {
            errorCode: 2075,
            errorMessage: "Error while claiming a provider for Care Dash"
        }

## 20706 [/20706]

+ Model (application/json)

        {
            errorCode: 20706,
            errorMessage: "Error while posting a reply to Care Dash"
        }

## 2078 [/2078]

+ Model (application/json)

        {
            errorCode: 2078,
            errorMessage: "Error while posting a reply to Rent"
        }

## 1541 [/1541]

+ Model (application/json)

        {
            errorCode: 1541,
            errorMessage: "Rate Limit of API has been exceeded."
        }

# Group Business
APIs related to business

## Create [/v1/signup/reseller/subaccount{?rid,api_key,email_id}]
A Reseller can create a Business using:

### Create a business [POST]

#### Request

<center><b>Example CURL Request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{\"businessName\" : \"Snapdragon Salon\", \"zip\" : \"85012\",\"type\":\"Business\",\"phone\":"4032365164" }" "https://api.birdeye.com/resources/v1/signup/reseller/subaccount?rid=755009344&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&email_id=rhonda@reviewmanagement.com" –v


> __Notes__

> - _The business creation API internally calls the business aggregation API which may take upto couple of mins._
> - _Save this business id as it will be required in the add user API call_


<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
            <th>Fields</th>
            <th>Constraints</th>
            <th>Description</th>
        </thead>
        <tbody>
            <tr>
                <td>businessName</td>
                <td>required, string</td>
                <td>Name of the Business that needs to be added</td>
            </tr>
            <tr>
                <td>zip</td>
                <td>required, string</td>
                <td>Postal code of the business location</td>
            </tr>
            <tr>
                <td>phone</td>
                <td>optional, string</td>
                <td>Business phone</td>
            </tr>
            <tr>
                <td>type</td>
                <td>optional, string</td>
                <td>Business type. Valid values are “Business, Enterprise-Location, Enterprise-Product, Reseller or a existing custom hierarchy type”. Default is “Business”.</td>
            </tr>
            <tr>
                <td>aggrOptions</td>
                <td>optional, Integer</td>
                <td>Aggregation Options to enable/disable aggregations. Possible values are, 0 to disable all aggregations, 1 to disable fetch business Info, enable review aggregation and search business , 3 to enable search business, disable fetch business and disable review aggregation, 4 to enable all aggregations. If no aggrOptions is provided, then all aggregations are enabled.</td>
            </tr>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Response Body</caption>
        <thead>
            <th>Fields</th>
            <th>Constraints</th>
            <th>Description</th>
        </thead>
        <tbody>
                <td>businessId</td>
                <td>required, string</td>
                <td>The business ID</td>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </thead>
        <tbody>
         <tr><td>401 Unauthorized</td><td>1161</td><td>Invalid API key</td></tr>
         <tr><td>401 Unauthorized</td><td>1167</td><td>API key is missing</td></tr>
         <tr><td>429 Too Many Requests</td><td>89</td><td>Rate limit exceeded</td></tr>
         <tr><td>401 Unauthorized</td><td>1033</td><td>You are not authorized to perform this action</td></tr>
         <tr><td>404 Not Found</td><td>1175</td><td>No business found with the given id</td></tr>
         <tr><td>404 Not Found</td><td>1010</td><td>No user found with the given id</td></tr>
         <tr><td>400 Bad Request</td><td>1176</td><td>Business info cannot be blank</td></tr>
         <tr><td>400 Bad Request</td><td>1052</td><td>User email id cannot be blank</td></tr>
         <tr><td>400 Bad Request</td><td>1150</td><td>Business already associated with this reseller</td></tr>
         <tr><td>400 Bad Request</td><td>1151</td><td>Business already associated with another reseller</td></tr>
         <tr><td>400 Bad Request</td><td>1045</td><td>Business name cannot be blank</td></tr>
         <tr><td>400 Bad Request</td><td>1046</td><td>Business name cannot be more than 250 characters</td></tr>
         <tr><td>400 Bad Request</td><td>1047</td><td>Business name cannot be less than 3 characters</td></tr>
         <tr><td>400 Bad Request</td><td>1094</td><td>Postal code cannot be blank.</td></tr>
         <tr><td>400 Bad Request</td><td></td><td>Business location zip cannot be more than 6 numbers</td></tr>
         <tr><td>400 Bad Request</td><td>1025</td><td>Invalid business type.</td></tr>
         <tr><td>400 Bad Request</td><td>1055</td><td>Not a valid US phone number.</td></tr>
         </tbody>
    </table>
</div>



+ Parameters

    + rid (required, number) ... the reseller id
    + api_key (required, string) ... the API key
    + email_id (required, string) ... valid email id


+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

            {
                "businessName": "The Business Name",
                "zip": 32323,
                "type": "Business",
                "phone": "4032365164",
                "aggrOptions" : 3
            }

+ Response 200 (application/json)

    + Body

            {
                "businessId":”653356544”
            }

+ Response 401 (application/json)

    [1161][]

+ Response 401 (application/json)

    [1167][]

+ Response 429

    [89][]

+ Response 401 (application/json)

    [1033][]

+ Response 404 (application/json)

    [1175][]

+ Response 404 (application/json)

    [1010][]

+ Response 400 (application/json)

    [1076][]

+ Response 400 (application/json)

    [1052][]

+ Response 400 (application/json)

    [1150][]

+ Response 400 (application/json)

    [1151][]

+ Response 400 (applicaton/json)

    [1045][]

+ Response 400 (applicaton/json)

    [1046][]

+ Response 400 (applicaton/json)

    [1047][]

+ Response 400 (applicaton/json)

    [1094][]

+ Response 400 (applicaton/json)

    [1075][]

+ Response 400 (applicaton/json)

    [1025][]

+ Response 400 (applicaton/json)

    [1055][]


## Create business in bulk [/v1/business/{businessId}/bulkcreate/{type}?{api_key, user_email}]
Create business in bulk

### Bulk Create [POST]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "[ {"name":"Drs. Chalker and Peterson, A Dental Partnership", "alias":"Drs. Chalker", "email":"admin@xyz.com", "categories":"Dentist,Dental,Doctor", "address1":"7405 Morro Rd", "address2":"Suite 102", "city":"Atascadero", "state":"CA", "countryCode":"US", "zip":"93422", "phone":"(805) 466-1243", "fax":"(805) 466-1248", "websiteUrl":"www.dentistinatascadero.com", "description":"*State of the Art Equipment *Serving North County Since 1976 *Gentle Care *Knowledgeable Staff", "services":"Other Dental Specialties, Orthodontists, Dentistry", "keywords":"Dentists Atascadero CA, Other Dental Specialties Atascadero CA, Orthodontists Atascadero CA", "logoUrl":"http://bzimages-prod.s3.amazonaws.com/669029760/Logo%20180%20X%20121.png", "coverImageUrl":"http://bzimages-prod.s3.amazonaws.com/669029760/California%20Foothills%20951%20X%20351.jpg", "timezone":"Pacific Standard Time", "languages":"English,Spanish", "payment":"Paypal, Visa, Master Card", "facebookUrl":",http://www.facebook.com/ChalkerandPetersonDental", "twitterUrl":"https://twitter.com/DrsChaAndPet", "linkedInUrl":"https://linkedin.com/DrsChaAndPet", "googleUrl":"https://plus.google.com/103957250846354895095/about?gl=US&hl=en-US", "youtubeUrl":"https://www.youtube.com/channel/UCDNP0M75ySA5qt0So2F8Xxw", "firstName":"tim", "lastName":"cook", "userEmailId":"tim.cook@xyz.com", "userPhone":"(805) 466-1243", "userRole":"owner" } ]" "https://api.birdeye.com/resources/v1/business/143424324234234/bulkcreate/business?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&user_email=tim.coook@xyz.com" –v

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
            <th>Fields</th>
            <th>Constraints</th>
            <th>Description</th>
        </thead>
        <tbody>
            <tr>
                <td>name</td>
                <td>Required, String</td>
                <td>Business/Product Name (Max 1000 character long)</td>
            </tr>
            <tr>
                <td>alias</td>
                <td>Optional, string</td>
                <td>Alias (Your internal way of identifying this location)</td>
            </tr>
            <tr>
                <td>email</td>
                <td>Required, String</td>
                <td>Business Email ID </td>
            </tr>
            <tr>
                <td>phone</td>
                <td>Required, string</td>
                <td>Business Phone (Required) Format is (xxx) xxx-xxxx</td>
            </tr>
            <tr>
                <td>categories</td>
                <td>Optional, String</td>
                <td>Category (Mapped to Google Category)</td>
            </tr>
            <tr>
                <td>address1</td>
                <td>Optional, string</td>
                <td>Business Address</td>
            </tr>
            <tr>
                <td>address1</td>
                <td>Optional, String</td>
                <td>Business Address</td>
            </tr>
            <tr>
                <td>city</td>
                <td>Optional, string</td>
                <td>City (Max 1000 character long)</td>
            </tr>
            <tr>
                <td>state</td>
                <td>Optional, String</td>
                <td>State (2 character state code)</td>
            </tr>
            <tr>
                <td>countryCode</td>
                <td>Optional, string</td>
                <td>Country Code (2 character country code)</td>
            </tr>
            <tr>
                <td>zip</td>
                <td>Required, String</td>
                <td>Zip Code</td>
            </tr>
            <tr>
                <td>fax</td>
                <td>Optional, String</td>
                <td>Fax number Format is (xxx) xxx-xxxx</td>
            </tr>
            <tr>
                <td>websiteUrl</td>
                <td>Optional, String</td>
                <td>Business Email ID</td>
            </tr>
            <tr>
                <td>description</td>
                <td>Optional, string</td>
                <td>Description (10 to 4000 character long)</td>
            </tr>
            <tr>
                <td>services</td>
                <td>Optional, String</td>
                <td>Services (Comma separated list of services offered; used for SEO)</td>
            </tr>
            <tr>
                <td>keywords</td>
                <td>Optional, string</td>
                <td>Keywords (Comma separated list of keywords; Max 10 keywords; used for SEO)</td>
            </tr>
            <tr>
                <td>logoUrl</td>
                <td>Optional, String</td>
                <td>Logo Image (Dimension should be 60 x 60 px)</td>
            </tr>
            <tr>
                <td>coverImageUrl</td>
                <td>Optional, string</td>
                <td>Cover Image (Optional) (Dimension should be 995 x 316 px)</td>
            </tr>
            <tr>
                <td>timezone</td>
                <td>Optional, String</td>
                <td>Timezone  ('EST',  'CST', 'MST', 'PST', 'AKST', 'HST' are valid timezones )</td>
            </tr>
            <tr>
                <td>languages</td>
                <td>Optional, string</td>
                <td>Language </td>
            </tr>
            <tr>
                <td>payment</td>
                <td>Optional, String</td>
                <td>Payment Type (Max 250 character long)</td>
            </tr>
            <tr>
                <td>facebookUrl</td>
                <td>Optional, string</td>
                <td>Facebook URL (Optional)</td>
            </tr>
            <tr>
                <td>twitterUrl</td>
                <td>Optional, String</td>
                <td>Business Twitter URL</td>
            </tr>
            <tr>
                <td>linkedInUrl</td>
                <td>Optional, string</td>
                <td>Business LinkedId URL</td>
            </tr>
            <tr>
                <td>googleUrl</td>
                <td>Optional, String</td>
                <td>Business Google URL</td>
            </tr>
            <tr>
                <td>youtubeUrl</td>
                <td>Optional, string</td>
                <td>Business Youtube URL</td>
            </tr>
            <tr>
                <td>firstName</td>
                <td>Optional, String</td>
                <td>Location General Manager - First Name </td>
            </tr>
            <tr>
                <td>lastName</td>
                <td>Optional, String</td>
                <td>Location General Manager - Last Name </td>
            </tr>
            <tr>
                <td>userEmailId</td>
                <td>Optional, String</td>
                <td>Location General Manager - Email </td>
            </tr>
            <tr>
                <td>userPhone</td>
                <td>Optional, string</td>
                <td>Location General Manager - Mobile Phone</td>
            </tr>
            <tr>
                <td>userRole</td>
                <td>Optional, String</td>
                <td>LocationGeneral Manager - Role (They can be 'owner' or 'admin')</td>
            </tr>
        </tbody>
    </table>
</div>


<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1023</td>
            <td>No email addresses specified</td>
        </tr>
        <tr>
            <td>400 Unauthorized</td>
            <td>1177</td>
            <td>User is not authorized to perform any action on any business</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1188</td>
            <td>User is not associated with the business.</td>
        </tr>
        </tbody>
    </table>
</div>

+ Parameters
    + businessId (string, required) ... the Parent ID
    + api_key (string, required) ... the API key
    + type (string, required) ... Business type (Business/Product)

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 401

    [1167][]

+ Response 429

    [89][]

+ Response 401

    [1011][]

+ Response 400

    [1023][]

+ Response 400

    [1177][]

+ Response 400

    [1188][]



## Search [/v1/business/search{?search_str,loc,sindex,count,sort,api_key,nearby}]
Business from BirdEye platform can be searched using:

### Search Business [GET]

#### Request

<center><b>Example CURL Request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/business/search?search_str=ray%20lord&loc=29063&sindex=20&count=20&sort=rating&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&nearby=1" -v

#### Response

<center><b>Example Response Body</b></center>

    {
      "name": "Ray A. Lord",
      "category": "Lawyers",
      "address": {
        "address1": "7436 Broad River Rd Suite 110",
        "address2": null,
        "city": "Irmo",
        "state": "South Carolina",
        "zip": "29063",
        "countryCode": "US",
        "countryName": "United States of America"
      },
      "reviewCount": 105,
      "avgRating": 4.9,
      "coverImageURL": "http://d3cnqzq0ivprch.cloudfront.net/prod/css/images/profile/lawyer.jpg",
      "profileURL": "http://reviews2.getlegal.com/ray-a-lord-755009344",
      "logoURL": null,
      "phone": "(803) 610-4056",
      "businessId": "755009344_1"
    }

<div class="paramsTableWrap">
<table class="paramsTable">
    <caption>Error Codes</caption>
    <thead>
        <tr>
            <th>HTTP Status</th><th>BirdEye error code</th><th>Description</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>401 Unauthorized</td><td>1161</td><td>Invalid API key</td></tr>
         <tr><td>400 Bad Request</td><td>1162</td><td>Either search string or location or both should be specified</td></tr>
         <tr><td>400 Bad Request</td><td>1163</td><td>Invalid start index value</td></tr>
         <tr><td>400 Bad Request</td><td>1164</td><td>Invalid result count value</td></tr>
         <tr><td>401 Unauthorized</td><td>1167</td><td>API key is missing</td></tr>
         <tr><td>429 Too Many Requests</td><td>89</td><td>Rate limit exceeded</td></tr>
    </tbody>
 </table>
</div>

+ Parameters
    + search_str (required, string) ... Search criteria for business. This could be business name or category
    + loc (required, string) ... Location of the business. This could be “City,State” or zip code.
    + sindex (required, string) ... Starting point for search results. Default value is 0. e.g. 0:start from 1st result, 25: start from 26th result
    + count (required, integer) ... Specifies the number of results to be returned. Default is 500. e.g. 50:return 50 results
    + sort (required, string) ... Results can be sorted by relevance, rating. By default it is relevance.
    + api_key (required, string) ... Partner specific API key provided by BirdEye for data exchange.
    + nearby (required, string) ... Flag to search business in neay by locations. Default is 1 e.g. 0: don’t search in near by cities, 1: search in near by cities

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
              "name": "Ray A. Lord",
              "category": "Lawyers",
              "address": {
                "address1": "7436 Broad River Rd Suite 110",
                "address2": null,
                "city": "Irmo",
                "state": "South Carolina",
                "zip": "29063",
                "countryCode": "US",
                "countryName": "United States of America"
              },
              "reviewCount": 105,
              "avgRating": 4.9,
              "coverImageURL": "http://d3cnqzq0ivprch.cloudfront.net/prod/css/images/profile/lawyer.jpg",
              "profileURL": "http://reviews2.getlegal.com/ray-a-lord-755009344",
              "logoURL": null,
              "phone": "(803) 610-4056",
              "businessId": "755009344_1"
            }

+ Response 401 (application/json)

    [1161][]

+ Response 429

    [89][]

+ Response 400 (application/json)

    [1162][]

+ Response 401 (application/json)

    [1163][]

+ Response 401 (application/json)

    [1164][]

+ Response 401 (application/json)

    [1167][]


## Get [/v1/business/{businessNumber}{?api_key}]
Business info from BirdEye platform can be fetched using:

### Get Business [GET]

#### Request

<center><b>Example CURL Request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/business/755009344?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

#### Response

<center><b>Example Response Body</b></center>

    {
      "name": "Dieci Lifestyle Spa",
      "alias": "Dieci Lifestyle Spa - Livingston, NJ",
      "emailId": "4568@livelovespa.com",
      "phone": "(973) 716-0101",
      "fax": "(973) 716-0102",
      "websiteURL": "http://www.diecispa.com/",
      "description": "Specialties\nBridal ServicesMakeup: Makeovers/Lessons/ Faux Lash applicationMassagesFacialsMicrocurrentMicrodermabrasionBody…",
      "keywords": "Hair Salons,Day Spas,Beauty Salon,Beauty Salons,Salons,Massage Therapists",
      "services": "Beauty Salon, Hair Spa",
      "logoURL": "http://d3cnqzq0ivprch.cloudfront.net/prod/css/images/logo.jpg",
      "coverImageURL": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/spa.jpg",
      "image1Url": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg",
      "image2Url": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/9fc3f2ba7c1b4dcea38ea76327c617f3.jpeg",
      "image3Url": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/77964cfead164cbf8f9c8dfd039269b0.jpeg",
      "timezone": "Pacific Standard Time",
      "languages": [
        "English",
        "Spanish"
      ],
      "payment": "Visa, MasterCard, American Express, Debit Cards, Check",
      "hoursOfOperations": [
        {
          "day": "5",
          "startHour": "7:00",
          "endHour": "17:30",
          "isOpen": 1,
          "comment": ""
        },
        {
          "day": "1",
          "startHour": "8:00",
          "endHour": "21:00",
          "isOpen": 1,
          "comment": ""
        },
        {
          "day": "4",
          "startHour": "8:00",
          "endHour": "21:00",
          "isOpen": 1,
          "comment": ""
        },
        {
          "day": "6",
          "startHour": "9:00",
          "endHour": "15:00",
          "isOpen": 1,
          "comment": ""
        },
        {
          "day": "3",
          "startHour": "8:00",
          "endHour": "21:00",
          "isOpen": 1,
          "comment": ""
        },
        {
          "day": "2",
          "startHour": "8:00",
          "endHour": "21:00",
          "isOpen": 1,
          "comment": ""
        },
        {
          "day": "0",
          "startHour": null,
          "endHour": null,
          "isOpen": 0,
          "comment": "Mon closed"
        }
      ],
      "working24x7": 0,
      "location": {
        "address1": "90 W Mount Pleasant Ave",
        "address2": "(btwn Preston Dr. &amp; N. Mitchell Ave.)",
        "city": "Livingston",
        "state": "NJ",
        "zip": "07039",
        "countryCode": "US",
        "countryName": "United States",
        "lat": "40.7956172",
        "lng": "-74.3216179"
      },
      "reviewCount": 53,
      "avgRating": 3.4,
      "status": "active",
      "type": "Practice",
      "category": "Hair Salons,Day Spas,Beauty Salon,Beauty Salons,Salons,Massage Therapists",
      "socialProfileURLs": {
        "googleUrl": "null",
        "facebookUrl": null,
        "twitterUrl": null,
        "linkedinUrl": null,
        "youtubeUrl": null
      },
      "isSEOEnabled": "false",
      "baseUrl": "https://birdeye.com/diecispa-755009344"
    }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Response Body</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>name</td>
            <td>Business name</td>
        </tr>
        <tr>
            <td>alias</td>
            <td>Alias for business. default: business name followed by city, state</td>
        </tr>
        <tr>
            <td>emailId</td>
            <td>Email id for business</td>
        </tr>
        <tr>
            <td>phone</td>
            <td>Business contact number</td>
        </tr>
        <tr>
            <td>fax</td>
            <td>Business fax number</td>
        </tr>
        <tr>
            <td>websiteURL</td>
            <td>Business website URL</td>
        </tr>
        <tr>
            <td>description</td>
            <td>Description for business</td>
        </tr>
        <tr>
            <td>keywords</td>
            <td>Keywords about the business. Useful in SEO</td>
        </tr>
        <tr>
            <td>services</td>
            <td>Services offered by business</td>
        </tr>
        <tr>
            <td>logoURL</td>
            <td>Logo image URL for business</td>
        </tr>
        <tr>
            <td>coverImageURL</td>
            <td>Cover image URL for business displayed on custom review site.</td>
        </tr>
        <tr>
            <td>image1URL, image2URL, image3URL</td>
            <td>Images for the business</td>
        </tr>
        <tr>
            <td>timezone</td>
            <td>Timezone in which business works</td>
        </tr>
        <tr>
            <td>languages</td>
            <td>Languages in which business deals</td>
        </tr>
        <tr>
            <td>payment</td>
            <td>Payment methods supported by business</td>
        </tr>
        <tr>
            <td>hoursOfOperations</td>
            <td>Working hours of business for each day.
            <br>day: 0(Monday), 1(Tuesday).
            <br>startHour: 9:00 (9 AM)
            <br>endHour: 18:00 (6 PM)
            <br>isOpen:  0(Business closed today),
            <br>1(Business open today)
            <br>comment: “By appointment only”</td>
        </tr>
        <tr>
            <td>working24x7</td>
            <td>Whether business is 24x7 open or not (0-false, 1-true)</td>
        </tr>
        <tr>
            <td>location</td>
            <td>Business address</td>
        </tr>
        <tr>
            <td>reviewCount</td>
            <td>Count of approved reviews for business</td>
        </tr>
        <tr>
            <td>avgRating</td>
            <td>Average rating of business based on approved reviews</td>
        </tr>
        <tr>
            <td>status</td>
            <td>Business status. Valid values are demo, active, inactive. Default is "demo"</td>
        </tr>
        <tr>
            <td>type</td>
            <td>Business type. Valid values are “Business, Enterprise-Location, Enterprise-Product, Reseller or custom hierarchy type”. Default is “Business”</td>
        </tr>
        <tr>
            <td>category</td>
            <td>Business categories</td>
        </tr>
        <tr>
            <td>socialProfileURLs</td>
            <td>
                Profile URLs for business on top rated social sites
                <br>e.g. Google, Facebook, Linkedin, Twitter, YouTube
            </td>
        </tr>
        <tr>
            <td>isSEOEnabled</td>
            <td>Enable/Disbale search engine indexing of business profile
                <br/> Valid values are “true”,”false”. Default is “true”.
            </td>
        </tr>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404  Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        </tbody>
    </table>
</div>

+ Parameters
    + businessNumber (string, required) ... the Business Number
    + api_key (string, required) ... Partner specific API key provided by BirdEye for data exchange.

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
              "name": "Dieci Lifestyle Spa",
              "alias": "Dieci Lifestyle Spa - Livingston, NJ",
              "emailId": "4568@livelovespa.com",
              "phone": "(973) 716-0101",
              "fax": "(973) 716-0102",
              "websiteURL": "http://www.diecispa.com/",
              "description": "Specialties\nBridal ServicesMakeup: Makeovers/Lessons/ Faux Lash applicationMassagesFacialsMicrocurrentMicrodermabrasionBody…",
              "keywords": "Hair Salons,Day Spas,Beauty Salon,Beauty Salons,Salons,Massage Therapists",
              "services": "Beauty Salon, Hair Spa",
              "logoURL": "http://d3cnqzq0ivprch.cloudfront.net/prod/css/images/logo.jpg",
              "coverImageURL": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/spa.jpg",
              "image1Url": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg",
              "image2Url": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/9fc3f2ba7c1b4dcea38ea76327c617f3.jpeg",
              "image3Url": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/77964cfead164cbf8f9c8dfd039269b0.jpeg",
              "timezone": "Pacific Standard Time",
              "languages": [
                "English",
                "Spanish"
              ],
              "payment": "Visa, MasterCard, American Express, Debit Cards, Check",
              "hoursOfOperations": [
                {
                  "day": "5",
                  "startHour": "7:00",
                  "endHour": "17:30",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "1",
                  "startHour": "8:00",
                  "endHour": "21:00",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "4",
                  "startHour": "8:00",
                  "endHour": "21:00",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "6",
                  "startHour": "9:00",
                  "endHour": "15:00",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "3",
                  "startHour": "8:00",
                  "endHour": "21:00",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "2",
                  "startHour": "8:00",
                  "endHour": "21:00",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "0",
                  "startHour": null,
                  "endHour": null,
                  "isOpen": 0,
                  "comment": "Mon closed"
                }
              ],
              "working24x7": 0,
              "location": {
                "address1": "90 W Mount Pleasant Ave",
                "address2": "(btwn Preston Dr. &amp; N. Mitchell Ave.)",
                "city": "Livingston",
                "state": "NJ",
                "zip": "07039",
                "countryCode": "US",
                "countryName": "United States of America"
              },
              "reviewCount": 53,
              "avgRating": 3.4,
              "status":"active",
              "type":"Business",
              "category": "Hair Salons,Day Spas,Beauty Salon,Beauty Salons,Salons,Massage Therapists",
              "socialProfileURLs": {
                "googleUrl": "null",
                "facebookUrl": null,
                "twitterUrl": null,
                "linkedinUrl": null,
                "youtubeUrl":null
              },
              "isSEOEnabled": "false",
              "baseUrl": "https://birdeye.com/diecispa-755009344"
            }

+ Response 401 (application/json)

    [1161][]

+ Response 429

    [89][]

+ Response 404 (application/json)

    [1011][]

+ Response 401 (application/json)

    [1167][]

## Update [/v1/business/{businessId}{?api_key}]
Business info on BirdEye platform can be updated using:

### Update Business [PUT]

#### Request

<center><b>Example CURL request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X PUT  -d "
    {
      "name": "Dieci Lifestyle Spa",
      "alias": "Dieci Lifestyle Spa - Livingston, NJ",
      "isAddressHidden" : 0,
      "location": {
        "address1": "90 W Mount Pleasant Ave",
        "address2": "(btwn Preston Dr. &amp; N. Mitchell Ave.)",
        "city": "Livingston",
        "state": "NJ",
        "zip": "07039",
        "countryCode": "US",
        "countryName": "United States of America",
        "lat" : "37.7730319",
        "lng" : "-122.3869622"
      },
      "emailId": "4568@livelovespa.com",
      "phone": "(973) 716-0101",
      "fax": "(973) 716-0102",
      "websiteUrl": "http://www.diecispa.com/",
      "establishedYear" : "2012",
      "timezone": "Pacific Standard Time",
      "languages": [
        "English",
        "Spanish"
      ],
      "working24x7": 0,
      "hoursOfOperations": [
        {
          "day": "5",
          "startHour": "7:00",
          "endHour": "17:30",
          "isOpen": 1,
          "comment": ""
        },
        {
          "day": "1",
          "startHour": "8:00",
          "endHour": "21:00",
          "isOpen": 1,
          "comment": ""
        },
        {
          "day": "4",
          "startHour": "8:00",
          "endHour": "21:00",
          "isOpen": 1,
          "comment": ""
        },
        {
          "day": "6",
          "startHour": "9:00",
          "endHour": "15:00",
          "isOpen": 1,
          "comment": ""
        },
        {
          "day": "3",
          "startHour": "8:00",
          "endHour": "21:00",
          "isOpen": 1,
          "comment": ""
        },
        {
          "day": "2",
          "startHour": "8:00",
          "endHour": "21:00",
          "isOpen": 1,
          "comment": ""
        },
        {
          "day": "0",
          "startHour": null,
          "endHour": null,
          "isOpen": 0,
          "comment": "Mon closed"
        }
      ],
      "specialHours" : [
        {
            "specialDate": "12/31/2020",
            "startHour" : "09:00",
            "endHour" : "12:00",
            "isOpen" : 0
        },
        {
            "specialDate": "01/01/2021",
            "startHour" : "",
            "endHour" : "",
            "isOpen" : 1
        }
      ],
      "businessStatus" : "Open",
      "reopenDate" : "01/01/2021",
      "services": "Beauty Salon, Hair Spa",
      "keywords": "Hair Salons,Day Spas,Beauty Salon,Beauty Salons,Salons,Massage Therapists",
      "products" : "Living Proof Dry Shampoo,Kevin Murphy Blonde Angel Wash", 
      "appointmentLink" : "",
      "reservationLink" : "",
      "menuLink" : "",
      "orderAheadLink" : "",
      "payment": "Visa, MasterCard, American Express, Debit Cards, Check",
      "impressum" : "",
      "localPhoneNumber" : "",
      "tollFreePhoneNumber" : "",
      "androidAppURL" : "",
      "iosAppURL" : "",
      "logoUrl": "http://d3cnqzq0ivprch.cloudfront.net/prod/css/images/logo.jpg",
      "gmbLogoOptOut": 1,
      "fbLogoOptOut" : 1,
      "gmbCoverOptOut" : 1,
      "fbCoverOptOut" : 1,
      "coverImageUrl": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/spa.jpg",
      "coverBusinessInfoLayout" : "In grid cover image, business info overlay",
      "galleryPhotos" : [
        "http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg",
        "http://d2xt3xymj142xp.cloudfront.net/712586432/other/9fc3f2ba7c1b4dcea38ea76327c617f3.jpeg",
        "http://d2xt3xymj142xp.cloudfront.net/712586432/other/77964cfead164cbf8f9c8dfd039269b0.jpeg"
      ],
      "videoUrl" : "http://d2xt3xymj142xp.cloudfront.net/712586432/other/77964cfead164cbf8f9c8dfd039269b0.mp4",
      "covidInfo" : {
        "postDescription" : "",
        "covid19SupportLink" : "",
        "virtualCareLink" : ""
      },
      "bingListing" : {
        "primaryCategoryBing" : "",
        "category1Bing" : "",
        "category2Bing" : "",
        "category3Bing" : "",
        "bingDescription" : ""
      },
      "internalListing" : {
        "description" : "pecialties\nBridal ServicesMakeup: Makeovers/Lessons/ Faux Lash applicationMassagesFacialsMicrocurrentMicrodermabrasionBody…",
        "category" : "",
        "subcategory1" : "",
        "subcategory2" : "",
        "subcategory3" : "",
        "displayCategory" : ""
      },
      "facebookListing" : {
        "category1Fb" : "",
        "category2Fb" : "",
        "category3Fb" : "",
        "facebookDescription" : ""
      },
      "gmbListing" : {
        "googleWebsiteUrl" : "",
        "googleStoreId" : "",
        "primaryCategoryGmb" : "",
        "additionalCategory1Gmb" : "",
        "additionalCategory2Gmb" : "",
        "additionalCategory3Gmb" : "",
        "additionalCategory4Gmb" : "",
        "additionalCategory5Gmb" : "",
        "googleDescription" : "",
        "googleTeamPhoto" : "http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg",
        "attributes" : {
            "Crowd" : [
                {
                    "attributeId": "welcomes_families",
                    "attributeName": "Family-friendly",
                    "value": true
                }
            ],
            "Accessibility" : [
                {
                    "attributeId": "has_wheelchair_accessible_elevator",
                    "attributeName": "Wheelchair accessible elevator",
                    "value": false
                }
            ]
        }
      },
      "vendorListing" : {
        "venderCategory" : "",
        "venderSubcategory1" : "",
        "venderSubcategory2" : "",
        "venderSubcategory3" : ""
      },
      "socialProfileURLs": {
        "googleUrl": "null",
        "facebookUrl": null,
        "twitterUrl": null,
        "linkedinUrl": null,
        "youtubeUrl": null,
        "instagramUrl" : null,
        "pintrestUrl" : null,
        "lendingtreeUrl" : null,
        "bbbUrl" : null
      },
      "isSEOEnabled": "false",
      "externalReferenceId" : ""
    }" "https://api.birdeye.com/resources/v1/business/755009344?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v


<div class="paramsTableWrap">
    <table class="paramsTable">
    <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>name</td>
            <td>Business name</td>
        </tr>
        <tr>
            <td>alias</td>
            <td>Alias for business. default: business name followed by city, state</td>
        </tr>
        <tr>
            <td>isAddressHidden</td>
            <td>If your business doesn’t have a place for your customers to visit, then you can hide your street address (note that this isn’t supported by all sites</td>
        </tr>
        <tr>
            <td>location</td>
            <td>Business address</td>
        </tr>
        <tr>
            <td>emailId</td>
            <td>Email id for business</td>
        </tr>
        <tr>
            <td>phone</td>
            <td>Business contact number</td>
        </tr>
        <tr>
            <td>fax</td>
            <td>Business fax number</td>
        </tr>
        <tr>
            <td>websiteUrl</td>
            <td>Business website URL</td>
        </tr>
        <tr>
            <td>establishedYear</td>
            <td>Year established</td>
        </tr>
        <tr>
            <td>timezone</td>
            <td>Timezone in which business works</td>
        </tr>
        <tr>
            <td>languages</td>
            <td>Languages in which business deals</td>
        </tr>
        <tr>
            <td>working24x7</td>
            <td>Whether business is 24x7 open or not (0-false, 1-true)</td>
        </tr>
        <tr>
            <td>hoursOfOperations</td>
            <td>Working hours of business for each day.
                <br/>day: 0(Monday), 1(Tuesday).
                <br/>startHour: 9:00 (9 AM)
                <br/>endHour: 18:00 (6 PM)
                <br/>isOpen: 0(Business closed today), 1(Business open today)
                <br/>comment: "By appointment only"
            </td>
        </tr>
        <tr>
            <td>specialHours</td>
            <td>Special hours of business.
                <br/>specialDate: It should be "MM/dd/yyyy".
                <br/>startHour: 9:00 (9 AM)
                <br/>endHour: 18:00 (6 PM)
                <br/>isOpen: 0(Business closed today), 1(Business open today)
            </td>
        </tr>
        <tr>
            <td>businessStatus</td>
            <td>Business status: It will update your business status on lisitng page and If business will choose "Temporarily closed" then Reopen date should be mandatry
                <br/>Open
                <br/>Temporarily closed
                <br/>Permanently closed
            </td>
        </tr>
        <tr>
            <td>reopenDate</td>
            <td>Reopen date is applicable only when the status is "temporarily closed". It should be "MM/dd/yyyy" format. </td>
        </tr>
        <tr>
            <td>services</td>
            <td>Services offered by business. Business services cannot be more than 1000 characters</td>
        </tr>
        <tr>
            <td>keywords</td>
            <td>Keywords about the business. Useful in SEO. Business keyword cannot be more than 1000 characters</td>
        </tr>
        <tr>
            <td>products</td>
            <td>Products about the business. Useful in SEO and Business products cannot be more than 1000 characters</td>
        </tr>
        <tr>
            <td>appointmentLink</td>
            <td>Let customers make appointments by linking them to your appointments page</td>
        </tr>
        <tr>
            <td>reservationLink</td>
            <td>Let customers reserve tables by linking them to your reservations page</td>
        </tr>
        <tr>
            <td>menuLink</td>
            <td>Show customers what you serve by linking them to your menu</td>
        </tr>
        <tr>
            <td>orderAheadLink</td>
            <td>Let customers place delivery and pick-up orders by linking them to your ordering page</td>
        </tr>
        <tr>
            <td>payment</td>
            <td>Payment methods supported by business</td>
        </tr>
        <tr>
            <td>impressum</td>
            <td>In certain countries (like Austria, Germany and Switzerland), businesses may be required by law to include a statement of ownership on their web presence.</td>
        </tr>
        <tr>
            <td>localPhoneNumber</td>
            <td>Local phone number</td>
        </tr>
        <tr>
            <td>tollFreePhoneNumber</td>
            <td>Tollfree number</td>
        </tr>
        <tr>
            <td>androidAppURL</td>
            <td>Android app url</td>
        </tr>
        <tr>
            <td>iosAppURL</td>
            <td>ios app url</td>
        </tr>
        <tr>
            <td>logoUrl</td>
            <td>Logo image URL for business. Format: JPG, JPEG, PNG. Minimum 250 X 250px</td>
        </tr>
        <tr>
            <td>gmbLogoOptOut</td>
            <td>Update profile photo on your google my business page. (1-false,0-true)</td>
        </tr>
        <tr>
            <td>fbLogoOptOut</td>
            <td>Update profile photo on your facebook profile. (1-false,0-true)</td>
        </tr>
        <tr>
            <td>gmbCoverOptOut</td>
            <td>Update cover photo on your google my business page. (1-false,0-true)</td>
        </tr>
        <tr>
            <td>fbCoverOptOut</td>
            <td>Update cover photo on your facebook profile. (1-false,0-true)</td>
        </tr>
        <tr>
            <td>coverImageUrl</td>
            <td>Cover image URL for business displayed on custom review site. Format: JPG, JPEG, PNG. Minimum 1110 x 374px</td>
        </tr>
        <tr>
            <td>coverBusinessInfoLayout</td>
            <td>Show on your Birdeye profile. Possible value will be
                <br/><i>In grid cover image, business info overlay</i>
                <br/><i>In grid cover image, business info below</i>
                <br/><i>Full width cover image, business info overlay</i>
                <br/><i>Full width cover image, business info below</i>
                <br/><i>Google map view, business info overlay</i>
            </td>
        </tr>
        <tr>
            <td>galleryPhotos</td>
            <td>Images for the business</td>
        </tr>
        <tr>
            <td>videoUrl</td>
            <td>Video URL for business. Format: MP4, OGG, OGV. Size: Maximum 100MB</td>
        </tr>
        <tr>
            <td>covidInfo</td>
            <td>Provide covid related update in.
                <br/>postDescription : post will be update on gmb & FB
                <br/>covid19SupportLink : should be a valid covid19 support url
                <br/>virtualCareLink : should be a valid url virtual care link
             </td>
        </tr>
        <tr>
            <td>bingListing</td>
            <td>Provide bing data for listing purpose.
                <br/>primaryCategoryBing : Primary category of bing
                <br/>categories : You can add up to 3 categories
                <br/>bingDescription : Bing description cannot be more than 4096 characters
            </td>
        </tr>
        <tr>
            <td>internalListing</td>
            <td>Provide data for microsite listing purpose.
                <br/>description : Business description cannot be more than 5000 characters
                <br/>category : primary category of business
                <br/>subcategory : You can add up to 3 subcategories
                <br/>displayCategory : Choose one of the category from primary category & sub categories
            </td>
        </tr>
        <tr>
            <td>facebookListing</td>
            <td>Provide data for facebook listing purpose.
                <br/>category : You can add up to 3 subcategories
                <br/>facebookDescription : Facebook description cannot be more than 255 characters
            </td>
        </tr>
        <tr>
            <td>gmbListing</td>
            <td>Provide data for gmb listing purpose.
                <br/><i>googleWebsiteUrl</i> : Website url will upadte on google listing.
                <br/><i>googleStoreId</i> : Store id for google
                <br/><i>primaryCategoryGmb</i> : Primary category of google
                <br/><i>additionalCategory</i> : You can add up to 5 subcategories
                <br/><i>googleDescription</i> : Google description cannot be more than 750 characters
                <br/><i>googleTeamPhoto</i> : Google team photo url, Format: JPG, JPEG, PNG.Minimum 250 X 250px. Size: 10KB to 5MB
                <br/><i>attributes</i> : Google my business attributes are highly visible statements about your business that appear on your Google My Business listing. Supported attributes are Accessibility,Amenities,Crowd,Dining options,Highlights,Planning,Offerings,Health & safety
            </td>
        </tr>
        <tr>
            <td>vendorListing</td>
            <td>Provide data for fix listing for business.
                <br/>venderCategory : Primary category of business
                <br/>venderSubcategory : You can add up to 3 subcategories
            </td>
        </tr>
        <tr>
            <td>socialProfileURLs</td>
            <td>Profile URLs for business on top rated social sites
                <br/>e.g. Google, Facebook, Linkedin, Twitter, YouTube, Pinterest, BBB, LendingTree
            </td>
        </tr>
        <tr>
            <td>isSEOEnabled</td>
            <td>Enable/Disbale search engine indexing of business profile
                <br/> Valid values are “true”,”false”. Default is “true”.
            </td>
        </tr>
        <tr>
            <td>externalReferenceId</td>
            <td>It should be a unique value for location identifier</td>
        </tr>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1175</td>
            <td>No business found with the given id</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1045</td>
            <td>Business name cannot be blank.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1047</td>
            <td>Business name cannot be less than 3 characters.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1046</td>
            <td>Business name cannot be more than 250 characters.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1048</td>
            <td>Business email id cannot be blank.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1049</td>
            <td>Business email id is invalid.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1050</td>
            <td>Business email id cannot be more than 40 characters.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1055</td>
            <td>Not a valid US phone number.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1056</td>
            <td>Not a valid US fax number.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1069</td>
            <td>Business description cannot be more than 4000 characters.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1070</td>
            <td>Business keywords cannot be more than 1000 characters.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1190</td>
            <td>Invalid category</td>
        </tr>
        </tbody>
    </table>
</div>


+ Parameters
    + businessId (string, required) ... the Business Number
    + api_key (string, required) ... Partner specific API key provided by BirdEye for data exchange.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

            {
              "name": "Dieci Lifestyle Spa",
              "alias": "Dieci Lifestyle Spa - Livingston, NJ",
              "isAddressHidden": 0,
              "location": {
                "address1": "90 W Mount Pleasant Ave",
                "address2": "(btwn Preston Dr. &amp; N. Mitchell Ave.)",
                "city": "Livingston",
                "state": "NJ",
                "zip": "07039",
                "countryCode": "US",
                "countryName": "United States of America",
                "lat": "37.7730319",
                "lng": "-122.3869622"
              },
              "emailId": "4568@livelovespa.com",
              "phone": "(973) 716-0101",
              "fax": "(973) 716-0102",
              "websiteUrl": "http://www.diecispa.com/",
              "establishedYear": "2012",
              "timezone": "Pacific Standard Time",
              "languages": [
                "English",
                "Spanish"
              ],
              "working24x7": 0,
              "hoursOfOperations": [
                {
                  "day": "5",
                  "startHour": "7:00",
                  "endHour": "17:30",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "1",
                  "startHour": "8:00",
                  "endHour": "21:00",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "4",
                  "startHour": "8:00",
                  "endHour": "21:00",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "6",
                  "startHour": "9:00",
                  "endHour": "15:00",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "3",
                  "startHour": "8:00",
                  "endHour": "21:00",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "2",
                  "startHour": "8:00",
                  "endHour": "21:00",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "0",
                  "startHour": null,
                  "endHour": null,
                  "isOpen": 0,
                  "comment": "Mon closed"
                }
              ],
              "specialHours": [
                {
                  "specialDate": "12/31/2020",
                  "startHour": "09:00",
                  "endHour": "12:00",
                  "isOpen": 0
                },
                {
                  "specialDate": "01/01/2021",
                  "startHour": "",
                  "endHour": "",
                  "isOpen": 1
                }
              ],
              "businessStatus": "Open",
              "reopenDate": "01/01/2021",
              "services": "Beauty Salon, Hair Spa",
              "keywords": "Hair Salons,Day Spas,Beauty Salon,Beauty Salons,Salons,Massage Therapists",
              "products": "Living Proof Dry Shampoo,Kevin Murphy Blonde Angel Wash",
              "appointmentLink": "",
              "reservationLink": "",
              "menuLink": "",
              "orderAheadLink": "",
              "payment": "Visa, MasterCard, American Express, Debit Cards, Check",
              "impressum": "",
              "localPhoneNumber": "",
              "tollFreePhoneNumber": "",
              "androidAppURL": "",
              "iosAppURL": "",
              "logoUrl": "http://d3cnqzq0ivprch.cloudfront.net/prod/css/images/logo.jpg",
              "gmbLogoOptOut": 1,
              "fbLogoOptOut": 1,
              "gmbCoverOptOut": 1,
              "fbCoverOptOut": 1,
              "coverImageUrl": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/spa.jpg",
              "coverBusinessInfoLayout": "In grid cover image, business info overlay",
              "galleryPhotos": [
                "http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg",
                "http://d2xt3xymj142xp.cloudfront.net/712586432/other/9fc3f2ba7c1b4dcea38ea76327c617f3.jpeg",
                "http://d2xt3xymj142xp.cloudfront.net/712586432/other/77964cfead164cbf8f9c8dfd039269b0.jpeg"
              ],
              "videoUrl": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/77964cfead164cbf8f9c8dfd039269b0.mp4",
              "covidInfo": {
                "postDescription": "",
                "covid19SupportLink": "",
                "virtualCareLink": ""
              },
              "bingListing": {
                "primaryCategoryBing": "",
                "category1Bing": "",
                "category2Bing": "",
                "category3Bing": "",
                "bingDescription": ""
              },
              "internalListing": {
                "description": "pecialties\nBridal ServicesMakeup: Makeovers/Lessons/ Faux Lash applicationMassagesFacialsMicrocurrentMicrodermabrasionBody…",
                "category": "",
                "subcategory1": "",
                "subcategory2": "",
                "subcategory3": "",
                "displayCategory": ""
                
              },
              "facebookListing": {
                "category1Fb": "",
                "category2Fb": "",
                "category3Fb": "",
                "facebookDescription": ""
              },
              "gmbListing": {
                "googleWebsiteUrl": "",
                "googleStoreId": "",
                "primaryCategoryGmb": "",
                "additionalCategory1Gmb": "",
                "additionalCategory2Gmb": "",
                "additionalCategory3Gmb": "",
                "additionalCategory4Gmb": "",
                "additionalCategory5Gmb": "",
                "googleDescription": "",
                "googleTeamPhoto": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg",
                "attributes": {
                  "Crowd": [
                    {
                      "attributeId": "welcomes_families",
                      "attributeName": "Family-friendly",
                      "value": true
                      
                    }
                  ],
                  "Accessibility": [
                    {
                      "attributeId": "has_wheelchair_accessible_elevator",
                      "attributeName": "Wheelchair accessible elevator",
                      "value": false
                      
                    }
                  ]
                }
              },
              "vendorListing": {
                "venderCategory": "",
                "venderSubcategory1": "",
                "venderSubcategory2": "",
                "venderSubcategory3": ""
              },
              "socialProfileURLs": {
                "googleUrl": "null",
                "facebookUrl": null,
                "twitterUrl": null,
                "linkedinUrl": null,
                "youtubeUrl": null,
                "instagramUrl": null,
                "pintrestUrl": null,
                "lendingtreeUrl": null,
                "bbbUrl": null
              },
              "isSEOEnabled": "false",
              "externalReferenceId" : ""
            }

+ Response 200

    + Body

            {
              "name": "Dieci Lifestyle Spa",
              "alias": "Dieci Lifestyle Spa - Livingston, NJ",
              "emailId": "4568@livelovespa.com",
              "phone": "(973) 716-0101",
              "fax": "(973) 716-0102",
              "websiteUrl": "http://www.diecispa.com/",
              "description": "Specialties\nBridal ServicesMakeup: Makeovers/Lessons/ Faux Lash applicationMassagesFacialsMicrocurrentMicrodermabrasionBody…",
              "keywords": "Hair Salons,Day Spas,Beauty Salon,Beauty Salons,Salons,Massage Therapists",
              "services": "Beauty Salon, Hair Spa",
              "logoUrl": "http://d3cnqzq0ivprch.cloudfront.net/prod/css/images/logo.jpg",
              "coverImageUrl": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/spa.jpg",
              "image1Url": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg",
              "image2Url": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/9fc3f2ba7c1b4dcea38ea76327c617f3.jpeg",
              "image3Url": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/77964cfead164cbf8f9c8dfd039269b0.jpeg",
              "timezone": "Pacific Standard Time",
              "languages": [
                "English",
                "Spanish"
              ],
              "payment": "Visa, MasterCard, American Express, Debit Cards, Check",
              "hoursOfOperations": [
                {
                  "day": "5",
                  "startHour": "7:00",
                  "endHour": "17:30",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "1",
                  "startHour": "8:00",
                  "endHour": "21:00",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "4",
                  "startHour": "8:00",
                  "endHour": "21:00",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "6",
                  "startHour": "9:00",
                  "endHour": "15:00",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "3",
                  "startHour": "8:00",
                  "endHour": "21:00",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "2",
                  "startHour": "8:00",
                  "endHour": "21:00",
                  "isOpen": 1,
                  "comment": ""
                },
                {
                  "day": "0",
                  "startHour": null,
                  "endHour": null,
                  "isOpen": 0,
                  "comment": "Mon closed"
                }
              ],
              "working24x7": 0,
              "location": {
                "address1": "90 W Mount Pleasant Ave",
                "address2": "(btwn Preston Dr. &amp; N. Mitchell Ave.)",
                "city": "Livingston",
                "state": "NJ",
                "zip": "07039",
                "countryCode": "US",
                "countryName": "United States of America"
              },
              "categoryList": [
                "Hair Salons"
              ],
              "socialProfileURLs": {
                "googleUrl": "null",
                "facebookUrl": null,
                "twitterUrl": null,
                "linkedinUrl": null,
                "youtubeUrl": null
              }
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1175][]

+ Response 400

    [1045][]

+ Response 401

    [1047][]

+ Response 401

    [1046][]

+ Response 401

    [1048][]

+ Response 401

    [1049][]

+ Response 401

    [1050][]

+ Response 401

    [1055][]

+ Response 401

    [1056][]

+ Response 401

    [1069][]

+ Response 401

    [1070][]

+ Response 401

    [1190][]


## Delete [/v1/business/{business_id} {apikey}]
Business/sub-reseller can be deleted using:

### Delete Business [DELETE]

Business/sub-reseller can be deleted using:

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X DELETE "https://api.birdeye.com/resources/v1/business/755009344?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" –v

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1175</td>
            <td>No business found with the given id</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1174</td>
            <td>Reseller can't be removed as it has child accounts.</td>
        </tr>
        </tbody>
    </table>

</div>

+ Request (application/json)

    + Headers

            Accept: application/json


+ Response 200 (application/json)

+ Response 400 (application/json)

    [1174][]

+ Response 401 (application/json)

    [1161][]

+ Response 429

    [89][]

+ Response 401 (application/json)

    [1167][]

+ Response 404 (application/json)

    [1175][]

## Status Update [/v1/business/{business_id}/status{?astatus,api_key}]
Business status can be updated using:

### Update the status [PUT]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X PUT "https://api.birdeye.com/resources/v1/business/755009344/status?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&astatus=active" –v

#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1175</td>
            <td>No business found with the given id</td>
        </tr>
        <tr>
            <td>403 Forbidden</td>
            <td>1184</td>
            <td>Status change is not allowed.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1191</td>
            <td>Invalid status.</td>
        </tr>
        </tbody>
    </table>
</div>

+ Parameters

    + business_id (string, required) ... Business id whose status has to be changed. Returned by create business API
    + api_key (string, required) ... Partner specific API key provided by BirdEye for data exchange.
    + status (string, required) ... New status for the business. Valid values are “active/inactive”.

+ Request (application/json)

    + Headers

            Accept: application/json


+ Response 200

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1175][]

+ Response 403

    [1184][]

+ Response 400

    [1191][]


## Child Businesses [/v1/business/child/all{?api_key, pid}]
List of child businesses can be retrieved using:

### Get Child Businesses [GET]

<center><b>Example curl request</b></center>
    curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/business/child/all?pid=32423422&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" –v
<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Parameter</caption>
        <thead>
            <th>Fields</th>
            <th>Constraints</th>
            <th>Description</th>
        </thead>
        <tbody>
            <tr>
                <td>pid</td>
                <td>required</td>
                <td>Reseller/Sub-reseller/Enterprise id</td>
            </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response</b></center>

    [
      {
        "id": 986031488,
        "name": "Central Ohio Endodontics",
        "alias": "Central Ohio Endodontics - Dublin, OH",
        "address": {
          "address1": "5152 Blazer Memorial Pkwy",
          "address2": "Ste 102",
          "city": "Dublin",
          "state": "OH",
          "zip": "43017",
          "countryCode": "US",
          "countryName": "United States of America"
        },
        "phone": "(614) 896-2801",
        "type": "Business",
        "status": "active",
        "createdOn": "Dec 04, 2013",
      },
      {
        "id": 768996864,
        "name": "Environmental Pest Management",
        "alias": "Environmental Pest Management - Westerville, OH",
        "address": {
          "address1": "200 Hoff Rd",
          "address2": "Unit P",
          "city": "Westerville",
          "state": "OH",
          "zip": "43082",
          "countryCode": "US",
          "countryName": "United States of America"
        },
        "phone": "(614) 771-8605",
        "type": "Business",
        "status": "active",
        "createdOn": "Dec 05, 2013",
      },
      {
        "id": 144670708364016,
        "name": "Sub-reseller",
        "alias": "Sub-reseller",
        "status": "active",
        "createdOn": "Nov 05, 2013",
        "type": "Reseller",
        "childCount": 1
      },
      {
        "id": 144670708364322,
        "name": "Holiday Inn",
        "alias": "Holiday Inn",
        "status": "active",
        "createdOn": "Nov 01, 2013",
        "type": "Enterprise-Location",
        "childCount": 2
      }
    ]

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>
<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Response Body</caption>
        <thead>
            <th>Fields</th>
            <th>Description</th>
        </thead>
        <tbody>
            <tr>
                <td>id</td>
                <td>Business ID</td>
            </tr>
            <tr>
                <td>name</td>
                <td>Business Name</td>
            </tr>
            <tr>
                <td>alias</td>
                <td>Business alias</td>
            </tr>
            <tr>
                <td>address</td>
                <td>Business address. note: available only when it is SMB/Enterprise Location</td>
            </tr>
            <tr>
                <td>phone</td>
                <td>Business phone</td>
            </tr>
            <tr>
                <td>status</td>
                <td>Payment status</td>
            </tr>
            <tr>
                <td>createdOn</td>
                <td>Business singup date</td>
            </tr>
            <tr>
                <td>type</td>
                <td>Type of account. e.g. Reseller (when it is a sub-reseller), Enterprise-Location (location based enterprise), Enterprise-Product (product based enterprise), Business (SMB/Enterprise location), Product (Enterprise product)</td>
            </tr>
            <tr>
                <td>childCount</td>
                <td>Child account count. note: applicable only for Reseller, Enterprise-Location, Enterprise-Product</td>
            </tr>
        </tbody>
    </table>
</div>

+ Parameters

    + api_key (string, required) ... Partner specific API key provided by BirdEye for data exchange.

+ Request (application/json)

    + Headers

            Accept: application/json


+ Response 200 (application/json)

    + Body

    [
      {
        "id": 986031488,
        "name": "Central Ohio Endodontics",
        "alias": "Central Ohio Endodontics - Dublin, OH",
        "address": {
          "address1": "5152 Blazer Memorial Pkwy",
          "address2": "Ste 102",
          "city": "Dublin",
          "state": "OH",
          "zip": "43017",
          "countryCode": "US",
          "countryName": "United States of America"
        },
        "phone": "(614) 896-2801",
        "type": "Business",
        "status": "active",
        "createdOn": "Dec 04, 2013",
      },
      {
        "id": 768996864,
        "name": "Environmental Pest Management",
        "alias": "Environmental Pest Management - Westerville, OH",
        "address": {
          "address1": "200 Hoff Rd",
          "address2": "Unit P",
          "city": "Westerville",
          "state": "OH",
          "zip": "43082",
          "countryCode": "US",
          "countryName": "United States of America"
        },
        "phone": "(614) 771-8605",
        "type": "Business",
        "status": "active",
        "createdOn": "Dec 05, 2013",
      },
      {
        "id": 144670708364016,
        "name": "Sub-reseller",
        "alias": "Sub-reseller",
        "status": "active",
        "createdOn": "Nov 05, 2013",
        "type": "Reseller",
        "childCount": 1
      },
      {
        "id": 144670708364322,
        "name": "Holiday Inn",
        "alias": "Holiday Inn",
        "status": "active",
        "createdOn": "Nov 01, 2013",
        "type": "Enterprise-Location",
        "childCount": 2
      }
    ]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]


<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>

## Public profile tabs [/v1/business/tabs{?api_key,businessId}]
Update public profile business can be done using:

### Update public profile of Businesses [POST]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{\"profileTabs\":[{  \"tabType\":\"map\",  \"label\":\"map location\",  \"showOnProfile\":0,  \"showOnWebsite\":1,  \"showOnFacebook\":1, \"url\":\"http://www.mapurl.com\"},{  \"tabType\":\"Feedback\",  \"label\":\"Feedback\",  \"showOnProfile\":0,  \"showOnWebsite\":1,  \"showOnFacebook\":1, \"url\":\"http://www.feedback.com\" }]}" "https://api.birdeye.com/resources/v1/business/tabs?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&businessId=755009344" –v

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>profileTabs</td>
            <td>Array contains following fields</td>
        </tr>
        <tr>
            <td>tabType</td>
            <td>Valid values are "Reviews", "Feedback", "Aboutus", "Map", "Appointment" or "BusinessOwner" (Required)</td>
        </tr>
        <tr>
            <td>label</td>
            <td>Name on the tab. Max length 30 character.</td>
        </tr>
        <tr>
            <td>showOnProfile</td>
            <td>Valid values "0" or "1" (required)</td>
        </tr>
        <tr>
            <td>showOnWebsite</td>
            <td>Valid values "0" or "1" (required)</td>
        </tr>
        <tr>
            <td>showOnFacebook</td>
            <td>Valid values "0" or "1" (required)</td>
        </tr>
        <tr>
            <td>url</td>
            <td>Valid url for tab.</td>
        </tr>
        </tbody>
    </table>
</div>


> __Notes__

> - _For reviews tab, only update label is applicable._


#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>400 Unauthorized</td>
            <td>1265</td>
            <td>Value for showOnFacebook is mandatory.</td>
        </tr>
        <tr>
            <td>400 Unauthorized</td>
            <td>1266</td>
            <td>Value for showOnProfile is mandatory.</td>
        </tr>
        <tr>
            <td>400 Unauthorized</td>
            <td>1267</td>
            <td>Value for showOnWebsite is mandatory.</td>
        </tr>
        <tr>
            <td>400 Unauthorized</td>
            <td>1268</td>
            <td>TabType is mandatory field.</td>
        </tr>
        <tr>
            <td>400 Unauthorized</td>
            <td>1269</td>
            <td>Max length for lable is 30.</td>
        </tr>
        <tr>
            <td>400 Unauthorized</td>
            <td>1270</td>
            <td>Max length for URL is 1000.</td>
        </tr>
        </tbody>
    </table>
</div>

+ Parameters

    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 401

    [1011][]

+ Response 400

    [1265][]

+ Response 400

    [1266][]

+ Response 400

    [1267][]

+ Response 400

    [1268][]

+ Response 400

    [1269][]

+ Response 400

    [1270][]

## Get Hierarchy [/v1/business/{businessId}/hierachy?api_key]
Get parent/child hierarchy for an enterprise

### Get hierarchy for an enterprise [GET]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/business/143424324234234/hierarchy?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" –v

#### Response

<center><b>Example response</b></center>


    {
        "id": 143424324234234,
        "name": "Psychiatry",
        "alias": null,
        "address": null,
        "phone": null,
        "status": "active",
        "createdOn": "Sep 03, 2016",
        "type": "Department",
        "websiteUrl": null,
        "child": [
        {
            "id": 147293020095434,
            "name": "Addiction Psychiatry",
            "alias": null,
            "address": null,
            "phone": null,
            "status": "active",
            "createdOn": "Sep 03, 2016",
            "type": "Specialty",
            "websiteUrl": null,
            "child": [
            {
                "id": 147293022348715,
                "name": "NYC Center for Treatment and Research",
                "alias": null,
                "address": null,
                "phone": null,
                "status": "active",
                "createdOn": "Sep 03, 2016",
                "type": "Practice",
                "websiteUrl": null,
                "child": [
                {
                    "id": 1467324432430144,
                    "name": "Anna B. B., M.D",
                    "alias": "Anna B. B., M.D",
                    "address": {
                        "address1": "NYC Center for Treatment and Research",
                        "address2": "561 West 35th Street, 11th Floor",
                        "city": "New York",
                        "state": "NY",
                        "zip": "10036",
                        "countryCode": "US",
                        "countryName": "United States of America"
                    },
                    "phone": "646-xxx-xxxx ",
                    "status": "active",
                    "createdOn": "Jun 30, 2016",
                    "type": "Physician",
                    "websiteUrl": "https://google.org/abbnyc",
                    "child": []
                }]
            }]
        }],
        "parents": [
        {
           "id": 148189355091299,
           "name": "Neurology",
           "alias": null,
           "address": null,
           "phone": null,
           "status": "active",
           "createdOn": "Dec 16, 2016",
           "type": "Specialty",
           "websiteUrl": null,
           "tags": null,
           "child": [],
           "parents": []
        }]
    }
<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        </tbody>
    </table>
</div>

+ Parameters
    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 401

    [1011][]

## Add/Remove Child in Hierarchy [/v1/business/{businessId}/hierachy?{api_key, cid}]
Add/Remove child in hierarchy

### Add child in hierarchy [PUT]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X PUT "https://api.birdeye.com/resources/v1/business/143424324234234/hierarchy?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&cid=143656522752665&merge_reviews=0" –v

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
            <th>Fields</th>
            <th>Constraints</th>
            <th>Description</th>
        </thead>
        <tbody>
            <tr>
                <td>merge_reviews</td>
                <td>optional, integer</td>
                <td>Whether to include child reviews in parent review set or not. Valid values are 0 or 1. Default value is 0</td>
            </tr>
            <tr>
                <td>zip</td>
                <td>required, string</td>
                <td>Postal code of the business location</td>
            </tr>
            <tr>
                <td>type</td>
                <td>type</td>
                <td>Business type. Valid values are “Business, Enterprise-Location, Enterprise-Product, Reseller”. Default is “Business”.</td>
            </tr>
            <tr>
                <td>phone</td>
                <td>optional, string</td>
                <td>Business phone</td>
            </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example response</b></center>


    {
        "id": 143424324234234,
        "name": "Psychiatry",
        "alias": null,
        "address": null,
        "phone": null,
        "status": "active",
        "createdOn": "Sep 03, 2016",
        "type": "Department",
        "websiteUrl": null,
        "child": [
        {
            "id": 143656522752665,
            "name": "Adult Psychiatry",
            "alias": null,
            "address": null,
            "phone": null,
            "status": "active",
            "createdOn": "Sep 03, 2016",
            "type": "Specialty",
            "websiteUrl": null,
            "child": []
        },
        {
            "id": 147293020095434,
            "name": "Addiction Psychiatry",
            "alias": null,
            "address": null,
            "phone": null,
            "status": "active",
            "createdOn": "Sep 03, 2016",
            "type": "Specialty",
            "websiteUrl": null,
            "child": [
            {
                "id": 147293022348715,
                "name": "NYC Center for Treatment and Research",
                "alias": null,
                "address": null,
                "phone": null,
                "status": "active",
                "createdOn": "Sep 03, 2016",
                "type": "Practice",
                "websiteUrl": null,
                "child": [
                {
                    "id": 1467324432430144,
                    "name": "Anna B. B., M.D",
                    "alias": "Anna B. B., M.D",
                    "address": {
                        "address1": "NYC Center for Treatment and Research",
                        "address2": "561 West 35th Street, 11th Floor",
                        "city": "New York",
                        "state": "NY",
                        "zip": "10036",
                        "countryCode": "US",
                        "countryName": "United States of America"
                    },
                    "phone": "646-xxx-xxxx ",
                    "status": "active",
                    "createdOn": "Jun 30, 2016",
                    "type": "Physician",
                    "websiteUrl": "https://google.org/abbnyc",
                    "child": []
                }]
            }]
        }]
    }
<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1360</td>
            <td>Hierarchy is not supported for this parent type</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1361</td>
            <td>Hierarchy is not supported for this child type</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1362</td>
            <td>{Child type} cannot be added under {Parent type}</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1363</td>
            <td>Invalid parent child mapping</td>
        </tr>
        </tbody>
    </table>
</div>

+ Parameters
    + businessId (string, required) ... the Parent ID
    + api_key (string, required) ... the API key
    + cid (string, required) ... the Child ID

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 401

    [1011][]

+ Response 400

    [1360][]

+ Response 400

    [1361][]

+ Response 400

    [1362][]

+ Response 400

    [1363][]


### Remove child from hierarchy [DELETE]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X DELETE "https://api.birdeye.com/resources/v1/business/143424324234234/hierarchy?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&cid=143656522752665" –v

#### Response

<center><b>Example response</b></center>


    {
        "id": 143424324234234,
        "name": "Psychiatry",
        "alias": null,
        "address": null,
        "phone": null,
        "status": "active",
        "createdOn": "Sep 03, 2016",
        "type": "Department",
        "websiteUrl": null,
        "child": [
        {
            "id": 147293020095434,
            "name": "Addiction Psychiatry",
            "alias": null,
            "address": null,
            "phone": null,
            "status": "active",
            "createdOn": "Sep 03, 2016",
            "type": "Specialty",
            "websiteUrl": null,
            "child": [
            {
                "id": 147293022348715,
                "name": "NYC Center for Treatment and Research",
                "alias": null,
                "address": null,
                "phone": null,
                "status": "active",
                "createdOn": "Sep 03, 2016",
                "type": "Practice",
                "websiteUrl": null,
                "child": [
                {
                    "id": 1467324432430144,
                    "name": "Anna B. B., M.D",
                    "alias": "Anna B. B., M.D",
                    "address": {
                        "address1": "NYC Center for Treatment and Research",
                        "address2": "561 West 35th Street, 11th Floor",
                        "city": "New York",
                        "state": "NY",
                        "zip": "10036",
                        "countryCode": "US",
                        "countryName": "United States of America"
                    },
                    "phone": "646-xxx-xxxx ",
                    "status": "active",
                    "createdOn": "Jun 30, 2016",
                    "type": "Physician",
                    "websiteUrl": "https://google.org/abbnyc",
                    "child": []
                }]
            }]
        }]
    }
<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        </tbody>
    </table>
</div>

+ Parameters
    + businessId (string, required) ... the Parent ID
    + api_key (string, required) ... the API key
    + cid (string, required) ... the Child ID

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 401

    [1011][]


# Group User

APIs related to user.

## Signup [/v1/user/signup{?bid,api_key}]

Users can be created using:

### Create User [POST]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{\"firstName\" : \"Rhonda\", \"lastName\" : \"Spears\", \"userEmailId\" : \"rhonda@reviewmanagement.com\", \"phone\" : \"408-xxx-xxxx\",\"userRole\" : \"owner\",\”userPassword\”:\”xxxxxxx\”,\”sendInvite\”:\”false\”}" "https://api.birdeye.com/resources/v1/user/signup?bid=755009344&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" –v

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>firstName</td>
            <td>First name of the user (optional)</td>
        </tr>
        <tr>
            <td>lastName</td>
            <td>Last name of the user (optional)</td>
        </tr>
        <tr>
            <td>userEmailId</td>
            <td>Email ID of the user that’s being added to this business</td>
        </tr>
        <tr>
            <td>phone</td>
            <td>Mobile number of the user (optional)</td>
        </tr>
        <tr>
            <td>userRole</td>
            <td>User role. Valid values are “owner”,”admin”. Default is “owner”.</td>
        </tr>
        <tr>
            <td>userPassword</td>
            <td>User password</td>
        </tr>
        <tr>
            <td>sendInvite</td>
            <td>Whether to send invitation to user or not. Valid values are “true”/”false”. Default is “true”.</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
    <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1033</td>
            <td>You are not authorized to perform this action</td>
        </tr>
        <tr>
            <td>409 Conflict</td>
            <td>1160</td>
            <td>User is already associated with business.</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1175</td>
            <td>No business found with the given id</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1052</td>
            <td>User email id cannot be blank</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1053</td>
            <td>User email id is invalid</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1054</td>
            <td>User email id cannot be more than 40 characters</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1014</td>
            <td>User role cannot be blank</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1013</td>
            <td>Unknown user role</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1057</td>
            <td>First name cannot be more than 50 characters</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1059</td>
            <td>Last name cannot be more than 50 characters</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

            {
              "firstName": "Rhonda",
              "lastName": "Spears",
              "userEmailId": "rhonda@reviewmanagement.com",
              "phone": "408-xxx-xxxx",
              "userRole": "owner",
              "userPassword": "xxxxxxx",
              "sendInvite": "false"
            }

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 401

    [1033][]

+ Response 409

    [1160][]

+ Response 404

    [1175][]

+ Response 400

    [1052][]

+ Response 400

    [1053][]

+ Response 400

    [1054][]

+ Response 400

    [1014][]

+ Response 400

    [1013][]

+ Response 400

    [1057][]

+ Response 400

    [1059][]

## Delete [/v1/user/remove{?bid,api_key,email}]
Users access from a business can be revoked using:

+ Parameters

    + bid (string, required) ... Business id from which user access has to be revoked
    + api_key (string, required) ... Partner specific API key provided by BirdEye for data exchange.
    + email (string, required) ... Email id of the user whose access has to be revoked

### Delete a user [DELETE]


<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X DELETE "https://api.birdeye.com/resources/v1/user/remove?bid=755009344&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&email=rhonda@reviewmanagement.com" –v

#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1188</td>
            <td>User is not associated with the business.</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1189</td>
            <td>User with given email id not found.</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1175</td>
            <td>No business found with the given id</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 400

    [1059][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1188][]

+ Response 404

    [1189][]

+ Response 404

    [1175][]

## Password [/v1/user/forgotpassword{?api_key,email}]
Forgot password email can be sent using:

+ Parameters

    + api_key (string, required) ... Partner specific API key provided by BirdEye for data exchange.
    + email (string, required) ... Email id of the user whose access has to be revoked


### Forgot Password [POST]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST "https://api.birdeye.com/resources/v1/user/forgotpassword?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&email=rhonda@reviewmanagement.com" –v

### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1177</td>
            <td>User is not authorized to perform any action on any business</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1189</td>
            <td>User with given email id not found.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1052</td>
            <td>User email id cannot be blank</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 400

    [1052][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 401

    [1177][]

+ Response 404

    [1189][]

## Get [/v1/user/details{?api_key,email}]
User details can be retrieved using:

+ Parameters

    + api_key (string, required) ... Partner specific API key provided by BirdEye for data exchange.
    + email (string, required) ... Email id of the user whose details to be retrieved

### Get details of a user [GET]


<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/user/details?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&email=147476560554272@birdeye.com" –v

#### Response

<center><b>Example Response</b></center>

    {
        "emailId": "147476560554272@birdeye.com",
        "firstName": null,
        "lastName": null,
        "phone": null,
        "businessList": [
                            {
                              "businessId": 147476560554272,
                              "businessName": "single-location-test-6",
                              "businessAlias": "single-location-test-6"
                            }
                        ]
    }

<div class="paramsTableWrap">
   <table class="paramsTable">
      <caption>Error Codes</caption>
      <thead>
            <tr>
                <th>HTTP Status</th>
                <th>BirdEye error code</th>
                <th>Description</th>
            </tr>
      </thead>
      <tbody>
            <tr>
                <td>401 Unauthorized</td>
                <td>1161</td>
                <td>Invalid API key</td>
            </tr>
            <tr>
                <td>429 Too Many Requests</td>
                <td>89</td>
                <td>Rate limit exceeded</td>
            </tr>
            <tr>
                <td>404 Not Found</td>
                <td>1188</td>
                <td>User is not associated with the business.</td>
            </tr>
            <tr>
                <td>404 Not Found</td>
                <td>1189</td>
                <td>User with given email id not found.</td>
            </tr>
            <tr>
                <td>404 Not Found</td>
                <td>1010</td>
                <td>No user found with the given id</td>
            </tr>
      </tbody>
   </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1188][]

+ Response 404

    [1189][]

+ Response 404

    [1010][]

# Group Reviews

## Get [/v1/review/businessId/{businessId}{?sindex,count,api_key}]
Business review(s) from BirdEye platform can be fetched using following filter in request payload:

+ Parameters

    + business_id (string, required) ... the business ID
    + sindex (integer, required) ... the starting index of the reviews
    + count (integer, required) ... the number of reviews to query
    + api_key (string, required) ... the API key

### Get Reviews [POST]

#### Request

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d {  \"fromDate\":\"04/01/2013\", \"toDate\":\"05/3/2015\", \"updateFromDate\":\"04/01/2013\", \"updateToDate\":\"05/3/2015\", \"sources\":[\"google\",\"citysearch\"], \"ratings\":[1,2,3,4,5,0],\"searchStr\":\"Awesome\",\"subBusinessIds\":[145308764185002,145308769721320,145308702026610],\"tags\":[\"tag_1\",\"tag_2\"],\"includeNonAggregatedReviews\":true }
    "https://api.birdeye.com/resources/v1/review/businessId/755009344_1?sindex=0&count=25&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

<center><b>Example Payload</b></center>

    {
      "fromDate":"04/01/2013",
      "toDate":"05/3/2015",
      "updateFromDate":"04/01/2013",
      "updateToDate":"05/3/2015",
      "sources":["google","citysearch"],
      "ratings":[1,2,3,4,5,0],
      "searchStr":"test string",
      "subBusinessIds":[145308764185002,145308769721320,145308702026610],
      "statuses":["published","parked"],
      "allChild":"true",
      "tags":["tag_1","tag_2"],
      "includeNonAggregatedReviews":true
    }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>fromDate</td>
            <td>Review date (start) e.g. "04/01/2013"</td>
        </tr>
        <tr>
            <td>toDate</td>
            <td>Review date (end) e.g. "04/01/2013"</td>
        </tr>
        <tr>
            <td>updateFromDate</td>
            <td>Review response date (start) e.g. "04/01/2013"</td>
        </tr>
        <tr>
            <td>updateToDate</td>
            <td>Review response date (end) e.g. "04/01/2013" </td>
        </tr>
        <tr>
            <td>sources</td>
            <td>Aggregation source name e.g. "google","citysearch" etc. Note: use "our_website" to filter reviews posted on Birdeye platform or use "direct_feedback" for direct feedback. </td>
        </tr>
        <tr>
            <td>ratings</td>
            <td>Review rating e.g. "1","2"</td>
        </tr>
        <tr>
            <td>searchStr</td>
            <td>String that is contained by review</td>
        </tr>
        <tr>
            <td>subBusinessIds</td>
            <td>BusinessIds under enterprise account</td>
        </tr>
        <tr>
            <td>statuses</td>
            <td>Review status. Valid values are "published","parked","all". Default is "published" only</td>
        </tr>
        <tr>
            <td>allChild</td>
            <td>Get review from all child ignoring merge reviews flag configured at parent/child relationship level</td>
        </tr>
        <tr>
            <td>tags</td>
            <td>Reviews with assigned tags</td>
        </tr>
         <tr>
            <td>includeNonAggregatedReviews</td>
            <td>Include Reviews whose auto-crawling is blocked e.g. PressGaney</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response</b></center>

    [
    {
        "reviewId": "3947127516862",
        "rating": 4,
        "comments": "Our water polo team stayed there for 4 nights while in for a tournament. It fit our needs perfectly. The rooms were squeaky clean and comfortable. The housekeeping staff was super efficient and k...",
        "title": null,
        "reviewer": {
            "firstName": null,
            "lastName": null,
            "nickName": "Jen C.",
            "thumbnailUrl": "http://d3cnqzq0ivprch.cloudfront.net/demo/css/images/default-profile.png",
            "emailId": null,
            "facebookId": null,
            "city": "Ann Arbor",
            "state": "MI"
        },
        "reviewUrl": "http://www.citysearch.com/not_recommended_reviews/Knzq0i-RsFqWRaNKNWOQbw",
        "sourceType": "citysearch",
        "reviewDate": "Aug 01, 2014",
        "response": null,
        "responseDate": null,
        "featured": 1,
        "businessId": "755009344",
        "uniqueReviewUrl":"https://birdeye.com/websiter-755009344/review/3947127516862",
        "businessName":"Websiter",
        "businessType":"Location",
        "status":"Published",
        "enableReply":true
    },
    {
        "reviewId": "3947077656849",
        "rating": 4,
        "comments": "Was scared when I saw that is was more if a motel the hotel, but for one night we would give it a try. The rooms were clean and the desk help was also good. It was a little noise but I fell aslee...",
        "title": null,
        "reviewer": {
            "firstName": null,
            "lastName": null,
            "nickName": "Stella S.",
            "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/4b7339a2c966485ab58ceaf7ae49e91e.jpeg",
            "emailId": null,
            "facebookId": null,
            "city": "Diamond Bar",
            "state": "CA"
        },
        "sourceType": "pressGaney",
        "reviewDate": "Jul 31, 2014",
        "response": null,
        "responseDate": null,
        "featured": 0,
        "businessId": "755009344",
        "uniqueReviewUrl":"https://birdeye.com/websiter-755009344/review/3942327516353",
        "businessName":"Websiter",
        "businessType":"Location",
        "status":"Parked",
        "enableReply":false
    }
    ]

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Response Body</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>rating</td>
            <td>Overall rating for the review, in case of direct feedback and facebook recommendations it will be 0</td>
        </tr>
         <tr>
            <td>recommended</td>
            <td>For Facebook recommendations, value will be 1, Non recommended review will have value set as 0</td>
        </tr>
        <tr>
            <td>comments</td>
            <td>Review comments</td>
        </tr>
        <tr>
            <td>title</td>
            <td>Review title</td>
        </tr>
        <tr>
            <td>reviewer</td>
            <td>Reviewer information</td>
        </tr>
        <tr>
            <td>reviewURL</td>
            <td>Review URL if it is an aggregated review</td>
        </tr>
        <tr>
            <td>sourceType</td>
            <td>Source of the review if it is an aggregated review.
            "Direct Feedback" would indicate the review is a Direct Feedback.</td>
        </tr>
        <tr>
            <td>reviewDate</td>
            <td>Review date</td>
        </tr>
        <tr>
            <td>response</td>
            <td>Response to the review submitted by business</td>
        </tr>
        <tr>
            <td>responseDate</td>
            <td>Response date</td>
        </tr>
        <tr>
            <td>featured (x) </td>
            <td> x = 0 if review not featured, x > 0 stands for review order if featured review.</td>
        </tr>
        <tr>
            <td>enableReply</td>
            <td>Whether a review reply is supported via Birdeye API or not.
            <br>
            <b>True :</b> For source Google, Facebook, Rent.com, Aparmentguide, Caredash, Birdeye, DirectFeedback or if Managed service is enabled
            <br>
            <b>False :</b> Default value or if it does not satisfy 'True' condition</td>
        </tr>
        </tbody>
    </table>
</div>

For facebook sourcetype, following table can be used to check recommendations.

| Recommended                              | Overall Rating | What does it mean                     |
|------------------------------------------|----------------|---------------------------------------|
| 1                                        | 0              | Recommended Facebook review           |
| 0                                        | 0              | Non Recommended Facebook review       |
| Does not have  any value (Null or Blank) | 1-5            | Facebook review with non-zero rating. |

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1163</td>
            <td>Invalid start index value</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1164</td>
            <td>Invalid result count value</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1186</td>
            <td>Invalid from date. Allowed format is "MM/dd/yyyy"</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1187</td>
            <td>Invalid to date. Allowed format is "MM/dd/yyyy"</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1227</td>
            <td>Invalid updated from date. Allowed format is "MM/dd/yyyy"</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1228</td>
            <td>Invalid updated to date. Allowed format is "MM/dd/yyyy"</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1244</td>
            <td>Maximum 5 keywords can be selected for filter.</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

    + Body

            [
                {
                    "reviewId": "1858537291",
                    "rating": 0,
                    "comments": "Ordered earlier today, delivered fast..exactly what I ordered..thank you so much!",
                    "title": null,
                    "reviewer": {
                      "firstName": "Sandy Rowe",
                      "lastName": "Johncox",
                      "nickName": "Sandy Rowe Johncox",
                      "thumbnailUrl": "https://ddjkm7n7lx.cloudfront.net/reviewer/dc42f6d8b2b84dc0b688c43e616.jpeg",
                      "facebookId": "638309687"
                    },
                    "reviewURL": "https://www.facebook.com/Imp-Flow-17565744/reviews",
                    "sourceType": "Facebook",
                    "reviewDate": "Jan 20, 2014",
                    "response": "Thanks",
                    "responseDate": "Feb 18, 2014",
                    "recommended": 1
                },
                {
                    "reviewId": "73748574902",
                    "rating": 0,
                    "comments": "I am a long time customer and love Dieici. I am there at least once a week. I have never been disappointed with any service. I love all the girls. The customer service is beyond a 10. I also love the new addition Wish to the salon! Wish is a woman's clothing boutique. What could be better...beauty and fashion all in one spot!!! Dieci keeps getting better and better!",
                    "title": null,
                    "reviewer": {
                      "firstName": "Jennifer",
                      "lastName": "Bennett",
                      "nickName": "Jennifer Bennett",
                      "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/9a070cf98f014f5d9b06987dcc9c48fe.jpeg",
                      "emailId": "jbennett@gmail.com",
                      "facebookId": null,
                      "city": "Cedar Knolls",
                      "state": " NJ"
                    },
                    "reviewUrl": "https://birdeye.com/imp-flower-15229573096",
                    "sourceType": "Direct Feedback",
                    "reviewDate": "Jan 20, 2019",
                    "response": "Thanks",
                    "responseDate": "Feb 18, 2019",
                    "featured": 0
                }
            ]

+ Response 400

    [1163][]

+ Response 400

    [1164][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 400

    [1244][]

## Get Competitor Review [/v1/review/businessId/{CompetitorEnterpriseBusinessId}{?sindex,count,api_key,isCompetitor}]
Get Competitor Business review(s) from BirdEye platform can be fetched using following filter in request payload:

+ Parameters

    + sindex (integer, required) ... the starting index of the reviews
    + count (integer, required) ... the number of reviews to query
    + api_key (string, required) ... the API key
    + isCompetitor(boolean,required)...True for Competitor Review

### Get Competitor Reviews [POST]

#### Request

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d {  \"fromDate\":\"04/01/2013\", \"toDate\":\"05/3/2015\", \"updateFromDate\":\"04/01/2013\", \"updateToDate\":\"05/3/2015\", \"sources\":[\"google\",\"citysearch\"], \"ratings\":[1,2,3,4,5,0], \"searchStr\":\"Awesome\",\"subBusinessIds\":[145308764185002,145308769721320,145308702026610] }
    "https://api.birdeye.com/resources/v1/review/businessId/755009344?sindex=0&count=25&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&isCompetitor=true" -v

<center><b>Example Payload</b></center>

    {
      "fromDate":"04/01/2013",
      "toDate":"05/3/2015",
      "updateFromDate":"04/01/2013",
      "updateToDate":"05/3/2015",
      "sources":["google","citysearch"],
      "ratings":[1,2,3,4,5,0],
      "searchStr":"test string",
      "subBusinessIds":[145308764185002,145308769721320,145308702026610],
      "statuses":["published","parked"]
    }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Constraint</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>fromDate</td>
            <td>Review date (start) e.g. "04/01/2013"</td>
            <td>Optional</td>
        </tr>
        <tr>
            <td>toDate</td>
            <td>Review date (end) e.g. "04/01/2013"</td>
            <td>Optional</td>
        </tr>
        <tr>
            <td>updateFromDate</td>
            <td>Review response date (start) e.g. "04/01/2013"</td>
            <td>Optional</td>
        </tr>
        <tr>
            <td>updateToDate</td>
            <td>Review response date (end) e.g. "04/01/2013" </td>
            <td>Optional</td>
        </tr>
        <tr>
            <td>sources</td>
            <td>Aggregation source name e.g. "google","citysearch" etc. Note: use "our_website" to filter reviews on BirdEye platform </td>
            <td>Optional</td>
        </tr>
        <tr>
            <td>ratings</td>
            <td>Review rating e.g. "1","2"</td>
            <td>Optional</td>
        </tr>
        <tr>
            <td>searchStr</td>
            <td>String that is contained by review</td>
            <td>Optional</td>
        </tr>
        <tr>
            <td>subBusinessIds</td>
            <td>Competitor BusinessIds under enterprise competitor account</td>
            <td>Required</td>
        </tr>
        <tr>
            <td>statuses</td>
            <td>Review status. Valid values are "published","parked","all". Default is "published" only</td>
            <td>Optional</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response</b></center>

    [
    {
        "reviewId": "3947127516862",
        "rating": 4,
        "comments": "Our water polo team stayed there for 4 nights while in for a tournament. It fit our needs perfectly. The rooms were squeaky clean and comfortable. The housekeeping staff was super efficient and k...",
        "title": null,
        "reviewer": {
            "firstName": null,
            "lastName": null,
            "nickName": "Jen C.",
            "thumbnailUrl": "http://d3cnqzq0ivprch.cloudfront.net/demo/css/images/default-profile.png",
            "emailId": null,
            "facebookId": null,
            "city": "Ann Arbor",
            "state": "MI"
        },
        "reviewUrl": "http://www.citysearch.com/not_recommended_reviews/Knzq0i-RsFqWRaNKNWOQbw",
        "sourceType": "citysearch",
        "reviewDate": "Aug 01, 2014",
        "response": null,
        "responseDate": null,
        "featured": 1,
        "businessId": "755009344",
        "uniqueReviewUrl":"https://birdeye.com/websiter-755009344/review/3947127516862",
        "businessName":"Websiter",
        "businessType":"Location"
    },
    {
        "reviewId": "3947077656849",
        "rating": 4,
        "comments": "Was scared when I saw that is was more if a motel the hotel, but for one night we would give it a try. The rooms were clean and the desk help was also good. It was a little noise but I fell aslee...",
        "title": null,
        "reviewer": {
            "firstName": null,
            "lastName": null,
            "nickName": "Stella S.",
            "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/4b7339a2c966485ab58ceaf7ae49e91e.jpeg",
            "emailId": null,
            "facebookId": null,
            "city": "Diamond Bar",
            "state": "CA"
        },
        "reviewUrl": "http://www.citysearch.com/biz/holiday-inn-express-san-jose-central-city-san-jose?hrid=mJpfRj7QaZzxaaLFRfR48w&nb=1",
        "sourceType": "citysearch",
        "reviewDate": "Jul 31, 2014",
        "response": null,
        "responseDate": null,
        "featured": 0,
        "businessId": "755009344",
        "uniqueReviewUrl":"https://birdeye.com/websiter-755009344/review/3942327516353",
        "businessName":"Websiter",
        "businessType":"Location"
    }
    ]

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1163</td>
            <td>Invalid start index value</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1164</td>
            <td>Invalid result count value</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1186</td>
            <td>Invalid from date. Allowed format is "MM/dd/yyyy"</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1187</td>
            <td>Invalid to date. Allowed format is "MM/dd/yyyy"</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1227</td>
            <td>Invalid updated from date. Allowed format is "MM/dd/yyyy"</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1228</td>
            <td>Invalid updated to date. Allowed format is "MM/dd/yyyy"</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

    + Body

            [
                {
                    "reviewId": "73748574902",
                    "rating": 5,
                    "comments": "I am a long time customer and love Dieici. I am there at least once a week. I have never been disappointed with any service. I love all the girls. The customer service is beyond a 10. I also love the new addition Wish to the salon! Wish is a woman's clothing boutique. What could be better...beauty and fashion all in one spot!!! Dieci keeps getting better and better!",
                    "title": null,
                    "reviewer": {
                      "firstName": "Jennifer",
                      "lastName": "Bennett",
                      "nickName": null,
                      "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/9a070cf98f014f5d9b06987dcc9c48fe.jpeg",
                      "emailId": "jbennett@gmail.com",
                      "facebookId": "638309687",
                      "city": "Cedar Knolls",
                      "state": " NJ"
                    },
                    "reviewURL": "http://www.citysearch.com/biz/dieci-lifestyle-spa-livingston",
                    "sourceType": "citysearch",
                    "reviewDate": "Jan 20, 2014",
                    "response": "Thanks",
                    "responseDate": "Feb 18, 2014",
                    "featured": 0
                }
            ]

+ Response 400

    [1163][]

+ Response 400

    [1164][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 400

    [1244][]



## Create [/v1/review/business/{business_id}{?api_key}]
New review on BirdEye platform can be created using:

+ Parameters

    + business_id (string, required) ... the Business ID
    + api_key (string, required) ... the API key

### Post a new review [POST]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST-d "{\"overallRating\" : \"5\", \"comments\" : \"Awesome experience\", \"reviewDate\" : \"2014-04-04T00:00:00\", \"response\" : \"Thanks for the review\", \"responseDate\" : \"2014-04-06T00:00:00\", \"source\": \"website\",\"aggregationSource\": \"citysearch\", \"reviewer\" : {\"nickName\" : \"Sachin G\",\"thumbnailUrl\" : \"http://birdeye.com/reviewer/default.jpd\", \"emailId\":\"saching@gmail.com\", \"location\" : {\"city\" : \"Atlanta\", \"state\" : \"GA\"}}}" "https://api.birdeye.com/resources/v1/review/business/755009344_1?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

#### Request

<center><b>Example Payload</b></center>

    {
      "overallRating": "5",
      "comments": "Awesome experience",
      "reviewDate": "2014-04-04T00:00:00",
      "response": "Thanks for the review",
      "responseDate": "2014-04-06T00:00:00",
      "source": "website",
      "aggregationSource": "citysearch",
      "reviewer": {
        "nickName": "Sachin G",
        "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/9a070cf98f014f5d9b06987dcc9c48fe.jpeg",
        "emailId": "saching@gmail.com",
        "location": {
          "city": "Atlanta",
          "state": "GA"
        }
      }
    }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>overallRating</td>
            <td>Review rating</td>
        </tr>
        <tr>
            <td>comments</td>
            <td>Review comment</td>
        </tr>
        <tr>
            <td>reviewDate (optional)</td>
            <td>Review date. Default is current date. e.g. “2014-03-16T00:00:00”</td>
        </tr>
        <tr>
            <td>response (optional)</td>
            <td>Response for the review submitted by business</td>
        </tr>
        <tr>
            <td>responseDate (optional)</td>
            <td>Response date. Default is current date. e.g. “2014-03-16T00:00:00”</td>
        </tr>
        <tr>
            <td>source (optional)</td>
            <td>Source from where review was submitted. Allowed values are “website”,”tablet”. Default value is
                “website”.
            </td>
        </tr>
        <tr>
            <td>aggregationSource (optional)</td>
            <td>AggregationSource where review is originally posted. e.g. "citysearch" or "google"
            </td>
        </tr>
        <tr>
            <td>reviewer (optional)</td>
            <td>Reviewer info. If not specified, the review will be submitted as “Anonymous”.</td>
        </tr>
        <tr>
            <td>reviewer.nickName</td>
            <td>Reviewer name.</td>
        </tr>
        <tr>
            <td>reviewer.emailId</td>
            <td>Reviewer email id.</td>
        </tr>
        <tr>
            <td>reviewer.location.city(optional)</td>
            <td>Reviewer city.</td>
        </tr>
        <tr>
            <td>reviewer.location.state(optional)</td>
            <td>Reviewer state.</td>
        </tr>
        <tr>
            <td>reviewer.thumbnailUrl (optional)</td>
            <td>Thumbnail URL for reviewer image. Default is
                “http://birdeye.com/common/css/images/default-profile.png”
            </td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1082</td>
            <td>Review rating is missing</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1081</td>
            <td>Review comment is too long</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1242</td>
            <td>Invalid rating value. Allowed value between 0-5.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1243</td>
            <td>Invalid rating value. Allowed value between 1-5.</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

+ Response 400

    [1081][]

+ Response 400

    [1082][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]

+ Response 400

    [1242][]

+ Response 400

    [1243][]


## Mark/Unmark Featured [/v1/review/featured?{?api_key,businessId}]
Featured review and its order can be updated using:

+ Parameters

    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key

### Update featured review and its order [POST]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{"reviewOrders":[{"reviewId":2762525,"order":0}]}" "https://api.birdeye.com/resources/v1/review/featured?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&businessId=755009344" -v

#### Request

<center><b>Example Payload</b></center>

    {
        "reviewOrders":[
            {
                "reviewId":3970754409227,
                "order":0
            }
        ]
    }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>reviewOrders</td>
            <td>An array</td>
        </tr>
        <tr>
            <td>reviewId</td>
            <td>Review Id</td>
        </tr>
        <tr>
            <td>order</td>
            <td>0 to mark review un-featured, optional otherwise</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
            <tr>
                <th>HTTP Status</th>
                <th>BirdEye error code</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>404 Not Found</td>
                <td>1011</td>
                <td>Business id is invalid</td>
            </tr>
            <tr>
                <td>401 Unauthorized</td>
                <td>1161</td>
                <td>Invalid API key</td>
            </tr>
            <tr>
                <td>401 Unauthorized</td>
                <td>1167</td>
                <td>API key is missing</td>
            </tr>
            <tr>
                <td>429 Too Many Requests</td>
                <td>89</td>
                <td>Rate limit exceeded</td>
            </tr>
            <tr>
                <td>400 Bad Request</td>
                <td>1251</td>
                <td>No review to mark featured/un-featured.</td>
            </tr>
            <tr>
                <td>400 Bad Request</td>
                <td>1042</td>
                <td>Invalid review id</td>
            </tr>
            <tr>
                <td>400 Bad Request</td>
                <td>1252</td>
                <td>Review does not belong to the business.</td>
            </tr>
            <tr>
                <td>400 Bad Request</td>
                <td>1248</td>
                <td>Allowed limit for featured reviews exceeded.</td>
            </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

+ Response 404

    [1011][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 400

    [1251][]

+ Response 400

    [1252][]

+ Response 400

    [1248][]

+ Response 400

    [1042][]


## Review Summary [/v1/businessid/{businessId}/summary?{?api_key, statuses}]

+ Parameters

    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key
    + statuses (string[], optional) ... review statuses

### Get reviews summary [GET]
Returns list of review source along with review count and average rating, also returns review count grouped by review rating:

#### Request
<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/review/businessid/755009344/summary?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&statuses=published&statuses=parked&includeNonAggregatedReviews=true" -v

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Parameters</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>statuses</td>
            <td>Review status. Valid values are "published","parked","all". Default is "published" only</td>
        </tr>
        <tr>
            <td>includeNonAggregatedReviews</td>
            <td>Include Reviews whose auto-crawling is blocked e.g. PressGaney</td>
        </tr>
        </tbody>
    </table>
</div>
#### Response
<center><b>Example Response Body</b></center>

        {
          "sources": [
            {
              "sourceName": "BirdEye",
              "sourceAlias": "birdeye",
              "avgRating": 4.6,
              "reviewCount": 15
            },
            {
              "sourceName": "Citysearch",
              "sourceAlias": "citysearch",
              "avgRating": 5,
              "reviewCount": 3
            },
            {
              "sourceName": "GooglePlay",
              "sourceAlias": "googleplay",
              "avgRating": 4.5,
              "reviewCount": 742
            },
            {
              "sourceName": "PressGaney",
              "sourceAlias": "pressGaney",
              "avgRating": 4,
              "reviewCount": 2
            }
          ]
          "ratings": [
            {
              "rating": 0,
              "reviewCount": 0,
            }
            {
              "rating": 1,
              "reviewCount": 4,
            }
            {
              "rating": 2,
              "reviewCount": 34,
            }
            {
              "rating": 3,
              "reviewCount": 46,
            }
            {
              "rating": 4,
              "reviewCount": 103,
            }
            {
              "rating": 5,
              "reviewCount": 92,
            }
          ]
        }

+ Response 200

    + Body

        {
          "sources": [
            {
              "sourceName": "BirdEye",
              "sourceAlias": "birdeye",
              "avgRating": 4.6,
              "reviewCount": 15
            },
            {
              "sourceName": "Citysearch",
              "sourceAlias": "citysearch",
              "avgRating": 5,
              "reviewCount": 3
            },
            {
              "sourceName": "GooglePlay",
              "sourceAlias": "googleplay",
              "avgRating": 4.5,
              "reviewCount": 742
            },
            {
              "sourceName": "PressGaney",
              "sourceAlias": "pressGaney",
              "avgRating": 4,
              "reviewCount": 2
            }
          ]
          "ratings": [
            {
              "rating": 0,
              "reviewCount": 0,
            }
            {
              "rating": 1,
              "reviewCount": 4,
            }
            {
              "rating": 2,
              "reviewCount": 34,
            }
            {
              "rating": 3,
              "reviewCount": 46,
            }
            {
              "rating": 4,
              "reviewCount": 103,
            }
            {
              "rating": 5,
              "reviewCount": 92,
            }
          ]
        }
+ Response 404

    [1011][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]



<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>


## Bulk Review Upload [/v1/review/upload/business/{businessId}/source/{source_name}?{?api_key,aggregation_url}]

+ Parameters

    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key
    + source_name (String, required) ... review source
    + aggregation_url (String, optional) ... review source url

### Review Upload [POST]

#### Request
<center><b>Example curl request</b></center>

    curl -X POST 'https://api.birdeye.com/resources/v1/review/upload/business/755009344/source/google?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451' -H 'content-type: multipart/form-data' -F file=@Sample_review_upload.xlsx

> __Notes__

> - xlsx file format is listed below.
> - Column-1 : Review Comment
> - Column-2 : Rating ( 0 | 1 | 2 | 3 | 4 | 5)
> - Column-3 : Review Date (Format- MM/DD/YYYY)
> - Coumn-4 : Recommended (Yes | No)
> - Column-5 : Reviewer First name
> - Column-6 : Reviewer Last name
> - Column-7 : Reviewer nick name
> - Column-8 : Reviewer city
> - Column-9 : Reviewer state
> - Column-10 : Reviewer email
> - Column-11 : Reviewer image URL
> - Column-12 : Review URL
> - Column-13 : Review response
> - Column-14 : Response date (Format- MM/DD/YYYY)
> - Column-15 : Review Tag(s) (Format - alphanumeric characters, hyphens, underscore and spaces. For multiple tags, enter comma separated values.)


+ Response 200

    + Body

        {
          "token": "15 review's uploaded successfully."
        }

+ Response 404

    [1011][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 401

    [1029][]



<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1029</td>
            <td>Aggregation source not found</td>
        </tr>
        </tbody>
    </table>
</div>

## Create Direct Feedback [/v1/review/feedback/{business_id}{?api_key}]
New Direct feedback on BirdEye platform can be created using:

+ Parameters

    + business_id (string, required) ... the Business ID
    + api_key (string, required) ... the API key

### Post a new direct feedback [POST]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{ \"comments\" : \"Awesome experience\", \"source\": \"website\", \"reviewer\" : {\"nickName\" : \"Sachin G\",\"thumbnailUrl\" : \"http://birdeye.com/reviewer/default.jpd\", \"emailId\":\"saching@gmail.com\"}}" "https://api.birdeye.com/resources/v1/review/feedback/755009344?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

#### Request

<center><b>Example Payload</b></center>

    {
      "comments": "Awesome experience",
      "source": "website",
      "reviewer": {
        "nickName": "Sachin G",
        "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/9a070cf98f014f5d9b06987dcc9c48fe.jpeg",
        "emailId": "saching@gmail.com"
      }
    }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>comments</td>
            <td>Review comment</td>
        </tr>
        <tr>
            <td>source (optional)</td>
            <td>Source from where review was submitted. Allowed values are “website”,”tablet”. Default value is
                “website”.
            </td>
        </tr>
        <tr>
            <td>reviewer (optional)</td>
            <td>Reviewer info. If not specified, the review will be submitted as “Anonymous”.</td>
        </tr>
        <tr>
            <td>reviewer.nickName</td>
            <td>Reviewer name.</td>
        </tr>
        <tr>
            <td>reviewer.emailId</td>
            <td>Reviewer email id.</td>
        </tr>
        <tr>
            <td>reviewer.thumbnailUrl (optional)</td>
            <td>Thumbnail URL for reviewer image. Default is
                “http://birdeye.com/common/css/images/default-profile.png”
            </td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1081</td>
            <td>Review comment is too long</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

+ Response 400

    [1081][]

+ Response 400

    [1082][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]

+ Response 400

    [1242][]

+ Response 400

    [1243][]

## Review Reply [/v1/review/reply/business/{businessNumber}/review/{reviewId}{?api_key}]
Review can be replied from Birdeye platform using following request payload:

+ Parameters

    + api_key (string, required) ... the API key

### Post Review Reply [PUT]

<center><b>Example curl request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X PUT -d '{ "response": "Thanks for reviewing us.","isPrivateResponse": false }' "http://api.birdeye.com/resources/v1/review/reply/business/156396268833198/review/4221289384685133835?api_key=zzGfN0KDKGJN2mFRpzChm8CWc0dW2JL7" -v

#### Request

<center><b>Example Payload</b></center>

    {
        "response": "Thanks for reviewing us.",
        "isPrivateResponse": false
    }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>response</td>
            <td>review reply text to be posted</td>
        </tr>
        <tr>
            <td>isPrivateResponse</td>
            <td>flag to post reply privately to reviewer (Only in case of Managed Service)</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response</b></center>
{
    "response":"Thanks for reviewing us.",
    "responseBy":"Default user",
    "responseDate": 1604926421189
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Response Body</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>response</td>
            <td>review reply text that is posted</td>
        </tr>
         <tr>
            <td>responseBy</td>
            <td>Default user (static value)</td>
        </tr>
        <tr>
            <td>responseDate</td>
            <td>reply posted date (epoch millis)</td>
        </tr>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1175</td>
            <td>No business found with the given id</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1042</td>
            <td>Invalid review id</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2110</td>
            <td>Your review response could not be submitted due to a temporary error on Google. Please try after some time.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>21101</td>
            <td>Google page is not integrated. Kindly integrate it first.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>21103</td>
            <td>Your review response could not be submitted due to a temporary error on Google.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>21104</td>
            <td>Sorry, We could not find this review on Google. Please go to your Google Business page and reply to this review. Thank you.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2111</td>
            <td>Your review response could not be submitted due to a temporary error on Facebook. Please try after some time.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>21113</td>
            <td>Facebook page is not integrated. Kindly integrate it first.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>21114</td>
            <td>Sorry, We could not find this review on Facebook. Please go to your Facebook page and reply to this review. Thank you.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>21112</td>
            <td>Your review response could not be submitted due to a temporary error on Facebook.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2222</td>
            <td>Oops! Something is off on our side. We are working on it. Please check later.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2075</td>
            <td>Error while claiming a provider for Care Dash</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>20706</td>
            <td>Error while posting a reply to Care Dash</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2078</td>
            <td>Error while posting a reply to Rent</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1541</td>
            <td>Rate Limit of API has been exceeded.</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json
            
    + Body
    
            {
                "response":"Enter Reply here",
                "isPrivateResponse":false
            }

+ Response 200

    + Headers

            Content-type: application/json

    + Body

            {
                "response":"Thanks for reviewing us.",
                "responseBy":"Default user",
                "responseDate": 1604926421189
            }

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 400

    [1011][]

+ Response 404

    [1175][]

+ Response 400

    [1042][]

+ Response 400

    [2110][]

+ Response 400

    [21101][]

+ Response 400

    [21103][]

+ Response 400

    [21104][]

+ Response 400

    [2111][]

+ Response 400

    [21113][]

+ Response 400

    [21114][]

+ Response 400

    [21112][]

+ Response 400

    [2222][]

+ Response 400

    [1541][]

+ Response 400

    [2075][]

+ Response 400

    [20706][]

+ Response 400

    [2078][]

# Group Customer

APIs related to customers

## Check in [/v1/customer/checkin{?bid,api_key}]

+ Parameters

    + bid (string, required) ... the Business ID
    + api_key (string, required) ... the API key

### Customer Checkin [POST]
Customer checkin can be done using:


<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{\"name\" : \"Steve Smith \", \"emailId\" : \"steves@abcd.com\", \"phone\" : \"408-xxx-xxxx\",\"smsEnabled\" : 1,\"additionalParams\" :{\"Tag Group Name 1\": \"Tag Name 1\",\"Tag Group Name 2\" :\"Tag Name 2\", \"location\" :\"New York\"}, \"employees\" : [{\"firstName\" : \"Steve \",\"lastName\" : \"Smith \",\"emailId\" : \"sshikha@abcd.com\"}]}" "https://api.birdeye.com/resources/v1/customer/checkin?bid=755009344&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" –v

> __Notes__

> - _If business has not enabled for sms, then email will be required field._
> - _If business has enabled for sms, then either email or phone will be required._
> - _Customer Tag keys and values given in additionalParams must be whitelisted to be parsed as tags._

#### Request

<center><b>Example Payload</b></center>

    {
      "name": "Steve Smith ",
      "emailId": "steves@abcd.com",
      "phone": "408-xxx-xxxx",
      "smsEnabled": 1,
      "additionalParams": {
        "Tag Group Name 1": "Tag Name 1",
        "Tag Group Name 2": "Tag Name 2",
        "location": "New York"
      },
      "employees":[{
                     "emailId" : "sshikha@abcd.com"
                  }]
    }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Details</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>name</td>
            <td>Name of the customer</td>
            <td>string, optional</td>
        </tr>
        <tr>
            <td>emailId</td>
            <td>Email ID of the customer (optional if business has enabled SMS)</td>
            <td>string, optional</td>
        </tr>
        <tr>
            <td>phone</td>
            <td>Mobile number of the customer (optional)</td>
            <td>string, optional</td>
        </tr>
        <tr>
            <td>smsEnabled</td>
            <td>Whether customer has opted to receive SMS request or not. Valid values are 0(false), 1(true). Default is 1.</td>
            <td>integer, optional</td>
        </tr>
        <tr>
            <td>additionalParams</td>
            <td>Configure extra checkin params/Templates for communication with the customer, with tag group name as key and tag name as value in the additionalParams map</td>
            <td>Map<String, String>, optional</td>
        </tr>
        <tr>
            <td>employees</td>
            <td>An Array</td>
        </tr>
        <tr>
            <td>emailId</td>
            <td>Email Id of Employee</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response
<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Response Body</caption>
        <thead>
            <th>Field</th>
            <th>Description</th>
        </thead>
        <tbody>
            <td>customerId</td>
            <td>Customer ID</td>
        </tbody>
        <tbody>
            <td>checkinUrl</td>
            <td>Unique checkin URL(if business opted in)</td>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1033</td>
            <td>You are not authorized to perform this action</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1175</td>
            <td>No business found with the given id</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1142</td>
            <td>Customer name cannot be blank</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1086</td>
            <td>Customer email id cannot be blank.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1087</td>
            <td>Customer email id is invalid.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1088</td>
            <td>Customer email id cannot be more than 40 characters.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1055</td>
            <td>Not a valid US phone number.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1170</td>
            <td>SMS Alert flag is invalid. Valid values are 0 or 1.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1246</td>
            <td>Customer email or phone number is required.</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

            {
              "name": "Steve Smith ",
              "emailId": "steves@abcd.com",
              "phone": "408-xxx-xxxx",
              "smsEnabled": 1,
              "employees":[{
                             "emailId" : "sshikha@abcd.com"
                          }]
            }

+ Response 200 (application/json)

    + Body

            {
                "customerId":”673356544”
            }

+ Response 400

    [1142][]

+ Response 400

    [1086][]

+ Response 400

    [1087][]


+ Response 400

    [1088][]


+ Response 400

    [1055][]


+ Response 400

    [1170][]

+ Response 401

    [1033][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 401

    [1175][]


## Customer list [/v1/customer/all{?businessId,api_key}]

+ Parameters

    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key

### Customer list [GET]
Customer list can be fetched using:

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/customer/all?businessId=755009344&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" –v

> __Notes__

> - _Possible values of emailUnsubType: null, dropped, bounce, unsubscribe, spamreport, optout._
> - _Possible values of smsUnsubType: null, Invalid, Opted out, Unsubscribed._
> - _Any non null value implies that communication for the given channel will not go out._

#### Response

    [
        {
            "number": "673356544",
            "firstName": "Greg",
            "middleName": "M",
            "lastName": "",
            "emailId": "greg.m@abc.com",
            "phone": "408-xxx-xxxx",
            "emailUnsubType": null,
            "smsUnsubType": null
        },
        {
            "number": "673353442",
            "firstName": "Simon",
            "middleName": "",
            "lastName": "",
            "emailId": "sam.m@abc.com",
            "phone": "408-xxx-xxxx",
            "emailUnsubType": "optout",
            "smsUnsubType": "Opted out"
        },
        {
            "number": "953356544",
            "firstName": "Derek",
            "middleName": "",
            "lastName": "clive",
            "emailId": "clive@abc.com",
            "phone": "408-xxx-xxxx",
            "emailUnsubType": "dropped",
            "smsUnsubType": "Invalid"
        },
        {
            "number": "673998544",
            "firstName": "Oliver",
            "middleName": "",
            "lastName": "K",
            "emailId": "koliver@abc.com",
            "phone": "408-xxx-xxxx",
            "emailUnsubType": "unsubscribe",
            "smsUnsubType": "Unsubscribed"
        }
    ]

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 404

    [1011][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]


## Activity log [/v1/customer/history/{customerId}{?businessId,api_key}]

+ Parameters

    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key
    + startDate(string, optional) ... the start date format should be MM/dd/yyyy. if start date is not set, then we will use the date customer was created.
    + endDate(string,optional) ... the end date format should be MM/dd/yyyy. if end date is not set, then we will use the current date.

### Customer activity log [GET]
Customer activity log can be fetched using:

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/customer/history/658753231?businessId=755009344&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&startDate=03/10/2018&endDate=03/15/2018" –v

#### Response

    [
        {
            "type": "Share review email",
            "activityDate": "Mar 11, 2018 08:44 PM",
            "action": "Sent",
            "activityTimestamp": 1435290249000
        },
        {
            "type": "Review request email",
            "activityDate": "Mar 12, 2018 08:43 PM",
            "action": "Sent",
            "activityTimestamp": 1435290234000
        },
        {
            "type": "Review request email",
            "activityDate": "Mar 13, 2018 08:43 PM",
            "action": "5-star review written on BirdEye",
            "activityTimestamp": 1435290234000
        },
        {
            "type": "Created",
            "activityDate": "Mar 13, 2018 08:43 PM",
            "action": "No Action",
            "activityTimestamp": 1435290234000
        }
    ]

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1089</td>
            <td>Customer id is invalid.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1091</td>
            <td>User id not authorized to view this customer.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1523</td>
            <td>The correct date format should be "mm/dd/yyyy"</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1524</td>
            <td>Date entered is invalid.</td>
        </tr>
        </tbody>
    </table>
</div>


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 404

    [1011][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]


+ Response 400

    [1089][]


+ Response 400

    [1091][]


+ Response 400

    [1523][]


+ Response 400

    [1524][]



## Delete Customer [/v1/customer/id/{customerId}{?api_key}]

+ Parameters

    + customerId (string, required) ... the Customer ID
    + api_key (string, required) ... the API key

### Customer Delete [DELETE]
Customer can be deleted using:

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X DELETE "https://api.birdeye.com/resources/v1/customer/id/411504416?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" –v

#### Response

    {
      "emailId": "tom@abcd.com",
      "firstName": "tom",
      "number": "411504416"
    }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1089</td>
            <td>Customer id is invalid.</td>
        </tr>
        </tbody>
    </table>
</div>


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 404

    [1011][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]


+ Response 400

    [1089][]



## Subscribe/Unsubscribe Customer [/v1/customer-v2/change-permission{?api_key}]

+ Parameters

    + api_key (string, required) ... the API key

### Subscribe/Unsubscribe Customer [POST]
Customer can be subscribe/unsubscribe using:

<center><b>Example curl request</b></center>
     curl -X POST "https://api.birdeye.com/resources/v1/customer-v2/change-permission?apiKey=92bcd6e0-c102-43fd-8a67-1a7be5258451"
     -H "accept: application/json" -H "content-type: application/json" -d '{"permission" : "both-unsubscribed","email": ["test1@mail.in"],
        "phone": ["2345654326"],"accountNumber":123456789876543}' -v

#### Request

<center><b>Example Payload</b></center>

    {
      "permission" : "both-unsubscribed",
      "email": ["test1@mail.in"],
      "phone": ["2345654326"],
      "accountNumber":123456789876543
    }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Details</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>permission</td>
            <td>Action to be taken</td>
            <td>Valid values are both-subscribed, both-unsubscribed, sms-subscribed, and email-subscribed, Required</td>
        </tr>
        <tr>
            <td>email</td>
            <td>List of email ids</td>
            <td>string, optional</td>
        </tr>
        <tr>
            <td>phone</td>
            <td>List of phone nos</td>
            <td>string, optional</td>
        </tr>
        <tr>
            <td>accountNumber</td>
            <td>Location id</td>
            <td>number, Required</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

    true or false

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 404

    [1011][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]


+ Response 400

    [1089][]


# Group Contacts

APIs related to Contacts

## Contacts list [/v2/customer/list{?bid,api_key,page,size,order,sortby}]

+ Parameters

    + bid (string, required) ... the Business ID
    + api_key (string, required) ... the API key
    + page (string, required) ... the page number
    + size (string, required) ... the size of the items in a page
    + sortby (string, required) ... the sorting order of the list

### Contact [POST]
Customer list could be fetched using:

<center><b>Example curl request</b></center>

curl -X POST 
  'https://api.birdeye.com/resources/v2/customer/list?page=0&size=25&order=desc&sortby=lastActivityOn&businessId=123456789&apiKey=*****'
  -H 'accept: application/json' 
  -H 'content-type: application/json' 
  -d '{"startDate":"07/01/2019","endDate":"07/19/2019"}'

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Details</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>startDate</td>
                <td>mm/dd/yyyy</td>
                <td>string, optional</td>
            </tr>
            <tr>
                <td>endDate</td>
                <td>mm/dd/yyyy</td>
                <td>string, optional</td>
            </tr>
        </tbody>
    </table>
</div>

#### Response


    {
    "page": 0,
    "size": 25,
    "totalPages": 68,
    "totalCount": 1679,
    "customers": [
                {
            "customerId": 12345,
            "name": "Dummy1",
            "email": "sam@gmail.com",
            "phone": "xxx-xxx-xxxx",
            "lastActivityWithTime": "12 Aug 2019 02:05 PM PDT"
        },
        {
            "customerId": 54321,
            "name": "Summy2",
            "email": "samuel@gmail.com",
            "phone": "xxx-xxx-xxxx",
            "lastActivityWithTime": "12 Aug 2019 02:05 PM PDT"
        }
      ]
   }

<div class="paramsTableWrap">
    <table class="paramsTable">
    <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        </tbody>
    </table>
</div>



+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)




## Customer or Lead list [/v1/contact/details{?api_key,tags,customfields}]

+ Parameters

    + api_key (string, required) ... the API key
    + tags (boolean, optional) ... if tag data is required send true, default is false
    + customfields (boolean, optional) ... if custom fields data is required send true, default is false

### Customer or Lead list [POST]
Contact/Lead details could be fetched using:

<center><b>Example curl request</b></center>

curl -X POST 'https://api.birdeye.com/resources/v1/contact/details?api_key=*****&tags=true&customfields=true' -H 'accept: application/json' -H 'content-type: application/json'  -d '{ "sources": [ "api", "dashboard", "facebook", "integration", "sftp", "bulkupload", "webchat", "crmimport", "other", "referral" , "voicecall", "text" , "email" , "google" ], "startDateUtc": "10/01/2020", "endDateUtc": "11/01/2021","contactType": "customer", "businessId": 158629168202762, "page" : 0, "size" : 100 }' -v

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Details</th>
            </tr>
        </thead>
        <tbody>
             <tr>
                <td>sources</td>
                <td>Source of the customer/lead.Possible values are api,dashboard,facebook,integration,sftp,
                bulkupload,webchat,crmimport,other,referral,voicecall,text,email,google</td>
                <td>array of string,optional.If blank then contacts of all sources are returned</td>
            </tr>
             <tr>
                <td>startDateUtc</td>
                <td>mm/dd/yyyy (mandatory)</td>
                <td>string</td>
            </tr>
            <tr>
                <td>endDateUtc</td>
                <td>mm/dd/yyyy (mandatory)</td>
                <td>string</td>
            </tr>
            <tr>
                <td>contactType</td>
                <td>optional, Possible values are {"lead", "customer"},
                    if blank then all contact types are returned</td>
                <td>string</td>
            </tr>
            <tr>
                <td>businessId</td>
                <td>Business Number - mandatory, business number of the location,
                 when enterprise number is provided, then fetch data for all locations</td>
                <td>long</td>
            </tr>
            <tr>
                <td>page</td>
                <td>integer, mandatory, page number to request</td>
                <td>number</td>
            </tr>
            <tr>
                <td>size</td>
                <td>integer, mandatory Number of records per page, max is 5000</td>
                <td>number</td>
            </tr>
        </tbody>
    </table>
</div>

#### Response

{
   "page":0,
   "size":100,
   "totalPages":310,
   "totalCount":30983,
   "contacts":[
      {
         "firstName":"Dummy1F",
         "lastName":"Dummy1L",
         "email":"sam@gmail.com",
         "phone":"xxx-xxx-xxxx",
         "created":"2021-01-06T22:25:12.000+0000",
         "contactType":"customer",
         "source":"facebook",
         "mappings" : [ // locations customer/lead is associated with
             {
                "businessId" : 123456789909,
                "customerId" : 2341
             },
             {
                "businessId" : 123456789910,
                "customerId" : 2342
             }
         ]
      },
      {
         "firstName":"Dummy2F",
         "lastName":"Dummy2L",
         "email":"samuel@gmail.com",
         "phone":"",
         "created":"2021-01-06T22:06:41.000+0000",
         "contactType":"lead",
         "source":"webchat",
         "mappings" : [
             {
                "businessId" : 123456789909,
                "customerId" : 2343
             }
         ]
      }
   ]
}


<div class="paramsTableWrap">
    <table class="paramsTable">
    <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
         <tr>
            <td>404 Not Found</td>
            <td>1175</td>
            <td>No business found with the given id</td>
        </tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>Api key or session token missing</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>21121</td>
            <td>Invalid contact source provided in the request.</td>
        </tr>
         <tr>
            <td>400 Bad Request</td>
            <td>21120</td>
            <td>Invalid contact type provided in the request. Valid contact types are lead or customer</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>21122</td>
            <td>Reseller business is not supported in this request</td>
        </tr>
         <tr>
            <td>400 Bad Request</td>
            <td>2347</td>
            <td>Max page size allowed is 5000</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2348</td>
            <td>Max window size allowed is 60000 for a filter selection</td>
        </tr>
        </tbody>
    </table>
</div>


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)



# Group Aggregation

APIs related to aggregation URL

## Get source list [/v1/aggregation/business/{businessId} {?api_key}]

+ Parameters

    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key

### Get all aggregation source [GET]
List of aggregation source can be fetched using:

#### Request

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/aggregation/business/755009344?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" –v



#### Response

<center><b>Example Response</b></center>

    [
        {
            "id": "234970154",
            "sourceAlias": "our_website",
            "sourceUrl": "http://birdeye.com/trattoria-da-vittorio-943999808/recommendus",
            "sourceName": "Our Website",
            "aggregationStatus": 4
        },
        {
            "id": "234950761",
            "sourceAlias": "citysearch",
            "sourceUrl": "http://www.citysearch.com/biz/trattoria-da-vittorio-san-francisco",
            "sourceName": "Citysearch",
            "aggregationStatus": 4
        },
        {
            "id": "235020762",
            "sourceAlias": "google",
            "sourceUrl": "https://plus.google.com/112610500708977805079/about?gl=US&hl=en-US",
            "sourceName": "Google",
            "aggregationStatus": 4
        }
    ]

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1033</td>
            <td>You are not authorized to perform this action</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1175</td>
            <td>No business found with the given id</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

     +Body
         {
             [
                {
                    "id": "234970154",
                    "sourceAlias": "our_website",
                    "sourceUrl": "http://birdeye.com/trattoria-da-vittorio-943999808/recommendus",
                    "sourceName": "Our Website"
                },
                {
                    "id": "234950761",
                    "sourceAlias": "citysearch",
                    "sourceUrl": "http://www.citysearch.com/biz/trattoria-da-vittorio-san-francisco",
                    "sourceName": "Citysearch"
                },
                {
                    "id": "235020762",
                    "sourceAlias": "google",
                    "sourceUrl": "https://plus.google.com/112610500708977805079/about?gl=US&hl=en-US",
                    "sourceName": "Google"
                }
            ]
         }

+ Response 401 (application/json)

    [1161][]

+ Response 429

    [89][]

+ Response 401 (application/json)

    [1167][]

+ Response 401 (application/json)

    [1033][]

+ Response 404 (application/json)

    [1175][]



## Add Aggregation Link [/v1/aggregation/business/{business_id} {?api_key}]

+ Parameters

    + business_id (string, required) ... the Business ID
    + api_key (string, required) ... the API key
    + sourceAlias (String, required) ... the Aggregation Source Name
    + url (string, required) ... the aggregation URL

### Add aggregation URL [POST]
Add new aggregation URL using:


#### Request

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{\"sourceAlias\" : \"citysearch \", \"url\" : \"http://www.citysearch.com/biz/maria-da-vittorio-san-francisco\"}" "https://api.birdeye.com/resources/v1/aggregation/business/755009344?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" –v

#### Response

<center><b>Example Response</b></center>

    {
        "id": "237030543",
        "sourceAlias": "citysearch",
        "sourceName": "Citysearch",
        "sourceUrl": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco"
    }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1030</td>
            <td>URL cannot be blank</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1067</td>
            <td>URL is invalid</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1031</td>
            <td>Source id cannot be blank</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1032</td>
            <td>Invalid source id</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 404 (application/json)

    [1011][]

+ Response 401 (application/json)

    [1167][]

+ Response 401 (application/json)

    [1161][]

+ Response 429

    [89][]

+ Response 400 (application/json)

    [1030][]

+ Response 400 (application/json)

    [1031][]

+ Response 400 (application/json)

    [1032][]

+ Response 400 (application/json)

    [1067][]



## Delete [/v1/aggregation/business/{businessID}/aggregation/{aggregationID} {?api_key}]

+ Parameters

    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key
    + aggregationId (String, required) ... the Aggregation ID

### Delete aggregation URL [DELETE]
Delete aggregation URL using:


#### Request

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X DELETE "https://api.birdeye.com/resources/v1/aggregation/business/755009344/aggregation/457031001?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" –v

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1039</td>
            <td>Invalid business aggregation id</td>
        </tr>
        </tbody>
    </table>
</div>

+ Response 200 (application/json)


+ Response 404 (application/json)

    [1011][]

+ Response 401 (application/json)

    [1167][]

+ Response 401 (application/json)

    [1161][]

+ Response 429

    [89][]

+ Response 400 (application/json)

    [1039][]

# Group Category
APIs related to categories.

## All categories [/v1/category/all]

### Get all categories [GET]
All supported business categoried can be fetched using

#### Request
<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/category/all" –v


#### Response

<center><b>Example Response</b></center>

    [
        "Accessories",
        "Accountants",
        "Active Life",
        "Acupuncture",
        "Adult",
        "Adult Education",
        "Adult Entertainment",
        "Advertising",
        "Afghan",
        "African",
        "Airlines",
        "Airport Shuttles",
        "Airports",
        "Allergists",
        "Amateur Sports Teams",
        "American (New)",
        "American (Traditional)",
        "Amusement Parks",
        "Anesthesiologists",
        "Animal Shelters",
        "Antiques",
        "Apartments"
    ]

+ Request (application/json)

    + Headers

            Accept: application/json


+ Response 200 (application/json)

    + Body

            [
                "Accessories",
                "Accountants",
                "Active Life",
                "Acupuncture",
                "Adult",
                "Adult Education",
                "Adult Entertainment",
                "Advertising",
                "Afghan",
                "African",
                "Airlines",
                "Airport Shuttles",
                "Airports",
                "Allergists",
                "Amateur Sports Teams",
                "American (New)",
                "American (Traditional)",
                "Amusement Parks",
                "Anesthesiologists",
                "Animal Shelters",
                "Antiques",
                "Apartments"
                ]

    [1039][]

# Group Report
APIs related to report

## Dashboard [/v1/reports/smb{?api_key,bid}]

### Get Dashboard data [GET]
Dashboard data can be retrieved using:

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/reports/smb?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&bid=943999808" –v

#### Response

<center><b>Example Response</b></center>

    {
        "allTime": {
            "avgRating": {
                "percentChange": 0,
                "rating": 4.3
            },
            "benchmark": {
                "industryRating": 4.1,
                "industryReviewCount": 75785,
                "percentChange": 4,
                "rating": 4.3
            },
            "custCommn": {},
            "reviewCount": {
                "count": 376,
                "percentChange": 0
            },
            "sentiments": {
                "negative": 45,
                "neutral": 36,
                "positive": 295
            },
            "visitors": {}
        },
        "last30Days": {
            "avgRating": {
                "rating": 0
            },
            "benchmark": {
                "industryRating": 0,
                "industryReviewCount": 0,
                "percentChange": 0,
                "rating": 0
            },
            "custCommn": {
                "reviewRequest": 0,
                "reviewRequestSms": 0,
                "shareReview": 0
            },
            "reviewCount": {
                "count": 0,
                "percentChange": 0
            },
            "sentiments": {
                "negative": 0,
                "neutral": 0,
                "positive": 0
            },
            "visitors": {}
        },
        "negativeReviews": [
            {
                "comments": "One word...inconsistent. We had high hopes for this place but alas it was not to be. While the servers were polite, they lacked the professionalism normally expected at most dining establishments...you know, simple things like the waiter introducing himself by name or dropping by to see how we liked the food or refilling our drinks. The minestrone soup was pretty good but the fried calamari was bland, rubbery, obviously over cooked, and did I mention bland. The linguini pescatora was also inconsistent. The pasta in the dish was excellent but the calamari was once again over cooked and rubbery, I got a couple of clams that were not cleaned resulting in a few mouthfuls of dirt, and the shrimp was once again over cooked. We also ordered the margherita pizza with mushrooms and that was pretty good. Overall, we cannot recommend this place.",
                "rating": 1,
                "response": "",
                "reviewDate": "Jan 30, 2015",
                "reviewId": "2335311245464",
                "reviewUrl": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco?hrid=60fLFX4lRvHnodkhoWC2lw&nb=1",
                "reviewer": {
                    "city": "Yorba Linda",
                    "nickName": "wendy w.",
                    "state": "CA",
                    "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/9a070cf98f014f5d9b06987dcc9c48fe.jpeg"
                },
                "sourceType": "citysearch"
            },
            {
                "comments": "Veal Scaloppini, mushrooms, marsala wine, seasonal vegetables and potatoes $24.\nFlavor was great but disappointed in portion 2 small thin slice, I had better portion in North Beach...my shoe sole was large than this portion. I'm petite size woman; still left hungry....not a hungry man plate. Don't waste your money on this one, men.",
                "rating": 2,
                "response": "",
                "reviewDate": "Jan 26, 2015",
                "reviewId": "2335208845791",
                "reviewUrl": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco?hrid=FKcQE7naP_Wb4D2ylDsLaQ&nb=1",
                "reviewer": {
                    "city": "San Francisco",
                    "nickName": "Catalina W.",
                    "state": "CA",
                    "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/9a070cf98f014f5d9b06987dcc9c48fe.jpeg"
                },
                "sourceType": "citysearch"
            },
            {
                "comments": "I have to say that this restaurant is very nice but very Loud!:( The bread was old:( The prosciutto appetizer was ridiculous! They only used one slice on six slices of bread:( My husband's main course of the Veal Scallopini was a complete shame! Great sauce but come on! 4 very thin slices of veal w/veggies & red potatoes, he was starving when we got home!:( At $24!!! Ridiculously stingy! My lamb shank & mashed potatoes was superb! No veggies though:( $19 We won't be returning, I was not impressed, I'd rather go to North Beach w/ real Italian dining:) they do have good food but they need to step it up a notch for the prices they charge, I hope they read they're review's so they can change things, Good luck",
                "rating": 2,
                "response": "",
                "reviewDate": "Jan 26, 2015",
                "reviewId": "2337522245554",
                "reviewUrl": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco?hrid=Xn9XOjZYNknHQu5eF9MteQ&nb=1",
                "reviewer": {
                    "city": "San Francisco",
                    "nickName": "Adele R.",
                    "state": "CA"
                },
                "sourceType": "citysearch"
            }
        ],
        "positiveReviews": [
            {
                "comments": "Service is awesome- everyone is from Italy and are so sweet and low the menu/specials from head to toe. Great wine selection that's pretty reasonable. The Bruschetta varieties are unique and yummy. Sometimes main dishes can be hit or miss-not very consistent but it's a new restaurant that I can see establish itself a few great dishes overtime.",
                "rating": 4,
                "response": "",
                "reviewDate": "Jan 23, 2015",
                "reviewId": "2334445645625",
                "reviewUrl": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco?hrid=YYtOE3hvBjp4jYtLgtgBoQ&nb=1",
                "reviewer": {
                    "city": "San Francisco",
                    "nickName": "Anastasia P.",
                    "state": "CA",
                    "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/9a070cf98f014f5d9b06987dcc9c48fe.jpeg"
                },
                "sourceType": "citysearch"
            },
            {
                "comments": "I've been here 3 times in the past year, & it's been good every time.",
                "rating": 4,
                "response": "",
                "reviewDate": "Jan 23, 2015",
                "reviewId": "2333514245697",
                "reviewUrl": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco?hrid=3kiZtC-tj-FGLO3GPRqNDA&nb=1",
                "reviewer": {
                    "city": "Daly City",
                    "nickName": "Matt L.",
                    "state": "CA"
                },
                "sourceType": "Citysearch"
            },
            {
                "comments": "Owner is awesome! ! Came here tonight with my parents and sister's family. .highly recommended! ! I will definitely come back here again!",
                "rating": 5,
                "response": "",
                "reviewDate": "Jan 21, 2015",
                "reviewId": "2336865297689",
                "reviewUrl": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco?hrid=U8mRtt5vA93l0n7j2H1J_w&nb=1",
                "reviewer": {
                    "city": "San Francisco",
                    "nickName": "Johnny C.",
                    "state": "CA",
                    "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/9a070cf98f014f5d9b06987dcc9c48fe.jpeg"
                },
                "sourceType": "Citysearch"
            }
        ],
        "syndication": {
            "presenceCount": 0,
            "reviewDistribution": [
                {
                    "count": 328,
                    "name": "citysearch"
                },
                {
                    "count": 8,
                    "name": "Google"
                },
                {
                    "count": 1,
                    "name": "Yellow Pages"
                },
                {
                    "count": 16,
                    "name": "Foursquare"
                },
                {
                    "count": 23,
                    "name": "Facebook"
                }
            ],
            "reviewListings": [
                {
                    "id": 2,
                    "name": "Google",
                    "url": "https://plus.google.com/112610500708977805079/about?gl=US&hl=en-US"
                },
                {
                    "id": 3,
                    "name": "Citysearch",
                    "url": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco"
                },
                {
                    "id": 4,
                    "name": "Yahoo! Local",
                    "url": "https://local.yahoo.com/info-148859369-maria-da-vittorio-san-francisco"
                },
                {
                    "id": 5,
                    "name": "Yellow Pages",
                    "url": "http://www.yellowpages.com/san-francisco-ca/mip/maria-da-vittorio-478366944"
                },
                {
                    "id": 10,
                    "name": "Foursquare",
                    "url": "https://foursquare.com/v/maria-da-vittorio/5195394d498e344eeb952b4f"
                },
                {
                    "id": 16,
                    "name": "Superpages",
                    "url": "http://www.superpages.com/bp/San-Francisco-CA/maria-Da-Vittorio-L2450131113.htm"
                },
                {
                    "id": 33,
                    "name": "Merchant Circle",
                    "url": "http://www.merchantcircle.com/business/maria.Da.Vittorio.415-592-8398"
                },
                {
                    "id": 63,
                    "name": "YellowBot",
                    "url": "http://www.yellowbot.com/maria-da-vittorio-san-francisco-ca.html"
                },
                {
                    "id": 84,
                    "name": "MapQuest",
                    "url": "http://www.mapquest.com/us/california/italian-restaurants-san-francisco/maria-da-vittorio-284984723"
                },
                {
                    "id": 110,
                    "name": "Facebook",
                    "url": "https://www.facebook.com/mariadavittorio"
                }
            ]
        }
    }

## Review conversion report [/v1/reports/business/analytics/email{?api_key,businessId,fromDate,toDate,days,months}]
Review conversion report data can be retrieved using:

### Get Data [GET]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/reports/business/analytics/email?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&businessId=943999808&fromDate=02/01/2015&toDate=06/01/2015" –v

+ Parameters
    + api_key (required, string) ... API key assigned to business.
    + businessId (required, string) ... BusinessId assigned to business.
    + fromDate (optional, string) ... Date from result is expected. Format MM/DD/YYYY.
    + toDate (optional, string) ... Date up to result is expected. Format MM/DD/YYYY.
    + days (optional, integer) ... Use to get results for last some days.
    + months (optional, integer) ... Use to get results for last some months.


#### Response

<center><b>Example Response</b></center>

    {
        "emailSentInfo": {
            "total": 28,
            "emailDetails": [
                {
                    "reqType": "share_request",
                    "count": 5
                },
                {
                    "reqType": "share_request_reminder",
                    "count": 3
                },
                {
                    "reqType": "review_request",
                    "count": 12
                },
                {
                    "reqType": "review_request_reminder",
                    "count": 10
                }
            ]
        },
        "emailOpenInfo": {
            "total": 26,
            "pc": 14,
            "mobile": {
                "ios": 5,
                "android": 4,
                "other": 0
            },
            "tablet": {
                "ios": 3,
                "android": 0,
                "other": 0
            }
        },
        "emailClickInfo": {
            "total": 20,
            "pc": {
                "citysearch": 4,
                "google": 6,
                "birdeye": 4,
                "otherSites": 0
            },
            "mobile": {
                "citysearch": 2,
                "google": 0,
                "birdeye": 4,
                "otherSites": 0
            }
        },
        "reviews": [
            {
                "sourceName": "citysearch",
                "sourceAlias": "citysearch",
                "avgRating": 4.6,
                "reviewCount": 159
            },
            {
                "sourceName": "Google",
                "sourceAlias": "google",
                "avgRating": 4.9,
                "reviewCount": 8
            },
            {
                "sourceName": "Yellow Pages",
                "sourceAlias": "yellow_pages",
                "avgRating": 5,
                "reviewCount": 1
            },
            {
                "sourceName": "Trip Advisor",
                "sourceAlias": "trip_advisor",
                "avgRating": 4.5,
                "reviewCount": 191
            },
            {
                "sourceName": "Foursquare",
                "sourceAlias": "foursquare",
                "avgRating": 0,
                "reviewCount": 8
            },
            {
                "sourceName": "Facebook",
                "sourceAlias": "facebook",
                "avgRating": 5,
                "reviewCount": 20
            }
        ],
        "smsDetail": {
            "msgSent": 34,
            "msgClick": 28,
            "destination": {
                "citysearch": 12,
                "google": 6,
                "birdeye": 10,
                "otherSites": 0
            }
        }
    }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1186</td>
            <td>Invalid from date. Allowed format is "MM/dd/yyyy".</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1187</td>
            <td>Invalid to date. Allowed format is "MM/dd/yyyy".</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1215</td>
            <td>Invalid report month.</td>
        </tr>
        </tbody>
    </table>
</div>

+ Response 200 (application/json)


+ Response 404 (application/json)

    [1011][]

+ Response 401 (application/json)

    [1167][]

+ Response 401 (application/json)

    [1161][]

+ Response 429

    [89][]

+ Response 400 (application/json)

    [1039][]


## Review and rating over time [/v1/reports/review/analytic/time{?api_key,businessId,sortby,sorder}]
Review and rating over time report data can be retrieved using:

### POST Data [POST]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{\"sourceAliases\" : [\"citysearch \", \"google\"], \"businessNumbers\" : [\"943967608\", \"943476803\"], \"days\":12}" "https://api.birdeye.com/resources/v1/reports/review/analytic/time?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&businessId=943999808&sortby=count&sorder=1" –v

+ Parameters
    + api_key (required, string) ... API key assigned to business.
    + businessId (required, string) ... BusinessId assigned to business.
    + sortby (optional, string) ... Values can be 'count' or 'rating'.
    + sorder (optional, Integer) ... '0' for ascending and '1' for descending order.


#### Response

<center><b>Example Response</b></center>

    [
  {
    "rating": 0.0,
    "count": 0,
    "milestone": "8\/19\/15",
    "timeStamp": 1439942400158
  },
{
    "rating": 3.9,
    "count": 23,
    "milestone": "8\/20\/15",
    "timeStamp": 1440028800158
  },
{
    "rating": 4.9,
    "count": 55,
    "milestone": "8\/21\/15",
    "timeStamp": 1440115200158
  },
{
    "rating": 2.9,
    "count": 24,
    "milestone": "8\/22\/15",
    "timeStamp": 1440201600158
  },
{
    "rating": 2.6,
    "count": 23,
    "milestone": "8\/23\/15",
    "timeStamp": 1440288000158
  },
{
    "rating": 3.3,
    "count": 45,
    "milestone": "8\/24\/15",
    "timeStamp": 1440374400158
  },
{
    "rating": 1.6,
    "count": 28,
    "milestone": "8\/25\/15",
    "timeStamp": 1440460800158
  }
]

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>

+ Response 200 (application/json)


+ Response 404 (application/json)

    [1011][]

+ Response 401 (application/json)

    [1167][]

+ Response 401 (application/json)

    [1161][]

+ Response 429

    [89][]


## Reviews & Rating By Location [/v1/reports/rating/location{?api_key,businessId,sortby,sorder}]
Reviews & Rating By Location report data can be retrieved using:

### POST Data [POST]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{\"sourceAliases\" : [\"citysearch \", \"google\"], \"businessNumbers\" : [\"943967608\", \"943476803\"], \"months\":12}" "https://api.birdeye.com/resources/v1/reports/rating/location?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&businessId=943999808&sortby=count&sorder=1" –v

+ Parameters
    + api_key (required, string) ... API key assigned to business.
    + businessId (required, string) ... BusinessId assigned to business.
    + sortby (optional, string) ... Values can be 'count' or 'rating'.
    + sorder (optional, Integer) ... '0' for ascending and '1' for descending order.


#### Response

<center><b>Example Response</b></center>

    [
  {
    "rating": 4.6,
    "count": 132,
    "milestone": "Smile dental",
    "businessId": 943967608,
    "state": "CA"
  },
{
     "rating": 3.2,
    "count": 367,
    "milestone": "Blaze Dental",
    "businessId": 943589678,
    "state": "CA"
  }
]

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>

+ Response 200 (application/json)


+ Response 404 (application/json)

    [1011][]

+ Response 401 (application/json)

    [1167][]

+ Response 401 (application/json)

    [1161][]

+ Response 429

    [89][]

## Insights Category Report by location [/v1/keywords/opmetric/location{?api_key,businessId}]
Insights Category Report by location can be retrieved using:

+ Parameters
    + api_key (required, string) ... API key assigned to business.
    + businessId (required, string) ... BusinessId assigned to business.

### Usage report [POST]

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{\"businessNumbers\" : [\"948968776910876\", \"9434065498803\"], "reviewSites" : [1,2], "startDate" : "03/01/2019", "endDate" : "03/01/2019"}" "https://api.birdeye.com/resources/v1/keywords/opmetric/location?api_key=92bcd6e0-c102-8a67-1a7be5258451&businessId=943999808" –v

<center><b>Example Payload</b></center>

    {
      "startDate":"04/01/2013",
      "endDate":"05/3/2015",
      "reviewSites":["2","110","1","100","3","303","6","84","33","202","25","21","4","5","63"],
      "businessNumbers":["948968776910876"]
    }

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response Body</b></center>

[
    {
        "alias": "7653 - Xrtrm - Balltown Rd",
        "avgScore": 4,
        "grade": "A",
        "totalCount": 1679,
        "metricForLocn": {
            "Beverages": {
                "category": "Beverages",
                "avgScore": 3.8,
                "count": 5,
                "grade": "B+"
            },
            "Assortment (Beverages)": {
                "category": "Assortment",
                "parentCategory": "Beverages",
                "avgScore": 5,
                "count": 1,
                "grade": "A+"
            },
            "Utensils": {
                "category": "Utensils",
                "avgScore": 0,
                "count": 0
            }
        }
    }
]

## Competitive Ranking Report [/v2/competitive/ranking{?api_key,businessId}]
Competitive Ranking Report can be retrieved using:

+ Parameters
    + api_key (required, string) ... API key assigned to business.
    + businessId (required, string) ... BusinessId assigned to business.

### POST Data [POST]

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X POST -d '{"reviewSites" : ["2","110"], "startDate" : "10/08/2019", "endDate" : "01/15/2020"}' "https://api.birdeye.com/resources/v2/competitive/ranking?api_key=92bcd6e0-c102-8a67-1a7be5258451&businessId=943999808" –v

<center><b>Example Payload</b></center>

    {
      "startDate":"10/08/2019",
      "endDate":"01/15/2020",
      "reviewSites":["2","110"]
    }

#### Response

<center><b>Example Response Body</b></center>

{
    "positiveCount" : 218305,
    "neutralCount" : 18600,
    "negativeCount" : 22794,
    "positivePercent" : 84.0,
    "neutralPercent" : 7.0,
    "negativePercent" : 9.0,
    "name" : "Pizza Palace",
    "count" : 259699,
    "rating" : 4.339487006543244,
    "competitors" : [ {
        "positiveCount" : 249953,
        "neutralCount" : 21827,
        "negativeCount" : 16876,
        "positivePercent" : 87.0,
        "neutralPercent" : 8.0,
        "negativePercent" : 6.0,
        "name" : "Family Pizza",
        "count" : 288656,
        "rating" : 4.457812929751687
        }, {
        "positiveCount" : 13148,
        "neutralCount" : 2239,
        "negativeCount" : 2051,
        "positivePercent" : 75.0,
        "neutralPercent" : 13.0,
        "negativePercent" : 12.0,
        "name" : "Veggie Pizza and Grill",
        "count" : 17438,
        "rating" : 4.126577756608716
    } ]
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>

## NPS Over time [/v1/reports/nps/time/elst{?api_key,businessId}]
NPS Over time report data can be retrieved using:

### POST Data [POST]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{\"businessNumbers\" : [\"9489676910876\", \"9434065498803\"], "reviewSites" : [1,2], "startDate" : "03/01/2019", "endDate" : "03/01/2019"}" "https://api.birdeye.com/resources/v1/reports/nps/time/elst?api_key=92bcd6e0-c102-8a67-1a7be5258451&businessId=943999808" –v

+ Parameters
    + api_key (required, string) ... API key assigned to business.
    + businessId (required, string) ... BusinessId assigned to business.

#### Response

<center><b>Example Response</b></center>

{
    "totalCount": 190322,
    "avgNpsScore": "48.6",
    "promoters": "63.1",
    "passives": "22.4",
    "detractors": "14.5",
    "dataPoints": [
        {
            "nodeId": null,
            "label": "Jul 2009 - Sep 2009",
            "shortLabel": "Q3 2009",
            "startDate": "07/21/2009",
            "endDate": "09/30/2009",
            "totalCount": 1,
            "detractorPercentile": 100,
            "passivePercentile": 0,
            "promoterPercentile": 0,
            "npsScore": -100,
            "positiveCount": 0,
            "negativeCount": 1,
            "neutralCount": 0
        }
    ],
    "groupByType": "quarter",
    "dateDiff": 3526
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>

+ Response 200 (application/json)


+ Response 404 (application/json)

    [1011][]

+ Response 401 (application/json)

    [1167][]

+ Response 401 (application/json)

    [1161][]

+ Response 429

    [89][]



## NPS By Location [/v1/reports/nps/location/elst{?api_key,businessId}]
NPS By Location report data can be retrieved using:

### POST Data [POST]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{\"businessNumbers\" : [\"9489676910876\", \"9434065498803\"], "reviewSites" : [1,2], "startDate" : "03/01/2019", "endDate" : "03/01/2019"}" "https://api.birdeye.com/resources/v1/reports/nps/location/elst?api_key=92bcd6e0-c102-8a67-1a7be5258451&businessId=943999808" –v

+ Parameters
    + api_key (required, string) ... API key assigned to business.
    + businessId (required, string) ... BusinessId assigned to business.

#### Response

<center><b>Example Response</b></center>

{
    "page": 0,
    "size": 333,
    "totalPages": 1,
    "totalCount": 190322,
    "avgNpsScore": "48.6",
    "promoters": "63.1",
    "passives": "22.4",
    "detractors": "14.5",
    "dataPoints": [
        {
            "nodeId": 53978949,
            "label": "1356 - Business, ON - Business Mall",
            "shortLabel": null,
            "startDate": null,
            "endDate": null,
            "totalCount": 19,
            "detractorPercentile": 5.3,
            "passivePercentile": 0,
            "promoterPercentile": 94.7,
            "npsScore": 89.4,
            "positiveCount": 18,
            "negativeCount": 1,
            "neutralCount": 0
        }
    ],
    "dateDiff": 9223372036854775807
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>

+ Response 200 (application/json)


+ Response 404 (application/json)

    [1011][]

+ Response 401 (application/json)

    [1167][]

+ Response 401 (application/json)

    [1161][]

+ Response 429

    [89][]


## Review By Source [/v1/reports/count/reviewsite{?api_key,businessId}]
Review By Source report data can be retrieved using:

### POST Data [POST]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{\"sourceAliases\" : [\"citysearch \", \"google\"], \"businessNumbers\" : [\"943967608\", \"943476803\"], \"months\":12}" "https://api.birdeye.com/resources/v1/reports/count/reviewsite?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&businessId=943999808" –v

+ Parameters
    + api_key (required, string) ... API key assigned to business.
    + businessId (required, string) ... BusinessId assigned to business.

#### Response

<center><b>Example Response</b></center>

    [
  {
    "count": 1132,
    "milestone": "Smile Dental",
    "businessId": "943967608",
    "reviewSites": [
      {
        "sourceAlias": "Citysearch",
        "count": 4
      },
      {
        "sourceAlias": "GooglePlay",
        "count": 1060
      },
      {
        "sourceAlias": "bestcreditrepaircompany",
        "count": 1
      },
      {
        "sourceAlias": "BirdEye",
        "count": 67
      }
    ]
  }
]

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>

+ Response 200 (application/json)


+ Response 404 (application/json)

    [1011][]

+ Response 401 (application/json)

    [1167][]

+ Response 401 (application/json)

    [1161][]

+ Response 429

    [89][]


## Visitor report [/v1/reports/count/reviewsite{?api_key,businessId}]
Visitor report data can be retrieved using:

### POST Data [POST]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{\"sourceAliases\" : [\"citysearch \", \"google\"], \"businessNumbers\" : [\"943967608\", \"943476803\"], \"months\":12}" "https://api.birdeye.com/resources/v1/reports/count/reviewsite?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&businessId=943999808" –v

+ Parameters
    + api_key (required, string) ... API key assigned to business.
    + businessId (required, string) ... BusinessId assigned to business.

#### Response

<center><b>Example Response</b></center>

    [
        {
            "count": 315,
            "milestone": "Smile Dental",
            "businessId": "943967608",
            "visitors": [
                {
                    "sourceAlias": "Facebook",
                    "count": 0
                },
                {
                    "sourceAlias": "Google",
                    "count": 0
                },
                {
                    "sourceAlias": "Twitter",
                    "count": 0
                },
                {
                    "sourceAlias": "Review Site",
                    "count": 289
                },
                {
                    "sourceAlias": "Website",
                    "count": 26
                },
                {
                    "sourceAlias": "Total",
                    "count": 315
                }
            ]

        }
    ]
    <div class="paramsTableWrap">
        <table class="paramsTable">
            <caption>Error Codes</caption>
            <thead>
                <tr>
                    <th>HTTP Status</th>
                    <th>BirdEye error code</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>404 Not Found</td>
                    <td>1011</td>
                    <td>Business id is invalid</td>
                </tr>
                <tr>
                    <td>401 Unauthorized</td>
                    <td>1167</td>
                    <td>API key is missing</td>
                </tr>
                <tr>
                    <td>401 Unauthorized</td>
                    <td>1161</td>
                    <td>Invalid API key</td>
                </tr>
                <tr>
                    <td>429 Too Many Requests</td>
                    <td>89</td>
                    <td>Rate limit exceeded</td>
                </tr>
            </tbody>
        </table>
    </div>

+ Response 200 (application/json)

+ Response 404 (application/json)

    [1011][]

+ Response 401 (application/json)

    [1167][]

+ Response 401 (application/json)

    [1161][]

+ Response 429

    [89][]


## Usage report [/v1/reports/usage/{?reportType,sindex,count,business_id,api_key}]
Usage report data can be retrieved using:

+ Parameters

    + business_id (string, required) ... the business ID
    + sindex (integer, required) ... the starting index of the reviews
    + count (integer, required) ... the number of reviews to query
    + api_key (string, required) ... the API key
    + reportType (string, required) ...the type of Report(Summary or Tabular)

### Usage report [POST]

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X POST -d {  \"startDate\":\"04/01/2013\", \"endDate\":\"05/3/2015\",\"reviewSites\":["2","110","1","100","3","303","6","84","33","202","25","21","4","5","63"], \"days\":7, \"groupByDays\":1,\"reviewSiteAllFlag\":true } "https://api.birdeye.com/resources/v1/reports/usage?reportType=Summary&sindex=0&count=25&business_id=134387654345&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

<center><b>Example Payload</b></center>

    {
      "startDate":"04/01/2013",
      "endDate":"05/3/2015",
      "reviewSites":["2","110","1","100","3","303","6","84","33","202","25","21","4","5","63"],
      "ratings":[1,2,3,4,5,0],
      "days":7
      "groupByDays":1,
      "reviewSiteAllFlag":true
    }

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>reportType</td>
                <td>Type of Report(Summary or Tabular)</td>
            </tr>
            <tr>
                <td>sindex</td>
                <td>the starting index of the reviews</td>
            </tr>
            <tr>
                <td>count</td>
                <td>the number of reviews to query</td>
            </tr>
            <tr>
                <td>businessId</td>
                <td>Business Id for the business</td>
            </tr>
            <tr>
                <td>api_key</td>
                <td>Partner specific API key provided by BirdEye for data exchange</td>
            </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response Body</b></center>

[
    {
        "name": "Total",
        "alias1": "Total",
        "emailSentInfo": {
            "total": 15990,
            "percent": 0,
            "reqCount": 15990,
            "reqReminderCount": 37034,
            "shareReqCount": 0,
            "shareReqReminderCount": 0
        },
        "emailOpenInfo": {
            "total": 10316,
            "percent": 64.5,
            "reqCount": 10316,
            "reqReminderCount": 0,
            "shareReqCount": 0,
            "shareReqReminderCount": 0
        },
        "emailClickInfo": {
            "total": 1370,
            "percent": 8.6,
            "rcmdCount": [
                {
                    "name": "Google",
                    "count": 683,
                    "percent": 49.9,
                    "sourceId": 2
                },
                {
                    "name": "Facebook",
                    "count": 263,
                    "percent": 19.2,
                    "sourceId": 110
                },
                {
                    "name": "BirdEye",
                    "count": 4,
                    "percent": 0.3,
                    "sourceId": 100
                }
            ],
            "nonRcmdCount": [
                {
                    "name": "BirdEye",
                    "count": 420,
                    "percent": 30.7,
                    "sourceId": 100
                }
            ]
        },
        "rcmdReviewsCount": [
            {
                "sourceId": 2,
                "sourceName": "Google",
                "sourceAlias": "Google",
                "avgRating": null,
                "reviewCount": 1297
            },
            {
                "sourceId": 110,
                "sourceName": "Facebook",
                "sourceAlias": "Facebook",
                "avgRating": null,
                "reviewCount": 517
            },
            {
                "sourceId": 100,
                "sourceName": "BirdEye",
                "sourceAlias": "birdeye",
                "avgRating": null,
                "reviewCount": 176
            },
            {
                "sourceId": 1,
                "sourceName": "Yelp",
                "sourceAlias": "Yelp",
                "avgRating": null,
                "reviewCount": 171
            },
            {
                "sourceId": 25,
                "sourceName": "The Knot",
                "sourceAlias": "The Knot",
                "avgRating": null,
                "reviewCount": 6
            },
            {
                "sourceId": 21,
                "sourceName": "Wedding Wire",
                "sourceAlias": "Wedding Wire",
                "avgRating": null,
                "reviewCount": 1
            }
        ],
        "nonRcmdReviewsCount": [
            {
                "sourceId": 100,
                "sourceName": "BirdEye",
                "sourceAlias": "birdeye",
                "avgRating": null,
                "reviewCount": 516
            }
        ],
        "smsSentInfo": {
            "total": 39980,
            "percent": 0,
            "reqCount": 39980,
            "reqReminderCount": 0,
            "shareReqCount": 0,
            "shareReqReminderCount": 0
        },
        "smsOpenInfo": {
            "total": 2340,
            "percent": 5.9,
            "reqCount": 2340,
            "reqReminderCount": 0,
            "shareReqCount": 0,
            "shareReqReminderCount": 0
        },
        "smsClickInfo": {
            "total": 1558,
            "percent": 3.9,
            "rcmdCount": [
                {
                    "name": "Google",
                    "count": 850,
                    "percent": 54.6,
                    "sourceId": 2
                },
                {
                    "name": "Facebook",
                    "count": 425,
                    "percent": 27.3,
                    "sourceId": 110
                },
                {
                    "name": "BirdEye",
                    "count": 2,
                    "percent": 0.1,
                    "sourceId": 100
                }
            ],
            "nonRcmdCount": [
                {
                    "name": "BirdEye",
                    "count": 281,
                    "percent": 18,
                    "sourceId": 100
                }
            ]
        },
        "totalReviewsCount": 2684
    }
]


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Body

    [
    {
        "name": "Total",
        "alias1": "Total",
        "emailSentInfo": {
            "total": 15990,
            "percent": 0,
            "reqCount": 15990,
            "reqReminderCount": 37034,
            "shareReqCount": 0,
            "shareReqReminderCount": 0
        },
        "emailOpenInfo": {
            "total": 10316,
            "percent": 64.5,
            "reqCount": 10316,
            "reqReminderCount": 0,
            "shareReqCount": 0,
            "shareReqReminderCount": 0
        },
        "emailClickInfo": {
            "total": 1370,
            "percent": 8.6,
            "rcmdCount": [
                {
                    "name": "Google",
                    "count": 683,
                    "percent": 49.9,
                    "sourceId": 2
                },
                {
                    "name": "Facebook",
                    "count": 263,
                    "percent": 19.2,
                    "sourceId": 110
                },
                {
                    "name": "BirdEye",
                    "count": 4,
                    "percent": 0.3,
                    "sourceId": 100
                }
            ],
            "nonRcmdCount": [
                {
                    "name": "BirdEye",
                    "count": 420,
                    "percent": 30.7,
                    "sourceId": 100
                }
            ]
        },
        "rcmdReviewsCount": [
            {
                "sourceId": 2,
                "sourceName": "Google",
                "sourceAlias": "Google",
                "avgRating": null,
                "reviewCount": 1297
            },
            {
                "sourceId": 110,
                "sourceName": "Facebook",
                "sourceAlias": "Facebook",
                "avgRating": null,
                "reviewCount": 517
            },
            {
                "sourceId": 100,
                "sourceName": "BirdEye",
                "sourceAlias": "birdeye",
                "avgRating": null,
                "reviewCount": 176
            },
            {
                "sourceId": 1,
                "sourceName": "Yelp",
                "sourceAlias": "Yelp",
                "avgRating": null,
                "reviewCount": 171
            },
            {
                "sourceId": 25,
                "sourceName": "The Knot",
                "sourceAlias": "The Knot",
                "avgRating": null,
                "reviewCount": 6
            },
            {
                "sourceId": 21,
                "sourceName": "Wedding Wire",
                "sourceAlias": "Wedding Wire",
                "avgRating": null,
                "reviewCount": 1
            }
        ],
        "nonRcmdReviewsCount": [
            {
                "sourceId": 100,
                "sourceName": "BirdEye",
                "sourceAlias": "birdeye",
                "avgRating": null,
                "reviewCount": 516
            }
        ],
        "smsSentInfo": {
            "total": 39980,
            "percent": 0,
            "reqCount": 39980,
            "reqReminderCount": 0,
            "shareReqCount": 0,
            "shareReqReminderCount": 0
        },
        "smsOpenInfo": {
            "total": 2340,
            "percent": 5.9,
            "reqCount": 2340,
            "reqReminderCount": 0,
            "shareReqCount": 0,
            "shareReqReminderCount": 0
        },
        "smsClickInfo": {
            "total": 1558,
            "percent": 3.9,
            "rcmdCount": [
                {
                    "name": "Google",
                    "count": 850,
                    "percent": 54.6,
                    "sourceId": 2
                },
                {
                    "name": "Facebook",
                    "count": 425,
                    "percent": 27.3,
                    "sourceId": 110
                },
                {
                    "name": "BirdEye",
                    "count": 2,
                    "percent": 0.1,
                    "sourceId": 100
                }
            ],
            "nonRcmdCount": [
                {
                    "name": "BirdEye",
                    "count": 281,
                    "percent": 18,
                    "sourceId": 100
                }
            ]
        },
        "totalReviewsCount": 2684
       }
    ]

+ Response 400

    [1163][]

+ Response 400

    [1164][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

# Group Survey

## Get [/v1/survey/{survey_id}{?api_key,businessId,lang}]
Business survey(s) from BirdEye platform can be fetched using:

+ Parameters

    + survey_id (integer, required) ... the survey ID
    + businessId (string, required) ... the business ID
    + api_key (string, required) ... the API key
    + lang (string, optional) ... the survey locale, default is english

### Get Survey [GET]

#### Request

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X GET -d "https://api.birdeye.com/resources/v1/survey/755?businessId=145308769721320&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

#### Response

<center><b>Example Response</b></center>

                {
                    "surveyId": 535,
                    "logoUrl": "https://d2xt3xymj142xp.cloudfront.net/145301531829695/logo%2F57db1409813c70.82884191.png",
                    "name": "JetBlue Customer Satisfaction Survey",
                    "status": "new",
                    "created": 1484941995000,
                    "lastModified": 1484941995000,
                    "responses": 0,
                    "questionCount": 4,
                    "pages": [
                        {
                            "name": "Introduction",
                            "id": 2316,
                            "order": 0,
                            "showQuestionNumbers": 1,
                            "visible": false,
                            "questions": [
                                {
                                    "title": "Thank you for traveling with JetBlue Airways! We’d love to hear about your recent trip with us.  Your feedback will help us improve the way we serve you",
                                    "name": "Question name",
                                    "showQuestionNumbers": 1,
                                    "id": 10315,
                                    "skipQuestion": false,
                                    "displayQuestion": false,
                                    "minimumValue": 0,
                                    "maximumValue": 0,
                                    "order": 0,
                                    "visible": true,
                                    "isRequired": true,
                                    "type": "label",
                                    "reactElementId": 493,
                                    "value": [],
                                    "choices": [],
                                    "rows": [],
                                    "skipLogic": [],
                                    "displayLogic": []
                                },
                                {
                                    "title": "How was your trip today",
                                    "name": "Question name",
                                    "showQuestionNumbers": 1,
                                    "id": 10314,
                                    "skipQuestion": false,
                                    "displayQuestion": false,
                                    "minimumValue": 0,
                                    "maximumValue": 0,
                                    "order": 1,
                                    "visible": true,
                                    "isRequired": true,
                                    "type": "radio",
                                    "reactElementId": 840,
                                    "value": [],
                                    "choices": [
                                        {
                                            "id": 22854,
                                            "title": "Satified",
                                            "order": 0
                                        },
                                        {
                                            "id": 22856,
                                            "title": "Needs Improvement",
                                            "order": 1
                                        },
                                        {
                                            "id": 22855,
                                            "title": "Dissatiffied",
                                            "order": 2
                                        }
                                    ],
                                    "rows": [],
                                    "skipLogic": [],
                                    "displayLogic": []
                                },
                                {
                                    "title": "Please rate us based on your experience",
                                    "name": "Question name",
                                    "showQuestionNumbers": 1,
                                    "id": 10316,
                                    "skipQuestion": false,
                                    "displayQuestion": false,
                                    "maximumRateDescription": "Excellent",
                                    "minimumRateDescription": "Poor",
                                    "minimumValue": 1,
                                    "maximumValue": 10,
                                    "order": 2,
                                    "visible": true,
                                    "isRequired": true,
                                    "type": "rating",
                                    "reactElementId": 101,
                                    "value": [],
                                    "choices": [],
                                    "rows": [],
                                    "skipLogic": [],
                                    "displayLogic": []
                                },
                                {
                                    "title": "Thanks for your feedback! Please let us know how we can serve you better",
                                    "name": "Question name",
                                    "showQuestionNumbers": 1,
                                    "id": 10317,
                                    "skipQuestion": false,
                                    "displayQuestion": false,
                                    "minimumValue": 0,
                                    "maximumValue": 0,
                                    "order": 3,
                                    "visible": true,
                                    "isRequired": true,
                                    "type": "textarea",
                                    "reactElementId": 813,
                                    "value": [],
                                    "choices": [],
                                    "rows": [],
                                    "skipLogic": [],
                                    "displayLogic": []
                                }
                            ]
                        }
                    ],
                    "supportedLocales": [],
                    "buttonTexts": [
                        {
                            "id": 2096,
                            "locale": "en",
                            "textKey": "Start",
                            "localeText": "Start"
                        },
                        {
                            "id": 2097,
                            "locale": "en",
                            "textKey": "Cancel",
                            "localeText": "Cancel"
                        },
                        {
                            "id": 2098,
                            "locale": "en",
                            "textKey": "Back",
                            "localeText": "Back"
                        },
                        {
                            "id": 2099,
                            "locale": "en",
                            "textKey": "Next",
                            "localeText": "Next"
                        },
                        {
                            "id": 2100,
                            "locale": "en",
                            "textKey": "Done",
                            "localeText": "Done"
                        },
                        {
                            "id": 2101,
                            "locale": "en",
                            "textKey": "Finish",
                            "localeText": "Finish"
                        },
                        {
                            "id": 2102,
                            "locale": "en",
                            "textKey": "Submit",
                            "localeText": "Submit"
                        },
                        {
                            "id": 2103,
                            "locale": "en",
                            "textKey": "notNow",
                            "localeText": "Not Now"
                        }
                    ],
                    "businessId": 145301531829695
                }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1315</td>
            <td>Invalid survey</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

    + Body

              {
                  "surveyId": 535,
                  "logoUrl": "https://d2xt3xymj142xp.cloudfront.net/145301531829695/logo%2F57db1409813c70.82884191.png",
                  "name": "JetBlue Customer Satisfaction Survey",
                  "status": "new",
                  "created": 1484941995000,
                  "lastModified": 1484941995000,
                  "responses": 0,
                  "questionCount": 4,
                  "pages": [
                      {
                          "name": "Introduction",
                          "id": 2316,
                          "order": 0,
                          "showQuestionNumbers": 1,
                          "visible": false,
                          "questions": [
                              {
                                  "title": "Thank you for traveling with JetBlue Airways! We’d love to hear about your recent trip with us.  Your feedback will help us improve the way we serve you",
                                  "name": "Question name",
                                  "showQuestionNumbers": 1,
                                  "id": 10315,
                                  "skipQuestion": false,
                                  "displayQuestion": false,
                                  "minimumValue": 0,
                                  "maximumValue": 0,
                                  "order": 0,
                                  "visible": true,
                                  "isRequired": true,
                                  "type": "label",
                                  "reactElementId": 493,
                                  "value": [],
                                  "choices": [],
                                  "rows": [],
                                  "skipLogic": [],
                                  "displayLogic": []
                              },
                              {
                                  "title": "How was your trip today",
                                  "name": "Question name",
                                  "showQuestionNumbers": 1,
                                  "id": 10314,
                                  "skipQuestion": false,
                                  "displayQuestion": false,
                                  "minimumValue": 0,
                                  "maximumValue": 0,
                                  "order": 1,
                                  "visible": true,
                                  "isRequired": true,
                                  "type": "radio",
                                  "reactElementId": 840,
                                  "value": [],
                                  "choices": [
                                      {
                                          "id": 22854,
                                          "title": "Satified",
                                          "order": 0
                                      },
                                      {
                                          "id": 22856,
                                          "title": "Needs Improvement",
                                          "order": 1
                                      },
                                      {
                                          "id": 22855,
                                          "title": "Dissatiffied",
                                          "order": 2
                                      }
                                  ],
                                  "rows": [],
                                  "skipLogic": [],
                                  "displayLogic": []
                              },
                              {
                                  "title": "Please rate us based on your experience",
                                  "name": "Question name",
                                  "showQuestionNumbers": 1,
                                  "id": 10316,
                                  "skipQuestion": false,
                                  "displayQuestion": false,
                                  "maximumRateDescription": "Excellent",
                                  "minimumRateDescription": "Poor",
                                  "minimumValue": 1,
                                  "maximumValue": 10,
                                  "order": 2,
                                  "visible": true,
                                  "isRequired": true,
                                  "type": "rating",
                                  "reactElementId": 101,
                                  "value": [],
                                  "choices": [],
                                  "rows": [],
                                  "skipLogic": [],
                                  "displayLogic": []
                              },
                              {
                                  "title": "Thanks for your feedback! Please let us know how we can serve you better",
                                  "name": "Question name",
                                  "showQuestionNumbers": 1,
                                  "id": 10317,
                                  "skipQuestion": false,
                                  "displayQuestion": false,
                                  "minimumValue": 0,
                                  "maximumValue": 0,
                                  "order": 3,
                                  "visible": true,
                                  "isRequired": true,
                                  "type": "textarea",
                                  "reactElementId": 813,
                                  "value": [],
                                  "choices": [],
                                  "rows": [],
                                  "skipLogic": [],
                                  "displayLogic": []
                              }
                          ]
                      }
                  ],
                  "supportedLocales": [],
                  "buttonTexts": [
                      {
                          "id": 2096,
                          "locale": "en",
                          "textKey": "Start",
                          "localeText": "Start"
                      },
                      {
                          "id": 2097,
                          "locale": "en",
                          "textKey": "Cancel",
                          "localeText": "Cancel"
                      },
                      {
                          "id": 2098,
                          "locale": "en",
                          "textKey": "Back",
                          "localeText": "Back"
                      },
                      {
                          "id": 2099,
                          "locale": "en",
                          "textKey": "Next",
                          "localeText": "Next"
                      },
                      {
                          "id": 2100,
                          "locale": "en",
                          "textKey": "Done",
                          "localeText": "Done"
                      },
                      {
                          "id": 2101,
                          "locale": "en",
                          "textKey": "Finish",
                          "localeText": "Finish"
                      },
                      {
                          "id": 2102,
                          "locale": "en",
                          "textKey": "Submit",
                          "localeText": "Submit"
                      },
                      {
                          "id": 2103,
                          "locale": "en",
                          "textKey": "notNow",
                          "localeText": "Not Now"
                      }
                  ],
                  "businessId": 145301531829695
              }

+ Response 400

    [1315][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 400

    [1161][]

+ Response 429

    [89][]


## Submit [/v1/survey/{survey_id}/submit{?api_key,businessId}]
Survey response on BirdEye platform can be submitted using:

+ Parameters

    + survey_id (string, required) ... the Survey ID
    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key

### Post a survey response [POST]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d ""  "https://api.birdeye.com/resources/v1/survey/535/submit?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&businessId=145301531829695" -v

#### Request

<center><b>Example Payload</b></center>

          {
              "surveyId": 535,
              "logoUrl": "https://d2xt3xymj142xp.cloudfront.net/145301531829695/logo%2F57db1409813c70.82884191.png",
              "name": "JetBlue Customer Satisfaction Survey",
              "status": "new",
              "created": 1484941995000,
              "lastModified": 1484941995000,
              "responses": 0,
              "questionCount": 4,
              "pages": [
                  {
                      "name": "Introduction",
                      "id": 2316,
                      "order": 0,
                      "showQuestionNumbers": 1,
                      "visible": false,
                      "questions": [
                          {
                              "title": "Thank you for traveling with JetBlue Airways! We’d love to hear about your recent trip with us.  Your feedback will help us improve the way we serve you",
                              "name": "Question name",
                              "showQuestionNumbers": 1,
                              "id": 10315,
                              "skipQuestion": false,
                              "displayQuestion": false,
                              "minimumValue": 0,
                              "maximumValue": 0,
                              "order": 0,
                              "visible": true,
                              "isRequired": true,
                              "type": "label",
                              "reactElementId": 493,
                              "value": [],
                              "choices": [],
                              "rows": [],
                              "skipLogic": [],
                              "displayLogic": []
                          },
                          {
                              "title": "How was your trip today",
                              "name": "Question name",
                              "showQuestionNumbers": 1,
                              "id": 10314,
                              "skipQuestion": false,
                              "displayQuestion": false,
                              "minimumValue": 0,
                              "maximumValue": 0,
                              "order": 1,
                              "visible": true,
                              "isRequired": true,
                              "type": "radio",
                              "reactElementId": 840,
                              "value": [
                                  "22856"
                              ],
                              "choices": [
                                  {
                                      "id": 22854,
                                      "title": "Satified",
                                      "order": 0
                                  },
                                  {
                                      "id": 22856,
                                      "title": "Needs Improvement",
                                      "order": 1
                                  },
                                  {
                                      "id": 22855,
                                      "title": "Dissatiffied",
                                      "order": 2
                                  }
                              ],
                              "rows": [],
                              "skipLogic": [],
                              "displayLogic": []
                          },
                          {
                              "title": "Please rate us based on your experience",
                              "name": "Question name",
                              "showQuestionNumbers": 1,
                              "id": 10316,
                              "skipQuestion": false,
                              "displayQuestion": false,
                              "maximumRateDescription": "Excellent",
                              "minimumRateDescription": "Poor",
                              "minimumValue": 1,
                              "maximumValue": 10,
                              "order": 2,
                              "visible": true,
                              "isRequired": true,
                              "type": "rating",
                              "reactElementId": 101,
                              "value": [
                                  "9"
                              ],
                              "choices": [],
                              "rows": [],
                              "skipLogic": [],
                              "displayLogic": []
                          },
                          {
                              "title": "Thanks for your feedback! Please let us know how we can serve you better",
                              "name": "Question name",
                              "showQuestionNumbers": 1,
                              "id": 10317,
                              "skipQuestion": false,
                              "displayQuestion": false,
                              "minimumValue": 0,
                              "maximumValue": 0,
                              "order": 3,
                              "visible": true,
                              "isRequired": true,
                              "type": "textarea",
                              "reactElementId": 813,
                              "value": [
                                  "I'm happy with the service! Wi-Fi can be better"
                              ],
                              "choices": [],
                              "rows": [],
                              "skipLogic": [],
                              "displayLogic": []
                          }
                      ]
                  }
              ],
              "businessId": 145301531829695,
              "isComplete":1
          }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>SurveyId</td>
            <td>survey Id for which the response is submitted</td>
        </tr>
        <tr>
            <td>Pages</td>
            <td>Pagination for the survey</td>
        </tr>
        <tr>
            <td>Questions</td>
            <td>List of questions available on the survey page</td>
        </tr>
        <tr>
            <td>type</td>
            <td>Type of question. Allowed values are 'review','text','checkbox','radio','label','rating','nps','date','dropdown','matrix', 'matrixdropdown','textarea', 'image', 'matrixradio', 'matrixrating','pickone'.</td>
        </tr>
        <tr>
            <td>choices</td>
            <td>List of options available for the question</td>
        </tr>
        <tr>
            <td>title</td>
            <td>Represents the question/choice label</td>
        </tr>
        <tr>
            <td>value</td>
            <td>Array of responses selected/written by survey takers. For question with choices, the value represents the id of the choices selected</td>
        </tr>
        <tr>
            <td>isComplete</td>
            <td>Flag to indicate the survey was completed[1] or submitted partially[0]</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1315</td>
            <td>Invalid Survey</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

  + Headers

          Accept: application/json

+ Response 200

+ Response 400

  [1315][]

+ Response 401

  [1161][]

+ Response 429

  [89][]

+ Response 401

  [1167][]

+ Response 404

  [1011][]

## List Responses [/v1/survey/ext/list/responses/{survey_id}{?api_key,businessNumber,page,size,sortby,sorder}]
Survey responses for a given survey can be fetched using:

+ Parameters

    + survey_id (integer, required) ... the Survey ID
    + businessNumber (string, required) ... the Business Number of Enterprise (for associated api key)
    + api_key (string, required) ... the API key

### List Responses for a Survey [POST]

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{}"  "https://api.birdeye.com/resources/v1/survey/ext/list/responses/1000?page=0&size=3&sortby=date&sorder=1&api_key=your_api_key&businessNumber=123456432112341" -v

#### Request

<center><b>Example Payload</b></center>

          {
            "startDate" : "07/02/2018 06:30:00", // optional
            "endDate" : "07/03/2018 06:45:00" // optional
          }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>startDate</td>
            <td>Date filter, startDate to be used with endDate. timezone - PST, format supported : MM/dd/yyyy HH:mm:ss</td>
        </tr>
        <tr>
            <td>endDate</td>
            <td>Date filter, endDate to be used with startDate. timezone - PST, format supported : MM/dd/yyyy HH:mm:ss</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response</b></center><br/>

{
   "responseList":[
      {
         "responseId":12345,
         "requestDate":"07/11/2018",
         "responseDate":"07/11/2018",
         "completed":true,
         "questionCount":10,
         "locale":"en",
         "surveyId":1000,
         "surveyName":"Test Edit Test Edit 2(2)",
         "locationName":"BMW",
         "customerId":123456,
         "customerName":"Anonymous",
         "ticketed":false,
         "answers":[
            {
               "questionTitle":"We are interested in receiving your feedback. \nabout the care provided at our facility. \n\nPlease take a few minutes to rate your satisfaction with each of the following\n\nPlease describe ur properties.",
               "questionType":"label",
               "visible":true,
               "conditional":false,
               "shownToCustomer":true,
               "hidden":false,
               "maxValue":0,
               "minValue":0,
               "showTime":true,
               "showDate":true
            },
            {
               "questionTitle":"Single CHoice",
               "questionType":"radio",
               "visible":true,
               "conditional":false,
               "shownToCustomer":true,
               "hidden":false,
               "maxValue":0,
               "minValue":0,
               "showTime":true,
               "showDate":true,
               "answer":"A"
            },
            {
               "questionTitle":"Multiple choice q",
               "questionType":"checkbox",
               "visible":true,
               "conditional":false,
               "shownToCustomer":true,
               "hidden":false,
               "maxValue":0,
               "minValue":0,
               "showTime":true,
               "showDate":true,
               "answer":"A"
            },
            {
               "questionTitle":"Multiple Text Entry edited",
               "questionType":"textarea",
               "visible":true,
               "conditional":false,
               "shownToCustomer":true,
               "hidden":false,
               "maxValue":0,
               "minValue":0,
               "showTime":true,
               "showDate":true,
               "answer":"qwsad"
            },
            {
               "questionTitle":"Single TExt Entry edited",
               "questionType":"text",
               "visible":true,
               "conditional":false,
               "shownToCustomer":true,
               "hidden":false,
               "maxValue":0,
               "minValue":0,
               "showTime":true,
               "showDate":true,
               "answer":"fasdf"
            },
            {
               "questionTitle":"Drop Down edited",
               "questionType":"dropdown",
               "visible":true,
               "conditional":false,
               "shownToCustomer":true,
               "hidden":false,
               "maxValue":0,
               "minValue":0,
               "showTime":true,
               "showDate":true,
               "answer":"Select1"
            },
            {
               "questionTitle":"Please rate us based on your experience Rating Question edited",
               "questionType":"rating",
               "visible":true,
               "conditional":true,
               "shownToCustomer":true,
               "hidden":false,
               "maxValue":10,
               "minValue":1,
               "showTime":true,
               "showDate":true,
               "answer":"6"
            },
            {
               "questionTitle":"Please rate us for the below mentioned services Matrix Drop Down edited",
               "questionType":"matrixdropdown",
               "visible":true,
               "conditional":false,
               "shownToCustomer":true,
               "hidden":false,
               "maxValue":0,
               "minValue":0,
               "showTime":true,
               "showDate":true,
               "childAnswers":[
                  {
                     "questionTitle":"Click to write statement 1",
                     "questionType":"dropdown",
                     "visible":true,
                     "conditional":false,
                     "shownToCustomer":true,
                     "hidden":false,
                     "maxValue":0,
                     "minValue":0,
                     "showTime":true,
                     "showDate":true,
                     "answer":"Choice 1"
                  },
                  {
                     "questionTitle":"Click to write statement 2",
                     "questionType":"dropdown",
                     "visible":true,
                     "conditional":false,
                     "shownToCustomer":true,
                     "hidden":false,
                     "maxValue":0,
                     "minValue":0,
                     "showTime":true,
                     "showDate":true,
                     "answer":"Choice 1"
                  },
                  {
                     "questionTitle":"Click to write statement 3",
                     "questionType":"dropdown",
                     "visible":true,
                     "conditional":false,
                     "shownToCustomer":true,
                     "hidden":false,
                     "maxValue":0,
                     "minValue":0,
                     "showTime":true,
                     "showDate":true,
                     "answer":"Choice 1"
                  },
                  {
                     "questionTitle":"Click to write statement 4",
                     "questionType":"dropdown",
                     "visible":true,
                     "conditional":false,
                     "shownToCustomer":true,
                     "hidden":false,
                     "maxValue":0,
                     "minValue":0,
                     "showTime":true,
                     "showDate":true,
                     "answer":"Choice 2"
                  },
                  {
                     "questionTitle":"Click to write statement 5",
                     "questionType":"dropdown",
                     "visible":true,
                     "conditional":false,
                     "shownToCustomer":true,
                     "hidden":false,
                     "maxValue":0,
                     "minValue":0,
                     "showTime":true,
                     "showDate":true,
                     "answer":"Choice 2"
                  },
                  {
                     "questionTitle":"Click to write statement",
                     "questionType":"dropdown",
                     "visible":true,
                     "conditional":false,
                     "shownToCustomer":true,
                     "hidden":false,
                     "maxValue":0,
                     "minValue":0,
                     "showTime":true,
                     "showDate":true,
                     "answer":"Choice 2"
                  }
               ]
            },
            {
               "questionTitle":"How likely are you to recommend us to your family and friends NPS edited?",
               "questionType":"nps",
               "visible":true,
               "conditional":false,
               "shownToCustomer":true,
               "hidden":false,
               "maxValue":10,
               "minValue":0,
               "showTime":true,
               "showDate":true,
               "answer":"7"
            },
            {
               "questionTitle":"Matrix Radio Choice editedf",
               "questionType":"matrixradio",
               "visible":true,
               "conditional":false,
               "shownToCustomer":true,
               "hidden":false,
               "maxValue":0,
               "minValue":0,
               "showTime":true,
               "showDate":true,
               "childAnswers":[
                  {
                     "questionTitle":"Click to write statement A",
                     "questionType":"radio",
                     "visible":true,
                     "conditional":false,
                     "shownToCustomer":true,
                     "hidden":false,
                     "maxValue":0,
                     "minValue":0,
                     "showTime":true,
                     "showDate":true,
                     "answer":"Choice D"
                  }
               ]
            }
         ]
      }
   ],
   "totalResponses":2,
   "pageNo":0,
   "pageSize":1,
   "hasNext":true
}

<div class="paramsTableWrap">
    <table class="responseFields">
        <caption>Response Fields</caption>
        <thead>
        <tr>
            <th>Field Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>responseId</td>
            <td>Unique Id associated with a customer response</td>
        </tr>
        <tr>
            <td>requestDate</td>
            <td>Date on which a survey request was sent to the customer</td>
        </tr>
        <tr>
            <td>responseDate</td>
            <td>Date on which the survey was taken by the customer</td>
        </tr>
        <tr>
            <td>completed</td>
            <td>Is the response complete or partial</td>
        </tr>
        <tr>
            <td>questionCount</td>
            <td>Total no of questions in the survey</td>
        </tr>
        <tr>
            <td>locale</td>
            <td>Locale of the the survey which was taken</td>
        </tr>
        <tr>
            <td>surveyId</td>
            <td>Unique Id of the survey</td>
        </tr>
        <tr>
            <td>surveyName</td>
            <td>Survey Title</td>
        </tr>
        <tr>
            <td>locationName</td>
            <td>Name of the response location (alias when present, name otherwise)</td>
        </tr>
         <tr>
            <td>customerId</td>
            <td>Unique Id associated with customer who has responded</td>
        </tr>
        <tr>
            <td>customerName</td>
            <td>Name of the customer</td>
        </tr>
        <tr>
            <td>ticketed</td>
            <td>Is the response tickted or not</td>
        </tr>
        <tr>
            <td>answers</td>
            <td>List of answers to individual questions</td>
        </tr>
         <tr>
            <td>questionTitle</td>
            <td>Question Text</td>
        </tr>
        <tr>
            <td>questionType</td>
            <td>Type of the question</td>
        </tr>
        <tr>
            <td>conditional</td>
            <td>Is Skip or Display logic present on the question</td>
        </tr>
         <tr>
            <td>shownToCustomer</td>
            <td>Was the question displayed to the customer. false when question wasn't show due to skip/display logic</td>
        </tr>
        <tr>
            <td>answer</td>
            <td>actual answer given by the customer</td>
        </tr>
        <tr>
            <td>childAnswers</td>
            <td>list of answers for a parent-child type question</td>
        </tr>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1315</td>
            <td>Invalid Survey</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

  + Headers
          Content-Type: application/json
          Accept: application/json

+ Response 200

+ Response 400

  [1315][]

+ Response 401

  [1161][]

+ Response 429

  [89][]

+ Response 401

  [1167][]

+ Response 404

  [1011][]

## Get All [/v1/survey/business/{business_id}/all{?api_key,sortby,sorder,searchStr}]
Fetch all active surveys for a business

+ Parameters

    + sortby (string, optional) ... Sort results by lastModified[modified], Created[created], Response Count[response]
    + sorder (string, optional) ... Sort order ascending(0) and descending (1)
    + searchStr(string, optional) ... Search survey by name or business location
    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key

### Get All Surveys [GET]

#### Request

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X GET -d "https://api.birdeye.com/resources/v1/survey/business/145301531829695/all?sortby=modified&sorder=1&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

#### Response

<center><b>Example Response</b></center>

                [
                    {
                        "surveyId": 9,
                        "name": "JetBlue Customer Satisfaction Survey",
                        "status": "new",
                        "created": 1458844108000,
                        "lastModified": 1482174350000,
                        "responses": 97,
                        "questionCount": 13
                    },
                    {
                        "surveyId": 10,
                        "name": "JetBlue Membership Survey",
                        "status": "active",
                        "created": 1481554022000,
                        "lastModified": 1484867564000,
                        "responses": 20,
                        "questionCount": 18
                    }
                ]

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

    + Body

          [
              {
                  "surveyId": 9,
                  "name": "JetBlue Customer Satisfaction Survey",
                  "status": "new",
                  "created": 1458844108000,
                  "lastModified": 1482174350000,
                  "responses": 97,
                  "questionCount": 13
              },
              {
                  "surveyId": 10,
                  "name": "JetBlue Membership Survey",
                  "status": "active",
                  "created": 1481554022000,
                  "lastModified": 1484867564000,
                  "responses": 20,
                  "questionCount": 18
              }
          ]


+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 400

    [1161][]

+ Response 429

    [89][]

# Group Employee
APIs related to employee

## Get [/v1/employee/{businessId}/{?api_key}]
Employee info from BirdEye platform can be fetched using:

+ Parameters
    + businessId (string, required) ... Business Id for the business
    + api_key (string, required) ... Partner specific API key provided by BirdEye for data exchange.

### Get details of Employees [GET]

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/employee/755009344?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451 –v


#### Response

<center><b>Example Response</b></center>

[
  {
    "firstName": "sachin",
    "lastName": "birdeye",
    "emailId": "sachin@birdeye.com",
    "phone": "",
    "imageUrl": ""
  },
  {
    "firstName": "Kailash",
    "lastName": "Yadav",
    "emailId": "kailash12121@gmail.com",
    "phone": "(989) 898-9898",
    "imageUrl": "employees/574549fb79cff9.54677638.jpg"
  },
  {
    "firstName": "Kailash",
    "lastName": "Yadav",
    "emailId": "1213@gmail.com",
    "phone": "(989) 898-9898",
    "imageUrl": "http://d2xt3xymj142xp.cloudfront.net/169830616/573db5844e0e66.08202399.png"
  }
]


    <div class="paramsTableWrap">
        <table class="paramsTable">
            <caption>Error Codes</caption>
            <thead>
            <tr>
                <th>HTTP Status</th>
                <th>BirdEye error code</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>401 Unauthorized</td>
                <td>1161</td>
                <td>Invalid API key</td>
            </tr>
            <tr>
                <td>401 Unauthorized</td>
                <td>1167</td>
                <td>API key is null</td>
            </tr>
            <tr>
                <td>429 Too Many Requests</td>
                <td>89</td>
                <td>Rate limit exceeded</td>
            </tr>
            <tr>
                <td>404 Not Found</td>
                <td>1011</td>
                <td>Invalid Business Id</td>
            </tr>
            </tbody>
        </table>
    </div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]

# Group Tag

APIs related to Tag Managment.

## Create Tags [/v1/tag/{?businessId,api_key}]

Add tags to business.

+ Parameters

    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key

### Create tags [POST]

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{"tags":["dentist","ortho"]}" "https://api.birdeye.com/resources/v1/tag?businessId=134387654345&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>businessId</td>
            <td>Business Id for the business</td>
        </tr>
        <tr>
            <td>tags</td>
            <td>List of tags to be added in above business</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
    <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is null</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Invalid Business Id</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body
           { "tags" : ["tag_1", "tag_2"] }

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]


## Delete Tag [/v1/tag/{tagname}/{?businessId,api_key}]

Remove undesired tags for a business.

+ Parameters

    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key
    + tagname (string, required) ... tag to be removed

### Delete a tag [DELETE]

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X DELETE "https://api.birdeye.com/resources/v1/tag/{tagname}?businessId=134387654345&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>businessId</td>
            <td>Business Id for the business</td>
        </tr>
        <tr>
            <td>tagname</td>
            <td>Tag to be removed for the particular business</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
    <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is null</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Invalid Business Id</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]

## Fetch Tags [/v1/tag/all/{?businessId,api_key}]

Get tags for a business.

+ Parameters

    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key

### Get all tags [GET]

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/tag/all?businessId=134387654345&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>businessId</td>
            <td>Business Id for the business</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response Body</b></center>

[
  "dental",
  "dentist",
  "doctor",
  "artho"
]

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Body
    [
       "dental",
       "dentist",
       "doctor",
       "ortho"
    ]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]


## Manage Review Tags

   Assign or remove tags to reviews.

## Assign tag to reviews [/v1/tag/add/review{?bid,api_key,tag}]

+ Parameters

    + bid (string, required) ... the Business ID
    + api_key (string, required) ... the API key
    + tag (list, required) ... list of tags

### Assign tags to reviews [POST]

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{\"reviewIds\":["3901784402334","3901744402337","3902344402875"]}" "https://api.birdeye.com/resources/v1/tag/add/review?bid=134387654345&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&tag=bird&tag=birdeye"

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>reviewIds</td>
            <td>List of review Id's to add tags with</td>
        </tr>
        <tr>
            <td>tag</td>
            <td>List of tags to be added to above review's list</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
    <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is null</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Invalid Business Id</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

            {\"reviewIds\":["3901784402334","3901744402337","3902344402875"]}

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]


## Search reviews and assign tags [/v1/tag/add/review{?bid,api_key,tag}]

+ Parameters

    + bid (string, required) ... the Business ID
    + api_key (string, required) ... the API key
    + tag (list, required) ... list of tags

### Assign tags to filtered reviews [POST]

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{ "fromDate":"04/01/2013", "toDate":"05/3/2015", "updateFromDate":"04/01/2013", "updateToDate":"05/3/2015", "sources":["google","citysearch"], "ratings":[1,2,3,4,5,0], "keywords":["water"],"searchStr":"Awesome","subBusinessIds":[134387654345,134387654346,13438765437]}" "https://api.birdeye.com/resources/v1/tag/add/review?bid=134387654345&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&tag=awesome&tag=positive" -v

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>fromDate</td>
            <td>Review's start date</td>
        </tr>
        <tr>
            <td>toDate</td>
            <td>Review's end date</td>
        </tr>
        <tr>
            <td>updateFromDate</td>
            <td>Review's response start date</td>
        </tr>
        <tr>
            <td>updateToDate</td>
            <td>Review's response end date</td>
        </tr>
        <tr>
            <td>sources</td>
            <td>Review source</td>
        </tr>
        <tr>
            <td>ratings</td>
            <td>List of user rating (0 to 5)</td>
        </tr>
        <tr>
            <td>keywords</td>
            <td>Keywords in review</td>
        </tr>
        <tr>
            <td>searchStr</td>
            <td>String that is contained by review</td>
        </tr>
        <tr>
            <td>subBusinessIds</td>
            <td>BusinessIds under enterprise account</td>
        </tr>
        <tr>
            <td>tag</td>
            <td>List of tags to be added to above review's list</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
    <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is null</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Invalid Business Id</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

            { "fromDate":"04/01/2013", "toDate":"05/3/2015", "updateFromDate":"04/01/2013", "updateToDate":"05/3/2015", "sources":["google","citysearch"], "ratings":[1,2,3,4,5,0], "keywords":["water"],"searchStr":"Awesome","subBusinessIds":[134387654345,134387654346,13438765437]}

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]

## Remove tags from a review [/v1/tag/review/{review_id}/{?bid, api_key,tag}]

+ Parameters

    + bid (string, required) ... the Business ID
    + api_key (string, required) ... the API key
    + tag (list, required) ... list of tags
    + review_id (string, required) .. the review id

### Remove tag from a single review [DELETE]

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X DELETE "https://api.birdeye.com/resources/v1/tag/review/{review_id}?bid=134387654345&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&tag=awesome&tag=positive" -v

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>review_id</td>
            <td>Review Id to remove tag from</td>
        </tr>
        <tr>
            <td>tag</td>
            <td>List of tags to be added to above review's list</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
    <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is null</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Invalid Business Id</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1042</td>
            <td>Invalid Review Id</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]


## Remove tags from reviews [/v1/tag/remove/review/{?bid, api_key,tag}]

+ Parameters

    + bid (string, required) ... the Business ID
    + api_key (string, required) ... the API key
    + tag (list, required) ... list of tags

### Remove tags from multiple reviews [POST]

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{"reviewIds":["3901784402334","3901744402337","3902344402875"]}" "https://api.birdeye.com/resources/v1/tag/remove/review?bid=134387654345&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&tag=awesome&tag=positive" -v

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>reviewIds</td>
            <td>Review Id's to remove tag from</td>
        </tr>
        <tr>
            <td>tag</td>
            <td>List of tags to be removed from above review's list</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
    <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is null</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Invalid Business Id</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

           {"reviewIds":["3901784402334","3901744402337","3902344402875"]}


+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]


## Search reviews and remove tags [/v1/tag/remove/review/{?bid, api_key,tag}]

+ Parameters

    + bid (string, required) ... the Business ID
    + api_key (string, required) ... the API key
    + tag (list, required) ... list of tags

### Remove tags from filtered reviews [POST]

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{ "fromDate":"04/01/2013", "toDate":"05/3/2015", "updateFromDate":"04/01/2013", "updateToDate":"05/3/2015", "sources":["google","citysearch"], "ratings":[1,2,3,4,5,0], "keywords":["water"],"searchStr":"Awesome","subBusinessIds":[145308764185002,145308769721320,145308702026610]}" "https://api.birdeye.com/resources/v1/tag/remove/review?bid=134387654345&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&tag=awesome&tag=positive" -v

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>fromDate</td>
            <td>Review's start date</td>
        </tr>
        <tr>
            <td>toDate</td>
            <td>Review's end date</td>
        </tr>
        <tr>
            <td>updateFromDate</td>
            <td>Review's response start date</td>
        </tr>
        <tr>
            <td>updateToDate</td>
            <td>Review's response end date</td>
        </tr>
        <tr>
            <td>sources</td>
            <td>Review source</td>
        </tr>
        <tr>
            <td>ratings</td>
            <td>List of user rating (0 to 5)</td>
        </tr>
        <tr>
            <td>keywords</td>
            <td>Keywords in review</td>
        </tr>
        <tr>
            <td>searchStr</td>
            <td>String that is contained by review</td>
        </tr>
        <tr>
            <td>subBusinessIds</td>
            <td>BusinessIds under enterprise account</td>
        </tr>
        <tr>
            <td>tag</td>
            <td>List of tags to be removed from above review's list</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
    <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is null</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Invalid Business Id</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

           { "fromDate":"04/01/2013", "toDate":"05/3/2015", "updateFromDate":"04/01/2013", "updateToDate":"05/3/2015", "sources":["google","citysearch"], "ratings":[1,2,3,4,5,0], "keywords":["water"],"searchStr":"Awesome","subBusinessIds":[145308764185002,145308769721320,145308702026610]}


+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]

## Remove tags from all reviews [/v1/tag/remove/all/review/{?bid, api_key}]

+ Parameters

    + bid (string, required) ... the Business ID
    + api_key (string, required) ... the API key

### Remove particular tags from all reviews [POST]

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{"tags":["happy","good","smile"]}" "https://api.birdeye.com/resources/v1/tag/remove/all/reviews?bid=134387654345&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>tags</td>
            <td>List of tags to be removed from all reviews</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<div class="paramsTableWrap">
    <table class="paramsTable">
    <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is null</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Invalid Business Id</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

           {"tags":["happy","good","smile"]}


+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]

## Manage Business Tags

    Associate or remove tags from businesses.

## Assign tag to business entity [/v1/tag/business/{?businessId,api_key}]

+ Parameters

    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key


### Assign tag a business id [POST]

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X POST -d "{"tags":["dentist"]}" "https://api.birdeye.com/resources/v1/tag/business?businessId=134387654345&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>businessId</td>
            <td>Business Id for the business</td>
        </tr>
        <tr>
            <td>tags</td>
            <td>List to tags to be assigned to this business</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response Body</b></center>

{
  "businessId": 134387654345,
  "tags": [
        "doctor",
        "dentist"
  ]
}

<div class="paramsTableWrap">
    <table class="paramsTable">
    <caption>Response Body</caption>
        <thead>
        <tr>
            <th>Feilds</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>businessId</td>
            <td>Business Id same as in request</td>
        </tr>
        <tr>
            <td>tags</td>
            <td>List of tags associated with above business</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

           {"tags":["dentist"]}


+ Response 200 (application/json)

    + Body

    {
       "businessId": 134387654345,
       "tags": [
            "doctor",
            "dentist"
       ]
    }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]

## Business lookup with tags [business/{business_id}/hierarchy{?businessId,api_key}]

+ Parameters

    + business_id (string, required) ... the Business ID
    + api_key (string, required) ... the API key
    + tag (string, required) ... list of tags


### Business hierarchy having tag(s) [GET]

List business having a tag.

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/business/134387654345/hierarchy?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&tag=dentist&tag=doctor" -v

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>businessId</td>
            <td>Business Id for the business</td>
        </tr>
        <tr>
            <td>tag</td>
            <td>Tag to be searched for this business</td>
        </tr>
        </tbody>
    </table>
</div>


#### Response

<center><b>Example Response Body</b></center>

[
  {
        "id": 134387654345,
        "name": "Dr. John",
        "address": null,
        "phone": null,
        "status": "active",
        "createdOn": "Jan 11, 2017",
        "type": "Practice",
        "websiteUrl": null,
        "tags": [
            "doctor",
            "prior"
            ]
  },
  {
        "id": 134387654347,
        "name": "Dr. Kaye",
        "address": null,
        "phone": null,
        "status": "active",
        "createdOn": "Jan 11, 2017",
        "type": "Specialty",
        "websiteUrl": null,
        "tags": [
            "dentist",
            "red"
            ]
  }
]

<div class="paramsTableWrap">
    <table class="paramsTable">
    <caption>Response Body</caption>
        <thead>
        <tr>
            <th>Feilds</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>name</td>
            <td>Name of the business</td>
        </tr>
        <tr>
            <td>address, phone</td>
            <td>Contact Details for the business</td>
        </tr>
        <tr>
            <td>tags</td>
            <td>Tags associated to the business / business children</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Body

    [
  {
        "id": 134387654345,
        "name": "Dr. John",
        "address": null,
        "phone": null,
        "status": "active",
        "createdOn": "Jan 11, 2017",
        "type": "Practice",
        "websiteUrl": null,
        "tags": [
            "doctor",
            "prior"
            ]
  },
  {
        "id": 134387654347,
        "name": "Dr. Kaye",
        "address": null,
        "phone": null,
        "status": "active",
        "createdOn": "Jan 11, 2017",
        "type": "Specialty",
        "websiteUrl": null,
        "tags": [
            "dentist",
            "red"
            ]
  }
]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]

## Remove tags from business entity [/v1/tag/business/{tag}/{?businessId,api_key}]

+ Parameters

    + businessId (string, required) ... the Business ID
    + api_key (string, required) ... the API key
    + tag (string, required) ... the tag to be removed


### Remove tag from business [DELETE]

<center><b>Example CURL Request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X DELETE "https://api.birdeye.com/resources/v1/tag/business/{tag}?businessId=134387654345&api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

#### Request

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>businessId</td>
            <td>Business Id for the business</td>
        </tr>
        <tr>
            <td>tag</td>
            <td>Tag to be removed from this business</td>
        </tr>
        </tbody>
    </table>
</div>


#### Response

<center><b>Example Response Body</b></center>

{
  "businessId": 134387654345,
  "tags": [
        "dental",
        "dentist"
        ]
}

<div class="paramsTableWrap">
    <table class="paramsTable">
    <caption>Response Body</caption>
        <thead>
        <tr>
            <th>Feilds</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>businessId</td>
            <td>Business Id same as in request</td>
        </tr>
        <tr>
            <td>tags</td>
            <td>Remaining tags associated with a business, after removing above tag.</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Body

    {
        "businessId": 134387654345,
        "tags": [
            "dental",
            "dentist"
        ]
    }

+ Response 401

    [1161][]

+ Response 429

    [1161][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]
    
# Group Conversation
A Conversation is the view of all messages between you and a customer across any of your configured channels:

* A conversation is a group of message exchanged between you and a customer.
* When the first message is sent or received, a conversation is automatically created for them.
* A conversation status can be open or close, but only one open conversation exists for each customer at a time.

## List Conversations [/v1/messenger/export]
Retrieves conversations for a business using:

### List Conversations [POST]

#### Request

<center><b>Example CURL Request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST  -d "
    {
      "businessNumber": "755009344",
      "apiKey": "92bcd6e0-c102-43fd-8a67-1a7be5258451",
      "startDate": "04/06/2020",
      "endDate": "05/30/2020",
      "offset": "0",
      "size": "50",
      "contact": {
        "phone" : "(650)492-3456",
        "email" : "tushar.garg@birdeye.com"
      }
    }"
    "https://api.birdeye.com/resources/v1/messenger/export" –v
 
<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption><b>Request Payload</b></caption>
        <thead>
            <th>Fields</th>
            <th>Type</th>
            <th>Constraints</th>
            <th>Description</th>
        </thead>
        <tbody>
            <tr>
                <td>businessNumber</td>
                <td>Long</td>
                <td>required</td>
                <td>The business number for which the details to be fetched, it can be either enterprise or location business number</td>
            </tr>
            <tr>
                <td>apiKey</td>
                <td>String</td>
                <td>required</td>
                <td>Business specific key for authorization</td>
            </tr>
            <tr>
                <td>startDate</td>
                <td>String</td>
                <td>Optional (recommended)</td>
                <td>start fetching messages from this date (optional but recommended). In MM/DD/YYYY format</td>
            </tr>
            <tr>
                <td>endDate</td>
                <td>String</td>
                <td>Optional (recommended)</td>
                <td>fetch messages till this date (optional but recommended). In MM/DD/YYYY format</td>
            </tr>
            <tr>
                <td>offset</td>
                <td>Integer</td>
                <td>Optional</td>
                <td>The number of objects to skip from the first. Default is 0</td>
            </tr>
            <tr>
                <td>size</td>
                <td>Integer</td>
                <td>Optional</td>
                <td>The number of maximum objects to return in each request. Default is 100. Maximum allowed is 100.</td>
            </tr>
            <tr>
                <td>contact</td>
                <td>Object</td>
                <td>Optional</td>
                <td>if passed, fetch data for the contact. Either email or phone is required.</td>
            </tr>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption><b>Response Body</b></caption>
        <thead>
            <th>Fields</th>
            <th>Type</th>
            <th>Description</th>
        </thead>
        <tbody>
                <td>totalConversations</td>
                <td>Integer</td>
                <td>The number of total conversation objects that can be retrieved through pagination</td>
        </tbody>
        <tbody>
                <td>totalMessages</td>
                <td>Integer</td>
                <td>The number of total message objects that can be retrieved through pagination</td>
        </tbody>
        <tbody>
                <td>conversations</td>
                <td>Array of <a href="#Conversation">Conversation</a></td>
                <td>An array of Conversation objects</td>
        </tbody>
        <tbody>
                <td>hasMore</td>
                <td>boolean</td>
                <td>Indicates if there are more conversations</td>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table id="Conversation" class="paramsTable">
        <caption><b>Conversation Object</b></caption>
        <thead>
            <th>Fields</th>
            <th>Type</th>
            <th>Description</th>
        </thead>
        <tbody>
                <td>id</td>
                <td>Integer</td>
                <td>A unique ID generated by the BirdEye platform that identifies this conversation</td>
        </tbody>
        <tbody>
                <td>contact</td>
                <td><a href="#Contact">Contact</a></td>
                <td>The BirdEye Contact for this conversation</td>
        </tbody>
        <tbody>
                <td>messages</td>
                <td>Array of <a href="#Message">Message</a></td>
                <td>The List of all messages within the defined date range for a conversation</td>
        </tbody>
        <tbody>
                <td>conversation_start_date</td>
                <td>String</td>
                <td>The date conversation started in PST timezone</td>
        </tbody>
        <tbody>
                <td>last_message_received_on</td>
                <td>String</td>
                <td>The date in PST on which the last message was recieved within the defined date range</td>
        </tbody>
        <tbody>
                <td>last_used_channel</td>
                <td>String</td>
                <td>The most recently used channel that sent or received a message in this conversation within the defined date range.</td>
        </tbody>
        <tbody>
                <td>assigned_to</td>
                <td><a href="#Business User">Business User</a></td>
                <td>Details of the business user to whom the conversation is assigned</td>
        </tbody>
    </table>
</div>

<div>
    <center><h5>Contact Object</h5></center>
    <p>Contacts are a representation of an end-user you are communicating with</p>
</div>
  
<div class="paramsTableWrap">
    <table id="Contact" class="paramsTable">
        <thead>
            <th>Fields</th>
            <th>Type</th>
            <th>Description</th>
        </thead>
        <tbody>
                <td>id</td>
                <td>Integer</td>
                <td>A unique ID generated by the BirdEye platform that identifies this contact</td>
        </tbody>
        <tbody>
                <td>name</td>
                <td>String</td>
                <td>The name of this contact</td>
        </tbody>
        <tbody>
                <td>firstName</td>
                <td>string</td>
                <td>The first name of this contact</td>
        </tbody>
        <tbody>
                <td>lastName</td>
                <td>String</td>
                <td>The last name of this contact</td>
        </tbody>
        <tbody>
                <td>phone</td>
                <td>String</td>
                <td>Contact phone number</td>
        </tbody>
        <tbody>
                <td>emailId</td>
                <td>String</td>
                <td>Contact Email id</td>
        </tbody>
        <tbody>
                <td>locationId</td>
                <td>Long</td>
                <td>BirdEye business number of the location to which this contact belongs.</td>
        </tbody>
    </table>
</div>

<div>
    <center><h5>Message Object</h5></center>
    <p>Messages that have been sent by, or received from, a customer are automatically threaded in a conversation. Any messages sent or received from your customer across any of your configured channels can be retrieved.</p>
<div class="paramsTableWrap">
    <table id="Message" class="paramsTable">
        <thead>
            <th>Fields</th>
            <th>Type</th>
            <th>Description</th>
        </thead>
        <tbody>
                <td>id</td>
                <td>String</td>
                <td>A unique ID generated by the BirdEye platform that identifies this message</td>
        </tbody>
        <tbody>
                <td>text</td>
                <td>String</td>
                <td>Content of the message</td>
        </tbody>
        <tbody>
                <td>sentAt</td>
                <td>Timestamp</td>
                <td>Timestamp at which the message was sent.</td>
        </tbody>
        <tbody>
                <td>message_date</td>
                <td>String</td>
                <td>Date(in PST) at which the message was sent.</td>
        </tbody>
        <tbody>
                <td>attachments</td>
                <td>MediaFile</td>
                <td>Set of media files with the description of attachment like attachment url, attachment size</td>
        </tbody>
        <tbody>
                <td>direction</td>
                <td>String</td>
                <td>The direction of the message. Either sent for outbound messages or received for inbound messages received from a customer</td>
        </tbody>
        <tbody>
                <td>channel</td>
                <td>String</td>
                <td>A unique identifier that is used to send or receive the message.for example: sms, email or Live_chat</td>
        </tbody>
    </table>
</div>
        
<div class="paramsTableWrap">
    <table id="Business User" class="paramsTable">
        <caption><b>Business User Object</b></caption>
        <thead>
            <th>Fields</th>
            <th>Type</th>
            <th>Description</th>
        </thead>
        <tbody>
                <td>id</td>
                <td>Integer</td>
                <td>A unique ID generated by the BirdEye platform that identifies this business user/team</td>
        </tbody>
        <tbody>
                <td>name</td>
                <td>String</td>
                <td>Name of the business user/team</td>
        </tbody>
        <tbody>
                <td>type</td>
                <td>String</td>
                <td>Type of the user i.e. U(for User) or T(for Team)</td>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table id="MediaFile" class="paramsTable">
        <caption><b>Media File Object</b></caption>
        <thead>
            <th>Fields</th>
            <th>Type</th>
            <th>Description</th>
        </thead>
        <tbody>
                <td>a_ext</td>
                <td>String</td>
                <td>Extension of the attachment like PDF, xls</td>
        </tbody>
        <tbody>
                <td>a_url</td>
                <td>String</td>
                <td>Attachment URL</td>
        </tbody>
        <tbody>
                <td>a_size</td>
                <td>String</td>
                <td>Attachment content length</td>
        </tbody>
        <tbody>
                <td>a_name</td>
                <td>String</td>
                <td>Attachment content name like Books.pdf</td>
        </tbody>
         <tbody>
                <td>a_contype</td>
                <td>String</td>
                <td>Attachment content type like application/pdf</td>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption><b>Error Codes</b></caption>
        <thead>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </thead>
        <tbody>
            <tr><td>401 Unauthorized</td><td>1161</td><td>Invalid API key</td></tr>
            <tr><td>401 Unauthorized</td><td>1167</td><td>API key is missing</td></tr>
            <tr><td>401 Unauthorized</td><td>1033</td><td>You are not authorized to perform this action</td></tr>
            <tr><td>404 Not Found</td><td>1175</td><td>No business found with the given id</td></tr>
            <tr><td>400 Bad Request</td><td>1176</td><td>Business info cannot be blank</td></tr>
        </tbody>
    </table>
</div>
+ Request (application/json)

        {
            "businessNumber": "755009344",
            "apiKey": "92bcd6e0-c102-43fd-8a67-1a7be5258451",
            "startDate": "04/06/2020",
            "endDate": "05/30/2020",
            "offset": "0",
            "size": "100",
            "Contact": {
                "phone" : "(650)492-3456",
                "email" : "tushar.garg@birdeye.com"
            }
        }

+ Response 201 (application/json)

    + Body

            {
                "totalConversations": 1,
                "totalMessages": 2,
                "conversations": [
                    {
                        "id": 127490,
                        "contact": {
                            "id": 80768826,
                            "name": "S G",
                            "firstName": "S",
                            "lastName": "G",
                            "phone": "(650) 492-3456",
                            "emailId": null,
                            "createdDate": "2020-05-04 17:20:14",
                            "updatedDate": "2020-05-18 15:22:57",
                            "team": "Harshit",
                            "locationId": 155911960965004
                        },
                        "messages": [
                            {
                                "sentAt": 1588612840000,
                                "id": "124776",
                                "text": "hi",
                                "message_date": "May 04, 2020 10:20 AM PDT",
                                "attachments": null,
                                "direction": "SEND",
                                "channel": "SMS"
                            },
                            {
                                "sentAt": 1588612814000,
                                "id": "124775",
                                "text": "Hello",
                                "message_date": "May 04, 2020 10:20 AM PDT",
                                "attachments": null,
                                "direction": "RECEIVE",
                                "channel": "LIVE_CHAT"
                            }
                        ],
                        "conversation_start_date": "May 04, 2020 10:20 AM PDT",
                        "last_message_received_on": "May 04, 2020 10:20 AM PDT",
                        "status": "OPEN",
                        "last_used_channel": "SMS",
                        "assigned_to": {
                            "id": -100000,
                            "name": "",
                            "type": "T",
                            "emailId": null
                        }
                    }
                ],
                "hasMore": false
            }
            
# Group Webhook

* Webhooks enable real-time notifications of events to be delivered to endpoints on your own server. 
* A webhook can be configured with a URL and a list of events that should be subscribed to for notifications.
* It's possible to create multiple webhooks with different URLs to listen to one or more events each.
            
## List webkook events [/messenger/v1/webhook/event]
Get all the webhook events that are supported by Birdeye

### Get events [GET]

#### Request

<center><b>Example CURL Request</b></center>
    
curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/messenger/v1/webhook/event" -v


#### Response

<center><b>Example Response Body</b></center>

[
    {
        "eventId": 1,
        "eventName": "conversation.updated"
    },
    {
        "eventId": 2,
        "eventName": "message.added"
    },
    {
        "eventId": 3,
        "eventName": "conversation.created"
    }
]

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption><b>Events</b></caption>
        <thead>
            <th>Name</th>
            <th>Description</th>
        </thead>
        <tbody>
            <tr><td>conversation.created</td><td>A new conversation started.</td></tr>
            <tr><td>conversation.updated</td><td>A conversation has been updated with a new status or assigned/unassigned</td></tr>
            <tr><td>message.added</td><td>A new message has been created. Triggered for both sent and received messages</td></tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Body
    
            [
                {
                    "eventId": 1,
                    "eventName": "conversation.updated"
                },
                {
                    "eventId": 2,
                    "eventName": "message.added"
                },
                {
                    "eventId": 3,
                    "eventName": "conversation.created"
                }
            ]
            


## Create webhook subscription [/messenger/v1/webhook]
Create a webhook subcription for a business

### Create webhook subscription[POST]


#### Request

<center><b>Example CURL Request</b></center>
    curl -H "content-type: application/json" -H "accept:application/json" -X POST  -d "
    {
        "businessNumber": "755009344",
        "events": [
            "conversation.created",
            "conversation.updated",
            "message.added"
            ]
        "endpoint":"https://webhook.site/0c27e14d-f833-4589-b201-86b41a651464"
    }"
    "https://api.birdeye.com/resources/messenger/v1/webhook" –v

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption><b>Request Payload</b></caption>
        <thead>
            <th>Fields</th>
            <th>Type</th>
            <th>Constraints</th>
            <th>Description</th>
        </thead>
        <tbody>
            <tr>
                <td>businessNumber</td>
                <td>Long</td>
                <td>required</td>
                <td>The business number for which events to be subscribed. Should always be the account business number (not location business number.)</td>
            </tr>
            <tr>
                <td>events</td>
                <td>List</td>
                <td>required</td>
                <td>A list of event name strings from the list of available events that should trigger this webhook</td>
            </tr>
            <tr>
                <td>endpoint</td>
                <td>String</td>
                <td>required</td>
                <td>The webhook endpoint URL on your server on which webhook requests are to be sent.</td>
            </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response Body</b></center>

{
    "subscriptionId": 2,
    "businessId": 755009344,
    "events": [
        "conversation.updated",
        "message.added",
        "conversation.created"
    ]
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption><b>Response Payload</b></caption>
        <thead>
            <th>Fields</th>
            <th>Type</th>
            <th>Description</th>
        </thead>
        <tbody>
            <tr>
                <td>subscriptionId</td>
                <td>Integer</td>
                <td>A unique ID generated by the BirdEye platform that identifies this subscription</td>
            </tr>
            <tr>
                <td>businessId</td>
                <td>Integer</td>
                <td>A unique ID generated by the BirdEye platform that identifies this business</td>
            </tr>
            <tr>
                <td>events</td>
                <td>List</td>
                <td>A list of event names that should trigger this webhook</td>
            </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Body
    
            {
                "subscriptionId": 2,
                "businessId": 755009344,
                "events": [
                    "conversation.updated",
                    "message.added",
                    "conversation.created"
                ]
            }

# Group Competitor
APIs related to Competitors

## Competitor of Enterprise Business [/v1/business/{EnterpriseBusinessNumber}/child{?api_key,isCompetitor}]
List of all Enterprise Competitor Business can be retrieved using:

### Get Competitor Business [GET]
<center><b>Example Curl Request</b></center>
     curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/business/104563456/child?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&isCompetitor=true" –v

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Parameter</caption>
        <thead>
            <th>Fields</th>
            <th>Constraints</th>
            <th>Description</th>
        </thead>
        <tbody>
            <tr>
                <td>api_key</td>
                <td>required</td>
                <td>Partner specific API key provided by BirdEye for data exchange</td>
            </tr>
            <tr>
                <td>isCompetitor</td>
                <td>required</td>
                <td>true/false</td>
            </tr>
        </tbody>
    </table>
</div>

####Response
<center><b>Example Response</b></center>
[
      {
      "id": 147867723257477,
      "name": "Pizza hut",
      "competitorId" : 2346567,
      "alias": "Pizza hut"
   },
      {
      "id": 147867726142270,
      "name": "Mcdonalds",
      "competitorId" : 2398456,
      "alias": "Mcdonalds"
   },
      {
      "id": 147867727574772,
      "name": "KFC",
      "competitorId" : 8976734,
      "alias": "KFC"
   },
      {
      "id": 149540962791726,
      "name": "Burger king",
      "competitorId" : 7835744,
      "alias": "Burger king"
   },
      {
      "id": 149540965060398,
      "name": "Subway",
      "competitorId" : 6969854,
      "alias": "Subway"
   }
]


<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Response Body</caption>
        <thead>
            <th>Fields</th>
            <th>Description</th>
        </thead>
        <tbody>
            <tr>
                <td>id</td>
                <td>Enterprise Competitor Business Number</td>
            </tr>
            <tr>
                <td>name</td>
                <td>Enterprise Competitor Business Name</td>
            </tr>
            <tr>
                <td>competitorId</td>
                <td>Enterprise Competitor Business ID(only applicable if isCompetior is set to true in request)</td>
            </tr>
            <tr>
                <td>alias</td>
                <td>Enterprise Competitor Business alias</td>
            </tr>
        </tbody>
    </table>
</div>

+ Parameters

    + api_key (string, required) ... Partner specific API key provided by BirdEye for data exchange.
    + isCompetitor (boolean, required) ... true for get competitor business of Enterprise Business and False for get Child Business of Enterprise Business .

+ Request (application/json)

    + Headers

            Accept: application/json


+ Response 200 (application/json)

    + Body

    [
      {
        "id": 768996864,
        "name": "Environmental Pest Management",
        "competitorId" : 2398456,
        "alias": "Environmental Pest Management - Westerville, OH"
      },
      {
        "id": 144670708364016,
        "name": "Sub-reseller",
        "competitorId" : 4598762,
        "alias": "Sub-reseller"
      },
      {
        "id": 144670708364322,
        "name": "Holiday Inn",
        "competitorId" : 9876567,
        "alias": "Holiday Inn"
      }
    ]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]


<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        </tbody>
    </table>
</div>

## Child Business of Competitor [/v1/business/{EnterpriseCompetitorBusinessId}/child{?api_key,isCompetitor}]
List of all Child Business of Competitor can be retrieved using:

### Get Competitor Child Business [GET]
<center><b>Example Curl Request</b></center>
     curl -H "content-type: application/json" -H "accept:application/json" -X GET "https://api.birdeye.com/resources/v1/business/104563456/child?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451&isCompetitor=true" –v

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Parameter</caption>
        <thead>
            <th>Fields</th>
            <th>Constraints</th>
            <th>Description</th>
        </thead>
        <tbody>
            <tr>
                <td>api_key</td>
                <td>required</td>
                <td>Partner specific API key provided by BirdEye for data exchange</td>
            </tr>
            <tr>
                <td>isCompetitor</td>
                <td>required</td>
                <td>true/false</td>
            </tr>
        </tbody>
    </table>
</div>

####Response
<center><b>Example Response</b></center>
[
      {
        "id": 986031488,
        "name": "Central Ohio Endodontics",
        "alias": "Central Ohio Endodontics - Dublin, OH",
        "address": {
          "address1": "5152 Blazer Memorial Pkwy",
          "address2": "Ste 102",
          "city": "Dublin",
          "state": "OH",
          "zip": "43017",
          "countryCode": "US",
          "countryName": "United States of America"
        },
        "phone": "(614) 896-2801",
        "type": "Business",
        "status": "active",
        "createdOn": "Dec 04, 2013",
        "compAccountId": 2345670
      },
      {
        "id": 768996864,
        "name": "Environmental Pest Management",
        "alias": "Environmental Pest Management - Westerville, OH",
        "address": {
          "address1": "200 Hoff Rd",
          "address2": "Unit P",
          "city": "Westerville",
          "state": "OH",
          "zip": "43082",
          "countryCode": "US",
          "countryName": "United States of America"
        },
        "phone": "(614) 771-8605",
        "type": "Business",
        "status": "active",
        "createdOn": "Dec 05, 2013",
        "compAccountId": "9878678"
      },
      {
        "id": 144670708364016,
        "name": "Sub-reseller",
        "alias": "Sub-reseller",
        "status": "active",
        "createdOn": "Nov 05, 2013",
        "type": "Reseller",
        "childCount": 1
      },
      {
        "id": 144670708364322,
        "name": "Holiday Inn",
        "alias": "Holiday Inn",
        "status": "active",
        "createdOn": "Nov 01, 2013",
        "type": "Enterprise-Location",
        "childCount": 2
      }
    ]


<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Response Body</caption>
        <thead>
            <th>Fields</th>
            <th>Description</th>
        </thead>
        <tbody>
            <tr>
                <td>id</td>
                <td>Business ID</td>
            </tr>
            <tr>
                <td>name</td>
                <td>Business Name</td>
            </tr>
            <tr>
                <td>alias</td>
                <td>Business alias</td>
            </tr>
            <tr>
                <td>address</td>
                <td>Business address(available only when it is SMB/Enterprise Location)</td>
            </tr>
            <tr>
                <td>phone</td>
                <td>Business phone</td>
            </tr>
            <tr>
                <td>status</td>
                <td>Payment status</td>
            </tr>
            <tr>
                <td>createdOn</td>
                <td>Business singup date</td>
            </tr>
            <tr>
                <td>type</td>
                <td>Type of account. e.g. Reseller (when it is a sub-reseller), Enterprise-Location (location based enterprise), Enterprise-Product (product based enterprise), Business (SMB/Enterprise location), Product (Enterprise product)</td>
            </tr>
            <tr>
                <td>childCount</td>
                <td>Child account count(applicable only for Reseller, Enterprise-Location, Enterprise-Product)</td>
            </tr>
            <tr>
                <td>compAccountId</td>
                <td>Competitor Location Ids(applicable only if isCompetitor is set true in request)</td>
            </tr>
        </tbody>
    </table>
</div>

+ Parameters

    + api_key (string, required) ... Partner specific API key provided by BirdEye for data exchange.
    + isCompetitor (boolean, required) ... true for get child business of Enterprise competitor business.

+ Request (application/json)

    + Headers

            Accept: application/json


+ Response 200 (application/json)

    + Body

    [
      {
        "id": 986031488,
        "name": "Central Ohio Endodontics",
        "alias": "Central Ohio Endodontics - Dublin, OH",
        "address": {
          "address1": "5152 Blazer Memorial Pkwy",
          "address2": "Ste 102",
          "city": "Dublin",
          "state": "OH",
          "zip": "43017",
          "countryCode": "US",
          "countryName": "United States of America"
        },
        "phone": "(614) 896-2801",
        "type": "Business",
        "status": "active",
        "createdOn": "Dec 04, 2013",
        "compAccountId":7876807
      },
      {
        "id": 768996864,
        "name": "Environmental Pest Management",
        "alias": "Environmental Pest Management - Westerville, OH",
        "address": {
          "address1": "200 Hoff Rd",
          "address2": "Unit P",
          "city": "Westerville",
          "state": "OH",
          "zip": "43082",
          "countryCode": "US",
          "countryName": "United States of America"
        },
        "phone": "(614) 771-8605",
        "type": "Business",
        "status": "active",
        "createdOn": "Dec 05, 2013",
        "compAccountId":4567893
      },
      {
        "id": 144670708364016,
        "name": "Sub-reseller",
        "alias": "Sub-reseller",
        "status": "active",
        "createdOn": "Nov 05, 2013",
        "type": "Reseller",
        "childCount": 1
      },
      {
        "id": 144670708364322,
        "name": "Holiday Inn",
        "alias": "Holiday Inn",
        "status": "active",
        "createdOn": "Nov 01, 2013",
        "type": "Enterprise-Location",
        "childCount": 2
      }
    ]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]


<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>

## Get Competitors [/v1/business/{businessId}/competitors {?api_key}]
Business competitors can be fetched using:

### Get Business Competitors [GET]

#### Request

<center><b>Example CURL Request</b></center>

    curl -H "Content-Type: application/json" -H "Accept:application/json" -X GET "https://api.birdeye.com/resources/v1/business/755009344_1/competitors?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451"

#### Response

<center><b>Example Response Body</b></center>

    [
        {
                "enterpriseId": 144679606934805,
                "enterpriseName": "taj",
                "businessCompetitors": [{
                        "businessId": 144681844334495,
                        "name": "texas",
                        "location":{
                                "address1": "44/5",
                                "address2": "II-street",
                                "city": "San Jose",
                                "state": "CA",
                                "zip": "102634",
                                "countryCode": "US",
                                "countryName": null,
                                "lat": null,
                                "lng": null
                        }
                }]
        },
        {
                "enterpriseId": 144679577771476,
                "enterpriseName": "pullman",
                "businessCompetitors": [{
                        "businessId": 144974367274032,
                        "name": "paris",
                        "location":{
                                "address1": "b/t 24th St",
                                "address2": "Mission",
                                "city": "San Francisco",
                                "state": "CA",
                                "zip": "90011",
                                "countryCode": null,
                                "countryName": null,
                                "lat": null,
                                "lng": null
                        }

                }]
        }
]

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Response Body</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>enterpriseId</td>
            <td>Enterprise Competitor Id</td>
        </tr>
        <tr>
            <td>enterpriseName</td>
            <td>Enterprise Competitor Name</td>
        </tr>
        <tr>
            <td>businessId</td>
            <td>Competitor Id</td>
        </tr>
        <tr>
            <td>name</td>
            <td>Competitor Name</td>
        </tr>
        <tr>
            <td>location</td>
            <td>Competitor Address</td>
        </tr>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>404  Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Body

            [
                {
                        "enterpriseId": 144679606934805,
                        "enterpriseName": "taj",
                        "businessCompetitors": [{
                                "businessId": 144681844334495,
                                "name": "texas",
                                "location":{
                                        "address1": "44/5",
                                        "address2": "II-street",
                                        "city": "San Jose",
                                        "state": "CA",
                                        "zip": "102634",
                                        "countryCode": "US",
                                        "countryName": null,
                                        "lat": null,
                                        "lng": null
                                }
                        }]
                },
                {
                        "enterpriseId": 144679577771476,
                        "enterpriseName": "pullman",
                        "businessCompetitors": [{
                                "businessId": 144974367274032,
                                "name": "paris",
                                "location":{
                                        "address1": "b/t 24th St",
                                        "address2": "Mission",
                                        "city": "San Francisco",
                                        "state": "CA",
                                        "zip": "90011",
                                        "countryCode": null,
                                        "countryName": null,
                                        "lat": null,
                                        "lng": null
                                }

                        }]
                }
        ]

+ Response 401 (application/json)

    [1161][]

+ Response 429

    [89][]

+ Response 404 (application/json)

    [1011][]

+ Response 401 (application/json)

    [1167][]


## Competitive Insight Category [/v1/competitors/competitive-insight/categories/{businessNumber}{?api_key}]
Competitor category(s) from BirdEye platform can be fetched using following filter in request payload:

+ Parameters

    + business_number (string, required) ... the business ID
    + api_key (string, required) ... the API key

### Get Score [POST]

<center><b>Example curl request</b></center>

curl -H "content-type: application/json" -H "accept:application/json" -X POST -d '{ "sourceType":"review","sources":["google","citysearch"],"startDate":"11/02/2020","endDate":"01/06/2021","competitors":[{"competitorId":530846,"compAccountIds":[162426]},{"competitorId":535009,"compAccountIds":[234589]}] }' "https://api.birdeye.com/resources/v1/competitors/competitive-insight/categories/151134205012586?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

#### Request

<center><b>Example Payload</b></center>

{
    "sourceType": "review",
    "sources": ["google","citysearch"]
    "startDate":"11/02/2020",
    "endDate":"01/06/2021",
    "competitors": [
        {
            "competitorId": 530846,
            "compAccountIds": [162426]
        },
        {
            "competitorId": 535009,
            "compAccountIds": [234589]
        }
    ]
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>sourceType</td>
            <td>Type of source e.g. "review"[default] or "social"</td>
        </tr>
        <tr>
            <td>sources</td>
            <td>Aggregation sources</td>
        </tr>
        <tr>
            <td>timePeriodSelected</td>
            <td>For all time : all</td>
        </tr>
        <tr>
            <td>startDate</td>
            <td>Date from which data has to be fetched[MM/DD/YYYY]</td>
        </tr>
        <tr>
            <td>endDate</td>
            <td>Date until which data has to be fetched[MM/DD/YYYY]</td>
        </tr>
        <tr>
            <td>competitorId</td>
            <td>Enterprise Competitor Ids(competitorId in Competitor of Enterprise Business API)</td>
        </tr>
        <tr>
            <td>compAccountIds</td>
            <td>Locations Ids of competitor account(compAccountIds in Child Business of Competitor API)</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response</b></center>

{
  "cats": [
    {
      "catId": 16643,
      "catName": "ambience",
      "catStats": [
        {
          "entId": 398331,
          "entName": "Social Stress",
          "competitor": false,
          "grade": "A",
          "colorCode": "#32661d",
          "avgScr": 4.4,
          "ct": 3146
        }
      ],
      "subCats": [
        {
          "catId": 16644,
          "catName": "xyx",
          "catStats": [
            {
              "entId": 398331,
              "entName": "Social Stress",
              "competitor": false,
              "grade": "A",
              "colorCode": "#32661d",
              "avgScr": 4.1,
              "ct": 1173
            },
            {
              "entId": 720717,
              "entName": "hello comp",
              "competitor": true,
              "avgScr": 0.0,
              "ct": 0
            }
          ]
        }
      ]
    },
    {
      "catId": 15299,
      "catName": "test1",
      "catStats": [
        {
          "entId": 398331,
          "entName": "Social Stress",
          "competitor": false,
          "grade": "B+",
          "colorCode": "#a0cfa2",
          "avgScr": 3.7,
          "ct": 2249
        }
      ]
    }
  ]
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Response Body</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
            <tr>
            <td>Category Id</td>
            <td>Id of the category</td>
        </tr>
        <tr>
            <td>Category Name</td>
            <td>Name of Category</td>
        </tr>
         <tr>
            <td>entId</td>
            <td>Enterprise Id</td>
        </tr>
        <tr>
            <td>entName</td>
            <td>Enterprise Name</td>
        </tr>
        <tr>
            <td>competitor</td>
            <td>true if enterprise is a competitor, else false</td>
        </tr>
        <tr>
            <td>grade</td>
            <td>Grade according to category</td>
        </tr>
        <tr>
            <td>colorCode</td>
            <td>Color code</td>
        </tr>
        <tr>
            <td>avgScr</td>
            <td>Average Score</td>
        </tr>
        <tr>
            <td>ct</td>
            <td>Total count/score</td>
        </tr>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

    + Body

{
  "cats": [
    {
      "catId": 16643,
      "catName": "ambience",
      "catStats": [
        {
          "entId": 398331,
          "entName": "Social Stress",
          "competitor": false,
          "grade": "A",
          "colorCode": "#32661d",
          "avgScr": 4.4,
          "ct": 3146
        }
      ],
      "subCats": [
        {
          "catId": 16644,
          "catName": "xyx",
          "catStats": [
            {
              "entId": 398331,
              "entName": "Social Stress",
              "competitor": false,
              "grade": "A",
              "colorCode": "#32661d",
              "avgScr": 4.1,
              "ct": 1173
            }
          ]
        }
      ]
    },
    {
      "catId": 15299,
      "catName": "test1",
      "catStats": [
        {
          "entId": 398331,
          "entName": "Social Stress",
          "competitor": false,
          "grade": "B+",
          "colorCode": "#a0cfa2",
          "avgScr": 3.7,
          "ct": 2249
        }
      ]
    }
  ]
}

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]


## Competitive Insight Themes [/v1/competitors/competitive-insight/themes/{businessNumber}{?api_key}]
Competitor theme(s) from BirdEye platform can be fetched using following filter in request payload:

+ Parameters

    + business_number (string, required) ... the business ID
    + api_key (string, required) ... the API key

### Get Theme Statistics [POST]

#### Request

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d '{"sourceType":"review","sources":["google","citysearch"],"startDate":"11/02/2020","endDate":"01/06/2021","competitors":[{"competitorId":530846,"compAccountIds":[162426,144352]}],"reviewSiteAllFlag":true,"topThm":25,"orderBy":"occurrence","sentiment":-1}' "https://api.birdeye.com/resources/v1/competitors/competitive-insight/themes/151134205012586?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

<center><b>Example Payload</b></center>

{
  "sourceType": "review",
  "sources": ["google","citysearch"],
  "startDate":"11/02/2020",
  "endDate":"01/06/2021",
  "competitors": [
    {
      "competitorId": 530846,
      "compAccountIds": [
        162426,
        144352
      ]
    },
    {
      "competitorId": 720708,
      "compAccountIds": [
        165432
      ]
    }
  ],
  "topThm": 25,
  "orderBy": "occurrence",
  "sentiment": -1
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>sourceType</td>
            <td>Type of source e.g. "review"[default] or "social"</td>
        </tr>
        <tr>
            <td>sources</td>
            <td>Aggregation sources</td>
        </tr>
        <tr>
            <td>timePeriodSelected</td>
            <td>For all time : all</td>
        </tr>
        <tr>
            <td>startDate</td>
            <td>Date from which data has to be fetched[MM/DD/YYYY]</td>
        </tr>
        <tr>
            <td>endDate</td>
            <td>Date until which data has to be fetched[MM/DD/YYYY]</td>
        </tr>
        <tr>
            <td>competitorId</td>
            <td>Enterprise Competitor Ids(competitorId in Competitor of Enterprise Business API)</td>
        </tr>
        <tr>
            <td>compAccountIds</td>
            <td>Locations Ids of competitor account(compAccountIds in Child Business of Competitor API)</td>
        </tr>
        <tr>
            <td>topThm</td>
            <td>Count of top Themes to be fetched </td>
        </tr>
        <tr>
            <td>orderBy</td>
            <td>Order of the result e.g.: "occurrence"[default] or "ztoa" or "atoz" </td>
        </tr>
        <tr>
            <td>sentiment</td>
            <td> -1 = negative sentiment,
                 1 = positive sentiment,
                 0 = all sentiments[default]</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response</b></center>

{
  "id": 398331,
  "name": "Social Stress",
  "themes": [
    "your money"
  ],
  "occr": 3,
  "avgScore": 1.0,
  "pPrct": 0.0,
  "nPrct": 0.047169812,
  "prct": 0.0063035805,
  "pCt": 30707,
  "nCt": 6360,
  "ct": 47592,
  "themeStats": [
    {
      "theme": "your money",
      "adj": "your",
      "kw": "money",
      "pCt": 0,
      "nCt": 3,
      "ct": 3,
      "score": 3,
      "scr": 1.0
    },
    {
      "theme": "wrong vehicle",
      "adj": "wrong",
      "kw": "vehicle",
      "pCt": 4,
      "nCt": 4,
      "ct": 14,
      "score": 4,
      "scr": 1.0
    }
  ],
  "competitors": [
    {
      "id": 530846,
      "name": "Social 1",
      "themes": [
        "your money"
      ],
      "occr": 0,
      "avgScore": 0.0,
      "pPrct": 0.0,
      "nPrct": 0.0,
      "prct": 0.0,
      "pCt": 41,
      "nCt": 67,
      "ct": 132,
      "themeStats": [
        {
          "theme": "young lady",
          "adj": "young",
          "kw": "lady",
          "pCt": 0,
          "nCt": 1,
          "ct": 2,
          "score": 1,
          "scr": 1.0
        }
      ]
    }
  ]
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Response Body</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
            <tr>
            <td>id</td>
            <td>Business Id</td>
        </tr>
        <tr>
            <td>name</td>
            <td>Name of Enterprise</td>
        </tr>
         <tr>
            <td>themes</td>
            <td>List of Themes</td>
        </tr>
        <tr>
            <td>occr</td>
            <td>Occurence</td>
        </tr>
        <tr>
            <td>avgScore</td>
            <td>Average Score</td>
        </tr>
        <tr>
            <td>pPrct</td>
            <td>Positive Percentage</td>
        </tr>
        <tr>
            <td>nPrct</td>
            <td>Negative Percentage</td>
        </tr>
        <tr>
            <td>pCt</td>
            <td>Positive Count</td>
        </tr>
        <tr>
            <td>nCt</td>
            <td>Negative Count</td>
        </tr>
        <tr>
            <td>adj</td>
            <td>Adjective</td>
        </tr>
        <tr>
            <td>prct</td>
            <td>Percentage</td>
        </tr>
        <tr>
            <td>kw</td>
            <td>Keyword</td>
        </tr>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

    + Body

{
  "id": 398331,
  "name": "Social Stress",
  "themes": [
    "your money"
  ],
  "occr": 3,
  "avgScore": 1.0,
  "pPrct": 0.0,
  "nPrct": 0.047169812,
  "prct": 0.0063035805,
  "pCt": 30707,
  "nCt": 6360,
  "ct": 47592,
  "themeStats": [
    {
      "theme": "your money",
      "adj": "your",
      "kw": "money",
      "pCt": 0,
      "nCt": 3,
      "ct": 3,
      "score": 3,
      "scr": 1.0
    },
    {
      "theme": "wrong vehicle",
      "adj": "wrong",
      "kw": "vehicle",
      "pCt": 4,
      "nCt": 4,
      "ct": 14,
      "score": 4,
      "scr": 1.0
    }
  ],
  "competitors": [
    {
      "id": 530846,
      "name": "Social 1",
      "themes": [
        "your money"
      ],
      "occr": 0,
      "avgScore": 0.0,
      "pPrct": 0.0,
      "nPrct": 0.0,
      "prct": 0.0,
      "pCt": 41,
      "nCt": 67,
      "ct": 132,
      "themeStats": [
        {
          "theme": "young lady",
          "adj": "young",
          "kw": "lady",
          "pCt": 0,
          "nCt": 1,
          "ct": 2,
          "score": 1,
          "scr": 1.0
        }
      ]
    }
  ]
}

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]

## Competitive Insight Keywords [/v1/competitors/competitive-insight/keywords/{businessNumber}{?api_key}]
Competitor keywords(s) from BirdEye platform can be fetched using following filter in request payload:

+ Parameters

    + business_number (string, required) ... the business ID
    + api_key (string, required) ... the API key

### Get Keyword Statistics [POST]

#### Request

<center><b>Example curl request</b></center>

    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d '{"sourceType":"review","sources":["google","citysearch"],"startDate":"11/02/2020","endDate":"01/06/2021","competitors":[{"competitorId":530846,"compAccountIds":[162426,144352]},{"competitorId":720708,"compAccountIds":[165432]}],"reviewSiteAllFlag":true,"topKW":25,"topAd":10,"orderBy":"ztoa","sentiment":-1}'
    "https://api.birdeye.com/resources/v1/competitors/competitive-insight/keywords/151134205012586?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

<center><b>Example Payload</b></center>

{
  "sourceType": "review",
  "sources": ["google","citysearch"],
  "startDate":"11/02/2020",
  "endDate":"01/06/2021",
  "competitors": [
    {
      "competitorId": 530846,
      "compAccountIds": [
        162426,
        144352
      ]
    },
    {
      "competitorId": 720708,
      "compAccountIds": [
        165432
      ]
    }
  ],
  "topKW": 25,
  "topAd": 10,
  "orderBy": "ztoa",
  "sentiment": -1
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>sourceType</td>
            <td>Type of source e.g. "review"[default] or "social</td>
        </tr>
        <tr>
            <td>reviewSites</td>
            <td>Aggregation source ids</td>
        </tr>
        <tr>
            <td>timePeriodSelected</td>
            <td>For all time : all</td>
        </tr>
        <tr>
            <td>startDate</td>
            <td>Date from which data has to be fetched[MM/DD/YYYY]</td>
        </tr>
        <tr>
            <td>endDate</td>
            <td>Date until which data has to be fetched[MM/DD/YYYY]</td>
        </tr>
        <tr>
            <td>competitorId</td>
            <td>Enterprise Competitor Ids(competitorId in Competitor of Enterprise Business API)</td>
        </tr>
        <tr>
            <td>compAccountIds</td>
            <td>Locations Ids of competitor account(compAccountIds in Child Business of Competitor API)</td>
        </tr>
        <tr>
            <td>topKW</td>
            <td>Count of top Keywords to be fetched </td>
        </tr><tr>
            <td>topAd</td>
            <td>Count of top Adjectives to be fetched </td>
        </tr>
        <tr>
            <td>orderBy</td>
            <td>Order of the result e.g.: "occurrence"[default] or "ztoa" or "atoz" </td>
        </tr>
        <tr>
            <td>sentiment</td>
            <td> -1 = negative sentiment,
                 1 = positive sentiment,
                 0 = all sentiments[default]</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response</b></center>

{
  "id": 398331,
  "name": "Social Stress",
  "keywords": [
    "yesterday"
  ],
  "ct": 2,
  "avgScr": 1.0,
  "keywordStats": [
    {
      "keyword": "yesterday",
      "occurences": 2,
      "score": 1.0,
      "scr": 2
    },
    {
      "keyword": "voor klacht",
      "occurences": 2,
      "score": 1.0,
      "scr": 2
    }
  ],
  "negKWAdjectives": [
    {
      "adjective": "small",
      "occurences": 1,
      "avgScore": 1.0,
      "prcnt": 50.0
    }
  ],
  "competitors": [
    {
      "id": 530846,
      "name": "Social 1",
      "keywords": [
        "yesterday"
      ],
      "ct": 0,
      "avgScr": 0.0,
      "keywordStats": [
        {
          "keyword": "worker",
          "occurences": 1,
          "score": 1.0,
          "scr": 1
        },
        {
          "keyword": "manager",
          "occurences": 1,
          "score": 1.0,
          "scr": 1
        }
      ]
    },
    {
      "id": 720717,
      "name": "hello comp",
      "keywords": [
        "yesterday"
      ],
      "ct": 0,
      "avgScr": 0.0,
      "keywordStats": [
      ]
    }
  ]
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Response Body</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>id</td>
            <td>Business Id</td>
        </tr> 
        <tr>
            <td>name</td>
            <td>Name of Enterprise</td>
        </tr>
         <tr>
            <td>keywords</td>
            <td>List of keywords</td>
        </tr>
        <tr>
            <td>ct</td>
            <td>Count</td>
        </tr>
        <tr>
            <td>avgScore</td>
            <td>Average Score</td>
        </tr>
        <tr>
            <td>occurences</td>
            <td>Occurences</td>
        </tr>
        <tr>
            <td>prcnt</td>
            <td>Percentage</td>
        </tr>
        <tr>
            <td>adjectives</td>
            <td>Adjective</td>
        </tr>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

    + Body

{
  "id": 119468,
  "name": "Social Stress",
  "keywords": [
    "experience"
  ],
  "ct": 27159,
  "avgScr": 1.0,
  "keywordStats": [
    {
      "keyword": "experience",
      "occurences": 27158,
      "score": 1.0,
      "scr": 27158
    },
    {
      "keyword": "lady",
      "occurences": 2186,
      "score": 1.0,
      "scr": 2186
    }
  ],
  "negKWAdjectives": [
    {
      "adjective": "horrible",
      "occurences": 4137,
      "avgScore": 1.0,
      "prcnt": 15.232519
    }
  ],
  "competitors": [
    {
      "id": 159180,
      "name": "Online Competitors",
      "keywords": [
        "experience"
      ],
      "ct": 1176,
      "avgScr": 1.0,
      "keywordStats": [
        {
          "keyword": "problem",
          "occurences": 2972,
          "score": 1.0,
          "scr": 2972
        }
      ],
      "negKWAdjectives": [
        {
          "adjective": "bad",
          "occurences": 340,
          "avgScore": 1.0,
          "prcnt": 28.911564
        }
      ]
    }
  ]
}

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]
 
## Create Competitor Enterprise [/v1/signup/competitor/{businessNumber}{?api_key}]
New Competitor can be created:

+ Parameters

    + businessNumber (string, required) ... the business ID
    + api_key (string, required) ... the API key

### Create New Competitor Enterprise [POST]

#### Request

<center><b>Example curl request</b></center>
    
    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d '{"businessName": "smb_comp","userEmailId": "varun.gupta@birdeye.com.com"}' "https://api.birdeye.com/resources/v1/signup/competitor/151134205012586?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

<center><b>Example Payload</b></center>

{
    "businessName": "CompE",
    "userEmailId": "varun.gupta@@birdeye.com"
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>businessName</td>
            <td>Name of the Competitor Enterprise that needs to be added</td>
        </tr>
        <tr>
            <td>userEmailId</td>
            <td>User Email</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response</b></center>

{
    "competitorId": 100037739,
    "templateid": 0,
    "isAggregationRequired": 1,
    "type": "Enterprise-Location-Competitor",
    "businessNumber": 161295237142347,
    "businessAlreadyPresent": false
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Response Body</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>competitorId</td>
            <td>Enterprise Competitor Business ID</td>
        </tr>
        <tr>
            <td>templateid</td>
            <td>Template Id</td>
        </tr>
        <tr>
            <td>isAggregationRequired</td>
            <td>isAggregationRequired</td>
        </tr>
        <tr>
            <td>type</td>
            <td>Type</td>
        </tr>
        <tr>
            <td>businessNumber</td>
            <td>Enterprise Competitor Business Number</td>
        </tr>
        <tr>
            <td>businessAlreadyPresent</td>
            <td>businessAlreadyPresent</td>
        </tr>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

    + Body

{
    "competitorId": 100037739,
    "templateid": 0,
    "isAggregationRequired": 1,
    "type": "Enterprise-Location-Competitor",
    "businessNumber": 161295237142347,
    "businessAlreadyPresent": false
}

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]    
    
## Create Child Business [/v1/signup/competitor/{business_number}{?api_key}]
New child business can be created in competitor enterprise:

+ Parameters

    + business_number (string, required) ... the business ID
    + api_key (string, required) ... the API key

### Create New Child Business in Competitor Enterprise [POST]

#### Request

<center><b>Example curl request</b></center>
    
    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d '{"businessName":"Location_compca","userEmailId":"varun.gupta@birdeye.com","countryCode":"CA","phone":"408-234-5272","zip":"95035","competitorId":100037693,"type":"Product"}' 
    "https://api.birdeye.com/resources/v1/signup/competitor/151134205012586?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

<center><b>Example Payload</b></center>

    {"businessName": "Location_compca",
    "userEmailId": "varu.gupta@birdeye.com",
    "countryCode": "CA",
    "phone": "408-234-5272",
    "zip": "95035",
    "competitorId": 100037693,
    "type": "Product"}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>businessName</td>
            <td>Name of the Business that needs to be added</td>
        </tr>
        <tr>
            <td>userEmailId</td>
            <td>User Email</td>
        </tr>
        <tr>
            <td>countryCode</td>
            <td>country Code of business location</td>
        </tr>
        <tr>
            <td>phone</td>
            <td>Business phone</td>
        </tr>
        <tr>
            <td>zip</td>
            <td>Postal code of the business location</td>
        </tr>
        <tr>
            <td>competitorId</td>
            <td>Enterprise Competitor Id(competitorId in Competitor of Enterprise Business API)</td>
        </tr>
        <tr>
            <td>type</td>
            <td>type</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response</b></center>

{
    "competitorId": 100037701,
    "templateid": 0,
    "isAggregationRequired": 0,
    "type": "Product",
    "businessNumber": 161278371646396,
    "compAccountId": 1795,
    "businessAlreadyPresent": true
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Response Body</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>competitorId</td>
            <td>Business ID</td>
        </tr>
         <tr>
            <td>userId</td>
            <td>UserId</td>
        </tr>
        <tr>
            <td>name</td>
            <td>Name</td>
        </tr>
        <tr>
            <td>templateid</td>
            <td>Template Id</td>
        </tr>
        <tr>
            <td>isAggregationRequired</td>
            <td>isAggregationRequired</td>
        </tr>
        <tr>
            <td>businessNumber</td>
            <td>Business Number</td>
        </tr>
        <tr>
            <td>compAccountId</td>
            <td>Location Id of competitor account(entry in compAccountIds in Child Business of Competitor API)</td>
        </tr>
        <tr>
            <td>businessAlreadyPresent</td>
            <td>businessAlreadyPresent</td>
        </tr>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

    + Body

{
    "competitorId": 100037701,
    "templateid": 0,
    "isAggregationRequired": 0,
    "type": "Product",
    "businessNumber": 161278371646396,
    "compAccountId": 1795,
    "businessAlreadyPresent": true
}

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]
     
## Add Aggregation Link [/v1/aggregation/competitor/{compAccountId}/{businessNumber}{?api_key}]
New Competitor Aggregation can be added :

+ Parameters
    + compAccountId (string, required) ... locations Id of competitor account(compAccountIds in Child Business of Competitor API)
    + businessNumber (string, required) ... the business ID
    + api_key (string, required) ... the API key

### Add new Competitor Aggregation URL [POST]

#### Request

<center><b>Example curl request</b></center>
    
    curl -H "content-type: application/json" -H "accept:application/json" -X POST -d '{"source":"google","url":"https://www.google.com/maps/place/Rama+Sai+Medical+Store/@28.4390976,76.9596497,11z/data=!4m8!1m2!2m1!1sreviews+google!3m4!1s0x390d04b550d23f2d:0x7e948cb85612d0!8m2!3d28.61074!4d77.0798476"}' 
    "https://api.birdeye.com/resources/v1/aggregation/competitor/1765/159135019006567?api_key=92bcd6e0-c102-43fd-8a67-1a7be5258451" -v

<center><b>Example Payload</b></center>

{ 
  "source": "google",
  "url": "https://www.google.com/maps/place/Rama+Sai+Medical+Store/@28.4390976,76.9596497,11z/data=!4m8!1m2!2m1!1sreviews+google!3m4!1s0x390d04b550d23f2d:0x7e948cb85612d0!8m2!3d28.61074!4d77.0798476"
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Request Payload</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>source</td>
            <td>Source Name</td>
        </tr>
        <tr>
            <td>url</td>
            <td>Source Url</td>
        </tr>
        </tbody>
    </table>
</div>

#### Response

<center><b>Example Response</b></center>

{
    "id": 140179308,
    "sourceId": 2,
    "compAccountId": 1765,
    "sourceUrl": "https://www.google.com/maps/place/Rama+Sai+Medical+Store/@28.4390976,76.9596497,11z/data=!4m8!1m2!2m1!1sreviews+google!3m4!1s0x390d04b550d23f2d:0x7e948cb85612d0!8m2!3d28.61074!4d77.0798476",
    "sourceName": "Google",
    "thumbnailUrl": "source/icons/2.png",
    "backGroundColor": "#dd4b39",
    "textColor": "#ffffff",
    "userName": null,
    "password": null,
    "profileId": null,
    "reviewFormUrl": "https://www.google.com/maps/place/Rama+Sai+Medical+Store/@28.4390976,76.9596497,11z/data=!4m8!1m2!2m1!1sreviews+google!3m4!1s0x390d04b550d23f2d:0x7e948cb85612d0!8m2!3d28.61074!4d77.0798476",
    "aggregationStatus": 3,
    "sourceAlias": "google",
    "disabledAggregation": null,
    "disabledAggregationReason": null
}

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Response Body</caption>
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>id</td>
            <td>id</td>
        </tr>
        <tr>
            <td>sourceId</td>
            <td>Source Id</td>
        </tr>
         <tr>
            <td>compAccountId</td>
            <td>Location Id of competitor account(entry in compAccountIds in Child Business of Competitor API)</td>
        </tr>
        <tr>
            <td>sourceUrl</td>
            <td>Source Url</td>
        </tr>
        <tr>
            <td>sourceName</td>
            <td>Source Name</td>
        </tr>
        <tr>
            <td>thumbnailUrl</td>
            <td>Thumbnail Url</td>
        </tr>
        <tr>
            <td>backGroundColor</td>
            <td>BackGround Color</td>
        </tr>
        <tr>
            <td>textColor</td>
            <td>TextColor</td>
        </tr>
        <tr>
            <td>userName</td>
            <td>User Name</td>
        </tr>
         <tr>
            <td>password</td>
            <td>Password</td>
        </tr>
         <tr>
            <td>profileId</td>
            <td>Profile ID</td>
        </tr>
         <tr>
            <td>reviewFormUrl</td>
            <td>ReviewFormUrl</td>
        </tr>
         <tr>
            <td>aggregationStatus</td>
            <td>Aggregation Status</td>
        </tr>
         <tr>
            <td>sourceAlias</td>
            <td>SourceAlias</td>
        </tr>
        <tr>
            <td>disabledAggregation</td>
            <td>disabledAggregation</td>
        </tr>
        <tr>
            <td>disabledAggregationReason</td>
            <td>disabledAggregationReason</td>
        </tr>
        </tbody>
    </table>
</div>

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1167</td>
            <td>API key is missing</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

    + Body

{
    "id": 140179308,
    "sourceId": 2,
    "compAccountId": 1765,
    "sourceUrl": "https://www.google.com/maps/place/Rama+Sai+Medical+Store/@28.4390976,76.9596497,11z/data=!4m8!1m2!2m1!1sreviews+google!3m4!1s0x390d04b550d23f2d:0x7e948cb85612d0!8m2!3d28.61074!4d77.0798476",
    "sourceName": "Google",
    "thumbnailUrl": "source/icons/2.png",
    "backGroundColor": "#dd4b39",
    "textColor": "#ffffff",
    "userName": null,
    "password": null,
    "profileId": null,
    "reviewFormUrl": "https://www.google.com/maps/place/Rama+Sai+Medical+Store/@28.4390976,76.9596497,11z/data=!4m8!1m2!2m1!1sreviews+google!3m4!1s0x390d04b550d23f2d:0x7e948cb85612d0!8m2!3d28.61074!4d77.0798476",
    "aggregationStatus": 3,
    "sourceAlias": "google",
    "disabledAggregation": null,
    "disabledAggregationReason": null
}

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 401

    [1167][] 
