FORMAT: 1A
HOST: https://api.birdeye.com/resources

# Birdeye
Birdeye helps businesses grow through happy customers. Over 80,000 businesses use Birdeye everyday to attract new leads with Listings, Reviews and Referrals, convert them into customers with Webchat, Appointments, and Payments, and delight those customers with Surveys, Ticketing, and Insights - all in one place.

The Birdeye APIs are built on HTTP and are RESTful APIs.

* Uses resource-oriented URLs.
* Uses built-in HTTP capabilities for passing parameters and authentication.
* Responds with standard HTTP response codes to indicate errors.
* Requests and responses payload attached with all the mentioned APIs, you may choose your preferred language per the integration requirement.


### Authentication and Rate limiting

To call a Birdeye API, you need a valid API key. It can be fetched via the Birdeye dashboard and is a confidential key.

There is a limit to calling APIs with each API key [connect with the support team to get the current limit]. If too many requests are made within the threshold timeframe, an error will be returned in the response.

### Pagination

Multiple API supporting pagination. These APIs have two parameters sindex and count.


* <b>sindex:</b> is the start index
* <b>count:</b> No. of records, you want to fetch.


> __Note__
> - _Deep Pagination with record window greater than 100k is not supported. Either reduce the sindex + count to be less than equal to 100k or use appropriate filters to narrow down your result set._



<b>For example :</b>

* Suppose you have to fetch 20 records:
<pre><code>
API call 1 -> sindex=0, count 10
API call 2 -> sindex -> 10, count 10.
</pre></code>

* To fetch 100kth record:
<pre><code>
sindex = 99000 and count = 1000
will just work fine as sindex + count = 100000 which is less than 100,000.
</pre></code>

* If you fetch more than 100kth records:
<pre><code>
sindex = 99000 and count = 1001, sindex + count = 100001
which is greater than 100,000. Thus, you'll receive an error in response.
</pre></code>

### HTTP Status Codes
Every API response will have an HTTP status code.

* <b>200 - OK:</b> API request is successful
* <b>202 - Accepted:</b> The API request has been accepted for processing.
* <b>400 - Bad Request:</b> The API request was unacceptable, often due to a missing or invalid parameter.
* <b>404 - Not Found:</b> The requested resource does not exist.
* <b>429 - Rate Limited:</b> You have made too many requests within the threshold timeframe.
* <b>500 - Internal Server Error:</b> Something went wrong on our end. Please get in touch with support.

### Error Response

Birdeye API will return a validation error in case of missing/invalid input in the request. The response will return the errorCode and errorMessage.

For example :
<pre><code>
{
    "code": 1161,
    "message": "Invalid API key"
}
</pre></code>


## 1023 [/1023]

+ Model (application/json)

        {
            "code": 1023,
            "message": "No email addresses specified"
        }

## 1052 [/1052]

+ Model (application/json)

        {
            "code": 1052,
            "message": "User email id cannot be blank"
        }

## 1150 [/1150]

+ Model (application/json)

        {
            "code": 1150,
            "message": "Business already associated with this reseller"
        }

## 1151 [/1151]

+ Model (application/json)

        {
            "code": 1151,
            "message": "Business already associated with another reseller"
        }

## 1040 [/1040]

+ Model (application/json)

        {
            "code": 1040,
            "message": "Invalid temmplate id."
        }

## 1045 [/1045]

+ Model (application/json)

        {
            "code": 1045,
            "message": "Business name cannot be blank"
        }

## 1046 [/1046]

+ Model (application/json)

        {
            "code": 1046,
            "message": "Business name cannot be more than 250 characters"
        }

## 1047 [/1047]

+ Model (application/json)

        {
            "code": 1047,
            "message": "Business name cannot be less than 3 characters"
        }

## 1094 [/1094]

+ Model (application/json)

        {
            "code": 1094,
            "message": "Postal code cannot be blank."
        }

## 1030 [/1030]

+ Model (application/json)

        {
            "code": 1030,
            "message": "URL cannot be blank"
        }

## 1031 [/1031]

+ Model (application/json)

        {
            "code": 1031,
            "message": "Source id cannot be blank"
        }

## 1032 [/1032]

+ Model (application/json)

        {
            "code": 1032,
            "message": "Invalid source id"
        }

## 1039 [/1039]

+ Model (application/json)

        {
            "code": 1039,
            "message": "Invalid business aggregation id"
        }

## 1067 [/1067]

+ Model (application/json)

        {
            "code": 1067,
            "message": "URL is invalid"
        }

## 1075 [/1075]

+ Model (application/json)

        {
            "code": 1075,
            "message": "Business location zip cannot be more than 6 numbers"
        }

## 1025 [/1025]

+ Model (application/json)

        {
            "code": 1025,
            "message": "Invalid business type"
        }

## 1161 [/1161]

+ Model (application/json)

        {
            "code": 1161,
            "message": "Invalid API key"
        }

## 1167 [/1167]

+ Model (application/json)

        {
            "code": 1167,
            "message": "API key is missing"
        }

## 89 [/89]
+ Model (application/json)

        {
            "code": 89,
            "message": "Rate limit exceeded"
        }

## 1033 [/1033]

+ Model (application/json)

        {
            "code": 1033,
            "message": "You are not authorized to perform this action"
        }

## 1175 [/1175]

+ Model (application/json)

        {
            "code": 1175,
            "message": "No business found with the given id"
        }

##  1010 [/1010]

+ Model (application/json)

        {
            "code": 1010,
            "message": "No user found with the given id"
        }

## 1076 [/1076]

+ Model (application/json)

        {
            "code": 1176,
            "message": "Business info cannot be blank"
        }

## 1162 [/1162]

+ Model (application/json)

        {
            "code": 1162,
            "message": "Either search string or location or both should be specified"
        }

## 1163 [/1163]

+ Model (application/json)

        {
            "code": 1163,
            "message": "Invalid start index value"
        }

## 1164 [/1164]

+ Model (application/json)

        {
            "code": 1164,
            "message": "Invalid result count value"
        }

## 1011 [/1011]

+ Model (application/json)

        {
            "code": 1011,
            "message": "Business id is invalid"
        }

## 1380 [/1380]

+ Model (application/json)

        {
            "code": 1380,
            "message": "Api key or session token missing"
        }

## 1048 [/1048]

+ Model (application/json)

        {
            "code": 1048,
            "message": "Business email id cannot be blank."
        }

## 1049 [/1049]

+ Model (application/json)

        {
            "code": 1049,
            "message": "Business email id is invalid."
        }

## 1050 [/1050]

+ Model (application/json)

        {
            "code": 1050,
            "message": "Business email id cannot be more than 40 characters."
        }

## 1055 [/1055]

+ Model (application/json)

        {
            "code": 1055,
            "message": "Not a valid US phone number."
        }

## 1056 [/1056]

+ Model (application/json)

        {
            "code": 1056,
            "message": "Not a valid US fax number."
        }


## 1069 [/1069]

+ Model (application/json)

        {
            "code": 1069,
            "message": "Business description cannot be more than 4000 characters."
        }

## 1070 [/1070]

+ Model (application/json)

        {
            "code": 1070,
            "message": "Business keywords cannot be more than 1000 characters."
        }

## 1089 [/1089]

+ Model (application/json)

        {
            "code": 1089,
            "message": "Customer id is invalid."
        }

## 1091 [/1091]

+ Model (application/json)

        {
            "code": 1091,
            "message": "User id not authorized to view this customer."
        }

## 1190 [/1190]

+ Model (application/json)

        {
            "code": 1190,
            "message": "Invalid category"
        }

## 1184 [/1184]

+ Model (application/json)

        {
            "code": 1184,
            "message": "Status change is not allowed"
        }

## 1191 [/1191]

+ Model (application/json)

        {
            "code": 1191,
            "message": "Invalid status."
        }

## 1174 [/1174]

+ Model (application/json)

        {
            "code": 1174,
            "message": "Reseller can't be removed as it has child accounts."
        }

## 1160 [/1160]

+ Model (application/json)

        {
            "code": 1160,
            "message": "User is already associated with business."
        }

## 1053 [/1053]

+ Model (application/json)

        {
            "code": 1053,
            "message": "User email id is invalid"
        }

## 1054 [/1054]

+ Model (application/json)

        {
            "code": 1054,
            "message": "User email id cannot be more than 40 characters"
        }

## 1014 [/1014]

+ Model (application/json)

        {
            "code": 1014,
            "message": "User role cannot be blank"
        }


## 1013 [/1013]

+ Model (application/json)

        {
            "code": 1013,
            "message": "Unknown user role"
        }


## 1057 [/1057]

+ Model (application/json)

        {
            "code": 1057,
            "message": "First name cannot be more than 50 characters"
        }

## 1059 [/1059]

+ Model (application/json)

        {
            "code": 1059,
            "message": "Last name cannot be more than 50 characters"
        }

## 1188 [/1188]

+ Model (application/json)

        {
            "code": 1188,
            "message": "User is not associated with the business."
        }


## 1189 [/1189]

+ Model (application/json)

        {
            "code": 1189,
            "message": "User with given email id not found."
        }

## 1177 [/1177]

+ Model (application/json)

        {
            "code": 1177,
            "message": "User is not authorized to perform any action on any business"
        }

## 1081 [/1081]

+ Model (application/json)

        {
            "code": 1081,
            "message": "Review comment is too long"
        }


## 1082 [/1082]

+ Model (application/json)

        {
            "code": 1082,
            "message": "Review rating is missing"
        }

## 1142 [/1142]

+ Model (application/json)

        {
            "code": 1142,
            "message": "Customer name cannot be blank"
        }


## 1086 [/1086]

+ Model (application/json)

        {
            "code": 1086,
            "message": "Customer email id cannot be blank."
        }

## 1087 [/1087]

+ Model (application/json)

        {
            "code": 1087,
            "message": "Customer email id is invalid."
        }

## 1088 [/1088]

+ Model (application/json)

        {
            "code": 1088,
            "message": "Customer email id cannot be more than 40 characters."
        }

## 1170 [/1170]

+ Model (application/json)

        {
            "code": 1170,
            "message": "SMS Alert flag is invalid. Valid values are 0 or 1."
        }

## 1242 [/1242]

+ Model (application/json)

        {
            "code": 1242,
            "message": "Invalid rating value. Allowed value between 0-5."
        }


## 1228 [/1228]

+ Model (application/json)

        {
            "code": 1228,
            "message": "Invalid updated to date. Allowed format is MM/dd/yyyy"
        }

## 1227 [/1227]

+ Model (application/json)

        {
            "code": 1227,
            "message": "Invalid updated from date. Allowed format is MM/dd/yyyy"
        }


## 1243 [/1243]

+ Model (application/json)

        {
            "code": 1243,
            "message": "Invalid rating value. Allowed value between 1-5."
        }

## 1244 [/1244]

+ Model (application/json)

        {
            "code": 1244,
            "message": "Maximum 5 keywords can be selected for filter."
        }

## 1246 [/1246]

+ Model (application/json)

        {
            "code": 1246,
            "message": "Customer email or phone number is required."
        }

## 1215 [/1215]

+ Model (application/json)

        {
            "code": 1215,
            "message": "Invalid report month."
        }

## 1251 [/1251]

+ Model (application/json)

        {
            "code": 1251,
            "message": "No review to mark featured/un-featured."
        }

## 1042 [/1042]

+ Model (application/json)

        {
            "code": 1042,
            "message": "Invalid review id"
        }

## 1252 [/1252]

+ Model (application/json)

        {
            "code": 1252,
            "message": "Review does not belong to the business."
        }

## 1248 [/1248]

+ Model (application/json)

        {
            "code": 1248,
            "message": "Allowed limit for featured reviews exceeded."
        }

## 1186 [/1186]

+ Model (application/json)

        {
            "code": 1186,
            "message": "Invalid from date. Allowed format is "MM/dd/yyyy"."
        }

## 1187 [/1187]

+ Model (application/json)

        {
            "code": 1187,
            "message": "Invalid to date. Allowed format is "MM/dd/yyyy"."
        }

## 1265 [/1265]

+ Model (application/json)

        {
            "code": 1265,
            "message": "Value for showOnFacebook is mandatory."
        }

## 1266 [/1266]

+ Model (application/json)

        {
            "code": 1266,
            "message": "Value for showOnProfile is mandatory."
        }

## 1267 [/1267]

+ Model (application/json)

        {
            "code": 1267,
            "message": "Value for showOnWebsite is mandatory."
        }

## 1268 [/1268]

+ Model (application/json)

        {
            "code": 1268,
            "message": "TabType is mandatory field."
        }

## 1269 [/1269]

+ Model (application/json)

        {
            "code": 1269,
            "message": "Max length for lable is 30."
        }

## 1270 [/1270]

+ Model (application/json)

        {
            "code": 1270,
            "message": "Max length for URL is 1000."
        }

## 1360 [/1360]

+ Model (application/json)

        {
            "code": 1360,
            "message": "Hierarchy is not supported for this parent type."
        }

## 1361 [/1361]

+ Model (application/json)

        {
            "code": 1361,
            "message": "Hierarchy is not supported for this child type."
        }

## 1362 [/1362]

+ Model (application/json)

        {
            "code": 1362,
            "message": "{Child type} cannot be added under {Parent type}."
        }

## 1363 [/1363]

+ Model (application/json)

        {
            "code": 1363,
            "message": "Invalid parent child mapping."
        }


## 1029 [/1029]

+ Model (application/json)

        {
            "code": 1029,
            "message": "Aggregation source not found"
        }

## 1315 [/1315]

+ Model (application/json)

        {
            "code": 1315,
            "message": "Invalid survey."
        }

## 1523 [/1523]

+ Model (application/json)

        {
            "code": 1523,
            "message": "The correct date format should be mm/dd/yyyy."
        }


## 1524 [/1524]

+ Model (application/json)

        {
            "code": 1524,
            "message": "Date entered is invalid."
        }

## 2110 [/2110]

+ Model (application/json)

        {
            "code": 2110,
            "message": "Your review response could not be submitted due to a temporary error on Google. Please try after some time."
        }

## 21101 [/21101]

+ Model (application/json)

        {
            "code": 21101,
            "message": "Google page is not integrated. Kindly integrate it first."
        }

## 21103 [/21103]

+ Model (application/json)

        {
            "code": 21103,
            "message": "Your review response could not be submitted due to a temporary error on Google."
        }

## 21104 [/21104]

+ Model (application/json)

        {
            "code": 21104,
            "message": "Sorry, We could not find this review on Google. Please go to your Google Business page and reply to this review. Thank you."
        }

## 2111 [/2111]

+ Model (application/json)

        {
            "code": 2111,
            "message": "Your review response could not be submitted due to a temporary error on Facebook. Please try after some time."
        }

## 21113 [/21113]

+ Model (application/json)

        {
            "code": 21113,
            "message": "Facebook page is not integrated. Kindly integrate it first."
        }

## 21114 [/21114]

+ Model (application/json)

        {
            "code": 21114,
            "message": "Sorry, We could not find this review on Facebook. Please go to your Facebook page and reply to this review. Thank you."
        }

## 21112 [/21112]

+ Model (application/json)

        {
            "code": 21112,
            "message": "Your review response could not be submitted due to a temporary error on Facebook."
        }

## 2222 [/2222]

+ Model (application/json)

        {
            "code": 2222,
            "message": "Oops! Something is off on our side. We are working on it. Please check later."
        }

## 2075 [/2075]

+ Model (application/json)

        {
            "code": 2075,
            "message": "Error while claiming a provider for Care Dash"
        }

## 20706 [/20706]

+ Model (application/json)

        {
            "code": 20706,
            "message": "Error while posting a reply to Care Dash"
        }

## 2078 [/2078]

+ Model (application/json)

        {
            "code": 2078,
            "message": "Error while posting a reply to Rent"
        }

## 1541 [/1541]

+ Model (application/json)

        {
            "code": 1541,
            "message": "Rate Limit of API has been exceeded."
        }

## 1532 [/1532]

+ Model (application/json)

        {
            "code": 1532,
            "message": "Business id is missing or invalid."
        }

## 5008 [/5008]

+ Model (application/json)

        {
            "code": 5008,
            "message": "RequestBody not found"
        }

## 5043 [/5043]

+ Model (application/json)

        {
            "code": 5043,
            "message": "Contact not found for the given request"
        }

## 2038 [/2038]

+ Model (application/json)

        {
            "code": 2038,
            "message": "Invalid value of role, expected editor, viewer or no-access"
        }

## 2041 [/2041]

+ Model (application/json)

        {
            "code": 2041,
            "message": "Can't modify owner or existing owner's access!"
        }

## 2039 [/2039]

+ Model (application/json)

        {
            "code": 2039,
            "message": "User email is missing in user access request!"
        }

## 2043 [/2043]

+ Model (application/json)

        {
            "code": 2043,
            "message": "Invalid value of showTitle, accepted values are CUSTOM, LOCATION, OFF"
        }

## 2090 [/2090]

+ Model (application/json)

        {
            "code": 2090,
            "message": "Invalid value of showLogo, accepted values are ON, OFF"
        }

## 2040 [/2040]

+ Model (application/json)

        {
            "code": 2040,
            "message": "Invalid value of progress bar position, expected Bottom or Top"
        }

## 2042 [/2042]

+ Model (application/json)

        {
            "code": 2042,
            "message": "Received no valid inputs in request body!"
        }

## 2037 [/2037]

+ Model (application/json)

        {
            "code": 2037,
            "message": "The survey doesn't belong to the account."
        }

## 2044 [/2044]

+ Model (application/json)

        {
            "code": 2044,
            "message": "Survey already completed"
        }

## 2093 [/2093]

+ Model (application/json)

        {
            "code": 2093,
            "message": "Survey Field Type passed is unknown"
        }

## 2045 [/2045]

+ Model (application/json)

        {
            "code": 2045,
            "message": "Invalid Survey Type"
        }

## 2046 [/2046]

+ Model (application/json)

        {
            "code": 2046,
            "message": "Min Value is greater then Max Value"
        }

## 2047 [/2047]

+ Model (application/json)

        {
            "code": 2047,
            "message": "Survey Fields Missing!"
        }

## 2048 [/2048]

+ Model (application/json)

        {
            "code": 2048,
            "message": "Field Rows Missing"
        }

## 2049 [/2049]

+ Model (application/json)

        {
            "code": 2049,
            "message": "Interval can only be 30 min or 60 min"
        }

## 2050 [/2050]

+ Model (application/json)

        {
            "code": 2050,
            "message": "More than one location question cannot be present"
        }

## 2051 [/2051]

+ Model (application/json)

        {
            "code": 2051,
            "message": "More than one review question cannot be present"
        }

## 2052 [/2052]

+ Model (application/json)

        {
            "code": 2052,
            "message": "Review question should be present in the last page of the survey as a single question"
        }

## 2053 [/2053]

+ Model (application/json)

        {
            "code": 2053,
            "message": "Contact Fields are not present"
        }

## 2054 [/2054]

+ Model (application/json)

        {
            "code": 2054,
            "message": "Min Value out of range"
        }

## 2055 [/2055]

+ Model (application/json)

        {
            "code": 2055,
            "message": "Max Value out of range"
        }

## 2056 [/2056]

+ Model (application/json)

        {
            "code": 2056,
            "message": "Min and Max values can only be even numbers when the interval is 60 minutes"
        }

## 2057 [/2057]

+ Model (application/json)

        {
            "code": 2057,
            "message": "Either one of Min and Max values is missing in datetime type question"
        }

## 2058 [/2058]

+ Model (application/json)

        {
            "code": 2058,
            "message": "LocationIds are not present"
        }

## 2059 [/2059]

+ Model (application/json)

        {
            "code": 2059,
            "message": "Invalid type of contact question"
        }

## 2060 [/2060]

+ Model (application/json)

        {
            "code": 2060,
            "message": "reviewSources are not present for review type question"
        }

## 2061 [/2061]

+ Model (application/json)

        {
            "code": 2061,
            "message": "Pickone type of survey can only contain pickone type questions"
        }

## 2062 [/2062]

+ Model (application/json)

        {
            "code": 2062,
            "message": "Traditional type survey cannot contain these type questions"
        }

## 2063 [/2063]

+ Model (application/json)

        {
            "code": 2063,
            "message": "Pulse(NPS) Survey can only contain radio, text, textarea(paragraph), rating and nps type questions"
        }

## 2064 [/2064]

+ Model (application/json)

        {
            "code": 2064,
            "message": "First page of the survey must contain atleast one question except review question"
        }

## 2065 [/2065]

+ Model (application/json)

        {
            "code": 2065,
            "message": "There cannot be more than 3 sourceIds for review question"
        }

## 2066 [/2066]

+ Model (application/json)

        {
            "code": 2066,
            "message": "BusinessIds passed in the location type question are invalid"
        }

## 2067 [/2067]

+ Model (application/json)

        {
            "code": 2067,
            "message": "One of the locations passed in the request is not present"
        }

## 2068 [/2068]

+ Model (application/json)

        {
            "code": 2068,
            "message": "The locationIds are Non-Parseable"
        }

## 2069 [/2069]

+ Model (application/json)

        {
            "code": 2069,
            "message": "surveyName is Mandatory"
        }

## 2070 [/2070]

+ Model (application/json)

        {
            "code": 2070,
            "message": "Question Type cannot be blank"
        }

## 2071 [/2071]

+ Model (application/json)

        {
            "code": 2071,
            "message": "Invalid ownerEmailId"
        }

## 2072 [/2072]

+ Model (application/json)

        {
            "code": 2072,
            "message": "Choice cannot be a blank string"
        }

## 2073 [/2073]

+ Model (application/json)

        {
            "code": 2073,
            "message": "Logic type is Invalid!"
        }

## 2074 [/2074]

+ Model (application/json)

        {
            "code": 2074,
            "message": "Cannot contain a logic"
        }

## 2092 [/2092]

+ Model (application/json)

        {
            "code": 2092,
            "message": "Invalid Logic!"
        }

## 2076 [/2076]

+ Model (application/json)

        {
            "code": 2076,
            "message": "Value of the logic is not present in the choices of Question"
        }

## 2077 [/2077]

+ Model (application/json)

        {
            "code": 2077,
            "message": "Value of a questionLogic field cannot be blank"
        }

## 2091 [/2091]

+ Model (application/json)

        {
            "code": 2091,
            "message": "Operator Invalid"
        }

## 2079 [/2079]

+ Model (application/json)

        {
            "code": 2079,
            "message": "Only one Skip logic is allowed for text and textarea type questions"
        }

## 2080 [/2080]

+ Model (application/json)

        {
            "code": 2080,
            "message": "Display Logic Invalid!"
        }

## 2081 [/2081]

+ Model (application/json)

        {
            "code": 2081,
            "message": "Skip Logic Invalid!"
        }

## 2082 [/2082]

+ Model (application/json)

        {
            "code": 2082,
            "message": "The API returned an empty response."
        }

## 2083 [/2083]

+ Model (application/json)

        {
            "code": 2083,
            "message": "Source is not integrated with the business"
        }

## 2084 [/2084]

+ Model (application/json)

        {
            "code": 2084,
            "message": "Opeartor must be present for logics other than the first display logic"
        }

## 2085 [/2085]

+ Model (application/json)

        {
            "code": 2085,
            "message": "Condition cannot be null!"
        }

## 2086 [/2086]

+ Model (application/json)

        {
            "code": 2086,
            "message": "Question Number cannot be null"
        }

## 2087 [/2087]

+ Model (application/json)

        {
            "code": 2087,
            "message": "Duplicate contact sub type question is present"
        }

## 2088 [/2088]

+ Model (application/json)

        {
            "code": 2088,
            "message": "Review Source already present"
        }

## 2094 [/2094]

+ Model (application/json)

        {
            "code": 2094,
            "message": "ReviewSources passed are invalid"
        }

## 2095 [/2095]

+ Model (application/json)

        {
            "code": 2095,
            "message": "ownerEmailId cannot be null"
        }

## 2096 [/2096]

+ Model (application/json)

        {
            "code": 2096,
            "message": "Detected conflicting user-access request!"
        }

## 2347 [/2347]

+ Model (application/json)

        {
            "code": 2347,
            "message": "Max page size allowed is 1,000"
        }



## 2348 [/2348]

+ Model (application/json)

        {
            "code": 2348,
            "message": "Max window size allowed is 60000 for a filter selection"
        }

## 21122 [/21122]

+ Model (application/json)

        {
            "code": 21122,
            "message": "Reseller business is not supported in this request"
        }

## 21120 [/21120]

+ Model (application/json)

        {
            "code": 21120,
            "message": "Invalid contact type provided in the request. Valid contact types are lead or customer"
        }

## 21121 [/21121]

+ Model (application/json)

        {
            "code": 21121,
            "message": "Invalid contact source provided in the request."
        }

## 5046 [/5046]

+ Model (application/json)

        {
            "code": 5046,
            "message": "The customer is blocked"
        }

## 1021 [/1021]

+ Model (application/json)

        {
            "code": 1021,
            "message": "Invalid Phone Number."
        }

## 1001 [/1001]

+ Model (application/json)

        {
            "code": 1001,
            "message": "Name of the contact is too long."
        }


## 1422 [/1422]

+ Model (application/json)

        {
            error"code": 1422,
            error"message": "Api call failed"
        }


## 5556 [/5556]

+ Model (application/json)

        {
            "code": 5556,
            "message": "One or few BusinessIds are Invalid"
        }


## 5557 [/5557]

+ Model (application/json)

        {
            "code": 5557,
            "message": "Requested Business Ids are empty."
        }

## 400 [/400]

+ Model (application/json)

        {
            "code": 400,
            "message": "Page size must not be less than one!"
        }


## 4011 [/4011]

+ Model (application/json)

        {
            "code": 400,
            "message": "Category Id not found"
        }

## 4012 [/4012]

+ Model (application/json)

        {
            "code": 400,
            "message": "Country code not found"
        }

## 4013 [/4013]

+ Model (application/json)

        {
            "code": 400,
            "message": "Invalid country code"
        }


## 4014 [/4014]

+ Model (application/json)

        {
            "code": 400,
            "message": "Source name not found"
        }

## 4015 [/4015]

+ Model (application/json)

        {
            "code": 400,
            "message": "Invalid Source Name"
        }


## 20083 [/20083]

+ Model (application/json)

        {
            "code": 20083,
            "message": "End date can't be before start date"
        }

## 2180 [/2180]

+ Model (application/json)

        {
            "code": 2180,
            "message": "The recommended Image size for Google media image is 250 pixels wide and 250 pixels tall."
        }

## 2181 [/2181]

+ Model (application/json)

        {
            "code": 2181,
            "message": "Supported video format is MP4."
        }

## 2174 [/2174]

+ Model (application/json)

        {
            "code": 2174,
            "message": "Unsupported media format"
        }

## 2171 [/2171]

+ Model (application/json)

        {
            "code": 2171,
            "message": "URL is invalid"
        }

## 2175 [/2175]

+ Model (application/json)

        {
            "code": 2175,
            "message": "Provided media category is not supported"
        }


## 2270 [/2270]

+ Model (application/json)

        {
            "code": 2270,
            "message": "Unsupported Media Category for the business"
        }


## 2176 [/2176]

+ Model (application/json)

        {
            "code": 400,
            "message": "Category can not be empty"
        }

## 2457 [/2457]

+ Model (application/json)

        {
            "code": 2457,
            "message": "Invalid sortby value. Allowed values are 'frequency' or 'keyword'"
        }

## 2458 [/2458]

+ Model (application/json)

        {
            "code": 2458,
            "message": "Invalid order value. Allowed values are 'asc' or 'desc'."
        }

## 2177 [/2177]

+ Model (application/json)

        {
            "code": 400,
            "message": "Invalid media id"
        }

## 2178 [/2178]

+ Model (application/json)

        {
            "code": 400,
            "message": "mediaIds can not be empty"
        }

## 1093 [/1093]

+ Model (application/json)

        {
            "code": 1093,
            "message": "HierarchyNode is enabled for this account."
        }

## 2150 [/2150]

+ Model (application/json)

        {
            "code": 2150,
            "message": "Not a valid reseller/enterprise id."
        }

## 2151 [/2151]

+ Model (application/json)

        {
            "code": 2151,
            "message": "Not a valid reseller/enterprise id."
        }

## 2152 [/2152]

+ Model (application/json)

        {
            "code": 2152,
            "message": "Not a valid reseller/enterprise id."
        }

## 2153 [/2153]

+ Model (application/json)

        {
            "code": 2153,
            "message": "Business name should not have the word Birdeye."
        }

## 2154 [/2154]

+ Model (application/json)

        {
            "code": 2154,
            "message": "Business is already an active account."
        }

## 2155 [/2155]

+ Model (application/json)

        {
            "code": 2155,
            "message": "Business is already an in-active account."
        }

## 2156 [/2156]

+ Model (application/json)

        {
            "code": 2156,
            "message": "Business/Location/Product already exists"
        }


## 2157 [/2157]

+ Model (application/json)

        {
            "code": 2157,
            "message": "Business already associated with another reseller/enterprise."
        }
## 2286 [/2286]

+ Model (application/json)

        {
            "code": 2286,
            "message": "Zip code is not provided for business"
        }
## 2166 [/2166]

+ Model (application/json)

        {
            "code": 2166,
            "message": "Invalid Business Type"
        }
## 2292 [/2292]

+ Model (application/json)

        {
            "code": 2292,
            "message": "sortby can only be 'total' or 'location'"
        }
## 2293 [/2293]

+ Model (application/json)

        {
            "code": 2293,
            "message": "order can only be 'asc' or 'desc'"
        }
## 40001 [/40001]

+ Model (application/json)

        {
            "code": 40001,
            "message": "invalid start date (supported format is yyyy-MM-dd)"
        }

## 2296 [/2296]

+ Model (application/json)

        {
            "code": 2296,
            "message": "Invalid Food Delivery link"
        }

## 2297 [/2297]

+ Model (application/json)

        {
            "code": 2297,
            "message": "Invalid Food Takeout link"
        }

## 2290 [/2290]

+ Model (application/json)

        {
            "code": 2290,
            "message": "Food Takeout/Food Delivery not supported for gmb primary category"
        }

# Group Business
Create and maintain your business on Birdeye.

## Create Business [/v1/signup/reseller/subaccount{?api_key,rid,email_id}]
Create a business API creates a new business under a reseller.

### Create a business [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + rid: 12334667201 (required, number) - Id of the Reseller.
    + email_id: sample@birdeye.com (required, string) - Business Email id.

+ Request (application/json)


    + Headers

            Accept: application/json


    + Body

            {
                "businessName": "The Business Name",
                "zip": 32323,
                "type": "Business",
                "phone": "4032365164",
                "countryCode": "US"
                "aggrOptions" : 1
            }

    + Attributes

        + businessName: Test Business (required,string)- Name of the Business that needs to be added
        + zip: 32323 (required,string)- Postal code of the business location
        + type: Business (string)- Type of the Business. Valid values are
                Business,
                Enterprise-Location,
                Enterprise-Product,
                Reseller
                or a existing custom hierarchy type. Default is: Business.
        + phone: 4032365164 (required,number)- Phone number of the Business.
        + countryCode: AU (string) - This field is mandatory for non US locations.
        + aggrOptions:1 (number)- Aggregation Options to enable/disable aggregations. Possible values are [0,1]
                0 to Disable Search Business
                1 to Enable Search Business,

            If aggrOptions is not provided, then Search Business is enabled.


+ Response 200 (application/json)

    + Attributes

        + businessId:653356544 (number)- Id of the created business

    + Body

            {
               "businessId": 653356544
            }

+ Response 401

    [1161][]

+ Response 401

    [1167][]

+ Response 429

    [89][]

+ Response 401

    [1033][]

+ Response 404

    [1175][]

+ Response 404

    [1010][]

+ Response 400

    [1076][]

+ Response 400

    [1052][]

+ Response 400

    [1150][]

+ Response 400

    [1151][]

+ Response 400

    [1045][]

+ Response 400

    [1046][]

+ Response 400

    [1047][]

+ Response 400

    [1094][]

+ Response 400

    [1075][]

+ Response 400

    [1025][]

+ Response 400

    [1055][]
+ Response 400

    [1093][]

+ Response 400

    [2150][]

+ Response 400

    [2151][]

+ Response 400

    [2152][]

+ Response 400

    [2153][]

+ Response 400

    [2154][]

+ Response 400

    [2155][]

+ Response 400

    [2156][]

+ Response 400

    [2157][]

+ Response 400

    [2286][]

+ Response 400

    [2166][]


## Search [/v1/business/{businessNumber}/search]

Search Business API searches a business using a name or number. Partial name matching is also supported by API.


### Search Business [POST]

+ Parameters

    + businessNumber: 12345678 (required, number) - Long id of the business, under which user wants to search for.



+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.

    + Body

            {
                "pageSize": 25,
                "searchStr": "Thurston Rosenlund",
                "sortBy": "createdAt",
                "sortOrder": "ASC",
                "startIndex": 0
            }


    + Attributes

        + searchStr: Thurston Rosenlund (string)- Search criteria for business. This could be business name or number.
        + sortBy: createdAt (string)- Results can be sorted by name, createdAt, and createdBy. By default is createdAt.
            name : The business name

            createdAt: The date on which a business/location was created.

            createdBy: The full name of the user that created the business.
        + sortOrder: ASC (string)- The SORT order, Possible values "ASC" or "DESC". By default is "DESC".
        + startIndex: 0 (number)- Once sorted, it defines starting from which index a page (number of specified search results) is to be created.
        + pageSize: 25 (number)- Determines the number of search results in the response. Users can set a desired value to limit results, e.g., pageSize=25 shows the top 25 business listings. The Default value is 25.




+ Response 200 (application/json)

    + Attributes

        + totalCount: 101 (number) - The total number of search matches.
        + accounts (array) - Search results
            + (object)
                + name : Thurston Rosenlund (string) - The business name
                + status : active (string) - The business status - active, demo, paid, suspended etc.
                + createdAt: May 01, 2013 (string) - The date of business (or location) creation.
                + createdBy: Sam Bilings (string) - Full name of the user who created the business (or location).
                + businessNumber: ASC (string)- Unique number associated with every business (or location).
                + type: SMB (string)- Returned in case of resellers, specifies whether account is SMB, enterprise, or reseller




    + Body

            {
                "accounts": [
                {
                    "name": "Thurston Rosenlund",
                    "status": "suspended",
                    "createdAt": "May 01, 2013",
                    "createdBy": "Sam Bilings",
                    "businessNumber": 396982176121,
                    "type": "Business"
                },
                {
                    "name": "Aspen Springs Dental",
                    "status": "paid",
                    "createdAt": "May 20, 2013",
                    "businessNumber": 106026111239,
                    "type": "Business"
                },
                {
                    "name": "Cherry Creek Family Dental",
                    "status": "paid",
                    "createdAt": "May 20, 2013",
                    "businessNumber": 379451236128,
                    "type": "Business"
                }],
                "totalCount": 44
            }


+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 400

    [400][]



## Get [/v1/business/{business_id}{?api_key}]
Get Business API gets business information, including product features opted and profile information.


### Get Business [GET]

+ Parameters
    + business_id: 12345678 (string, required) - Id of the Business.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.


+ Request (application/json)

    + Headers

            Accept: application/json


+ Response 200 (application/json)

    + Attributes

        + businessId: 12345678 (number) - Id of the Business (Long).
        + name: Drs. Chalker and Peterson, A Dental Partnership (string) - Name of the Business/Product (Max 1000 character long).
        + alias: Drs. Chalker (string) - Alias, Your internal way of identifying this location.
        + emailId: Business (string) - Business Email ID.
        + phone (string) - Business Phone (Required) Format is (xxx) xxx-xxxx.
        + fax (string)- Fax number Format is (xxx) xxx-xxxx.
        + websiteUrl: www.dentistinatascadero.com (string)- Business website url.
        + description: *State of the Art Equipment *Serving North County Since 1976 *Gentle Care *Knowledgeable Staff (string)- Description of the business (10 to 4000 character long).
        + services: Other Dental Specialties, Orthodontists, Dentistry (required,string)- Services (Comma separated list of services offered; used for SEO).
        + keywords: Dentists Atascadero CA, Other Dental Specialties Atascadero CA, Orthodontists Atascadero CA (string)- Keywords (Comma separated list of keywords; Max 10 keywords; used for SEO).
        + logoUrl: http://bzimages-prod.s3.amazonaws.com/669029760/Logo 180 X 121.png (string) - Logo Image. Minimum 250 x 250px. Recommended: 720 X 720 px. 10 KB min.
        + coverImageUrl: http://bzimages-prod.s3.amazonaws.com/669029760/California Foothills 951 X 351.jpg (string)- Cover Image (Dimension should be 995 x 316 px).
        + gmbCover: http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/abcd.jpg (string) - Google Cover Image Url.
        + facebookCover: http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/fb.jpg (string) - Facebook Cover Image Url.
        + timezone: Pacific Standard Time (string)- Timezone of the business.
        + languages: English,Spanish (array)- Language.
        + isServiceAreaProvider: Yes (string) - To select whether the business is Service Area Business Type. Default value is : No. Possible values are:
                                    Yes
                                    No
        + serviceAreas (array) - Service Area information.
            + (object)
                + description: New York, NY, USA (string)  - Description about the Service Area.
                + placeId: ChIJ9YahAOasdwRSt7QSj (string)  - Place Id.
        + payment: Paypal, Visa, Master Card (string) - Payment Type (Max 250 character long).
        + hoursOfOperations (array) - Working hours of business for each day.
            + (object)
                + day: 5 (number) - 0(Monday), 1(Tuesday), 2(Wednesday) and so on.
                + workingHours (array) - Working hours of the business
                    + (object)
                        + startHour: 7:00 (string) - Start hour 9:00 (9 AM), 18:00 (6 PM)
                        + endHour: 17:30 (string) - End hour  9:00 (9 AM), 18:00 (6 PM)
                + isOpen: 1 (number) - 0 (Business closed today), 1 (open)
                + comment: By appointment only (string) - Add the special instruction.
        + working24x7: 0 (number) - Whether business is 24x7 open or not (0-false, 1-true).
        + location (object) - Business address
            + address1: 7405 Morro Rd (string) - Address of the business.
            + address2: Suite 102 (string) - Address of the business.
            + city: Atascadero (string) - City (Max 1000 character long).
            + state: CA (string) - State (2 character state code).
            + countryCode: US (string) - Country Code (2 character country code).
            + zip: 93422 (required,string) - Zip Code.
        + reviewCount: 105 (number)- Total review count of the business.
        + avgRating: 4.9 (number)- Average rating of the business.
        + status: demo (string) - Business status. Valid values are demo, active, inactive. Default is
        + type:Business (string)- Business type. Valid values are "Business, Enterprise-Location, Enterprise-Product, Reseller or a existing custom hierarchy type". Default is:
        + category: Dentist,Dental,Doctor (string) - Category (Mapped to Google Category).
        + socialProfileURLs (object) - Profile URLs for business on top rated social sites
            + facebookUrl: http://www.facebook.com/ChalkerandPetersonDental (string) - Facebook URL.
            + twitterUrl: https://twitter.com/DrsChaAndPet (string) - Business Twitter URL.
            + linkedInUrl: https://linkedin.com/DrsChaAndPet (string) - Business LinkedId URL.
            + googleUrl: https://plus.google.com/103957250846354895095/about?gl=US&hl=en-US (string)- Business Google URL.
            + youTubeUrl: https://www.youtube.com/channel/UCDNP0M75ySA5qt0So2F8Xxw (string)- Business Youtube URL.
        + isSEOEnabled: true (boolean) - Enable/Disbale search engine indexing of business profile. Valid values are "true","false". Default is "true"


    + Body

            {
                "businessId": 12345678,
              "name": "Dieci Lifestyle Spa",
              "alias": "Dieci Lifestyle Spa - Livingston, NJ",
              "emailId": "4568@livelovespa.com",
              "phone": "(973) 716-0101",
              "fax": "(973) 716-0102",
              "websiteURL": "http://www.diecispa.com/",
              "description": "Specialties\nBridal ServicesMakeup: Makeovers/Lessons/ Faux Lash applicationMassagesFacialsMicrocurrentMicrodermabrasionBody…",
              "keywords": "Hair Salons,Day Spas,Beauty Salon,Beauty Salons,Salons,Massage Therapists",
              "services": "Beauty Salon, Hair Spa",
              "logoURL": "http://d3cnqzq0ivprch.cloudfront.net/prod/css/images/logo.jpg",
              "coverImageURL": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/spa.jpg",
              "gmbCover": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/abcd.jpg",
              "facebookCover": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/fb.jpg",
              "timezone": "Pacific Standard Time",
              "isServiceAreaProvider": "Yes",
                "serviceAreas": [
                {
                    "description": "2390 Boston Street, Seattle, WA, 98109",
                    "placeId": "ChIJ9YasdSKZs0wRSt--7QSjsd3"
                },
                {
                    "description": "400 Boston Street, Seattle, WA, 98109",
                    "placeId": "ChIJ9aasdAOKZasdaSt--7QsdLja4"
                }],
              "languages": [
                "English",
                "Spanish"
              ],
              "payment": "Visa, MasterCard, American Express, Debit Cards, Check",
              "hoursOfOperations": [
                {
                  "day": "0",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "1",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "2",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "3",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "4",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "5",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "6",
                  "isOpen": 0
                }
              ],
              "working24x7": 0,
              "location": {
                "address1": "90 W Mount Pleasant Ave",
                "address2": "(btwn Preston Dr. &amp; N. Mitchell Ave.)",
                "city": "Livingston",
                "state": "NJ",
                "zip": "07039",
                "countryCode": "US",
                "countryName": "United States of America"
              },
              "reviewCount": 53,
              "avgRating": 3.4,
              "status":"active",
              "type":"Business",
              "category": "Hair Salons,Day Spas,Beauty Salon,Beauty Salons,Salons,Massage Therapists",
              "socialProfileURLs": {
                "googleUrl": "null",
                "facebookUrl": null,
                "twitterUrl": null,
                "linkedinUrl": null,
                "youTubeUrl":null
              },
              "isSEOEnabled": "false",
              "baseUrl": "https://birdeye.com/diecispa-755009344"
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]


## Update [/v1/business/{businessId}{?api_key}]
Update Business API updates business information.

### Update Business [PUT]

+ Parameters
    + businessId: 12345678 (string, required) - The Business Number
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes

        + name: Drs. Chalker and Peterson, A Dental Partnership (string) - Name of the Business/Product (Max 1000 character long).
        + alias: Drs. Chalker (string) - Alias, Your internal way of identifying this location.
        + isAddressHidden: 0 (number) - If your business doesn’t have a place for your customers to visit, then you can hide your street address. 1 -> hide, 0 -> unhide (Note that this isn’t supported by all sites).
        + location (object) - Business address
            + address1: 7405 Morro Rd (string) - Address of the business.
            + address2: Suite 102 (string) - Address of the business.
            + city: Atascadero (string) - City (Max 1000 character long).
            + state: CA (string) - State (2 character state code).
            + countryCode: US (string) - Country Code (2 character country code).
            + zip: 93422 (required,string) - Zip Code.
        + emailId: Business (required,string) - Business Email ID.
        + phone (required,string) - Business Phone (Required) Format is (xxx) xxx-xxxx.
        + fax (string)- Fax number Format is (xxx) xxx-xxxx.
        + websiteUrl: www.dentistinatascadero.com (string)- Business website url.
        + establishedYear: 2012 (number) - Year established
        + timezone: Pacific Standard Time (string)- Timezone of the business.
        + languages: English,Spanish (array)- Language.
        + isServiceAreaProvider: Yes (string) - To select whether the business is Service Area Business Type. Default value is : No.
                          Possible values are:
                                        Yes
                                        No
        + serviceAreas (array) - Service Area information. You can enter upto 10 service area addresses in one request
            + (object)
                + description: 400 Boston Street, Seattle, WA, 98109 (string)  - For supported service areas, Possible formats:
                                    1. Apartment Name/ Suite Name, Street Name/ Locality, City, State, ZIP
                                    2. Street Name/ Locality, City, State, ZIP

        + working24x7: 0 (number) - Whether business is 24x7 open or not (0-false, 1-true).
        + hoursOfOperations (array) - Working hours of business for each day.
            + (object)
                + day: 5 (number) - 0(Monday), 1(Tuesday), 2(Wednesday) and so on.
                + workingHours (array) - Working hours of the business
                    + (object)
                        + startHour: 7:00 (string) - Start hour 9:00 (9 AM), 18:00 (6 PM)
                        + endHour: 17:30 (string) - End hour  9:00 (9 AM), 18:00 (6 PM)
                + isOpen: 1 (number) - 0 (Business closed today), 1 (open)
                + comment: By appointment only (string) - Add the special instruction.
        + specialHours (array) - Special hours of business.
            + (object)
                + specialDate: 10/20/2023 (string) - It should be "MM/DD/YYYY".
                + startHour: 7:00 (string) - Start hour 9:00 (9 AM), 18:00 (6 PM)
                + endHour: 17:30 (string) - End hour  9:00 (9 AM), 18:00 (6 PM)
                + isOpen: 1 (number) - 0(Business closed today), 1 (open)
        + businessStatus : Open (string) - It will update your business status on lisitng page and If business will choose "Temporarily closed" then Reopen date is mandatry. [Open, Temporarily closed, Permanently closed]
        + reopenDate : 10/20/2022 - Reopen date is applicable only when the status is "temporarily closed". It should be "MM/dd/yyyy" format.
        + services: Other Dental Specialties, Orthodontists, Dentistry (required,string)- Services (Comma separated list of services offered; used for SEO).
        + keywords: Dentists Atascadero CA, Other Dental Specialties Atascadero CA, Orthodontists Atascadero CA (string)- Keywords about the business. Useful in SEO. Business keyword cannot be more than 1000 characters.
        + products: Products about the business. Useful in SEO and Business products cannot be more than 1000 characters.
        + appointmentLink (string)- Let customers reserve tables by linking them to your reservations page.
        + menuLink (string) - Show customers what you serve by linking them to your menu.
        + orderAheadLink (string) - Let customers place delivery and pick-up orders by linking them to your ordering page.
        + impressum (string) - In certain countries (like Austria, Germany and Switzerland), businesses may be required by law to include a statement of ownership on their web presence.
        + payment: Paypal, Visa, Master Card (string) - Payment Type (Max 250 character long).
        + localPhoneNumber (string)- Local phone number.
        + tollFreePhoneNumber (string) - Tollfree number.
        + androidAppURL: http://www.gmail.com (string)- Android app url.
        + iosAppURL: http://www.gmail.com (string) - IOS app url.
        + logoUrl: http://bzimages-prod.s3.amazonaws.com/669029760/Logo 180 X 121.png (string) - Logo Image. Minimum 250 x 250px. Recommended: 720 X 720 px. 10 KB min.
        + gmbLogoOptOut (number)- Update profile photo on your google my business page. (1-false,0-true).
        + fbLogoOptOut (number) - Update profile photo on your facebook profile. (1-false,0-true).
        + gmbCoverOptOut (number) - Update cover photo on your google my business page. (1-false,0-true).
        + fbCoverOptOut (number) - Update cover photo on your facebook profile. (1-false,0-true).
        + coverImageUrl: http://bzimages-prod.s3.amazonaws.com/669029760/California Foothills 951 X 351.jpg (string)- Cover image URL for business displayed on custom review site. Format: JPG, JPEG, PNG. Minimum 1110 x 374px.
        + gmbCover: http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/abcd.jpg (string) - Google Cover Image Url.
        + facebookCover: http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/fb.jpg (string) - Facebook Cover Image Url.
        + coverBusinessInfoLayout: In grid cover image, business info overlay (string) - Show on your Birdeye profile. Possible value will be
                In grid cover image, business info overlay
                In grid cover image, business info below
                Full width cover image, business info overlay
                Full width cover image, business info below
                Google map view, business info overlay
        + covidInfo (object) - Provide covid related update in.
            + postDescription (string) - Post will be update on gmb & FB
            + covid19SupportLink (string) - Should be a valid covid19 support url
            + virtualCareLink (string) - Should be a valid url virtual care link
        + bingListing (object) - Provide bing data for listing purpose.
            + primaryCategoryBing (string) - Primary category of bing.
            + bingPhoneNumber (string) - You can provide a phone number which will be pushed only to your Bing listing site and will override the primary phone number set.
            + categories (string) - You can add up to 3 categories.
            + bingDescription (string) - Bing description cannot be more than 4096 characters.
        + internalListing (object) - Provide data for microsite listing purpose.
            + description (string) - Business description cannot be more than 5000 characters.
            + category (string) - Primary category of business.
            + subcategory (string) - You can add up to 3 subcategories.
            + displayCategory (string) - Choose one of the category either from primary category or from sub categories.
        + facebookListing (object) - Provide data for facebook listing purpose.
            + category (string) - You can add up to 3 categories.
            + facebookDescription (string) - Facebook description cannot be more than 255 characters.
            + facebookPhoneNumber (string) - Phone number for facebook profile. This phone number will override the main phone number on your Facebook business page

        + gmbListing (object) - Provide data for gmb listing purpose.
            + googleWebsiteUrl (string) - Website url will update on google listing.
            + googlePhoneNumber (string) - You can provide a phone number which will be pushed only to your google listing site and will override the primary phone number set.
            + googleStoreId (string) - Store id for google.
            + primaryCategoryGmb (string) - Primary category of google.
            + additionalCategory (string) - You can add up to 5 subcategories.
            + googleDescription (string) - Google description cannot be more than 750 characters.
            + attributes (object) - Google my business attributes are highly visible statements about your business that appear on your Google My Business listing. Supported attributes are
                    Accessibility,Amenities,Crowd,Dining options,Highlights,Planning,Offerings,Health & safety.
            + foodDelivery (string) - Enter the redirect URL where customers can place delivery orders.This field is applicable for hospitality business and is category dependent.Example http://www.ubereats.com
            + foodTakeout (string) - Enter the redirect URL where customers can place 'takeout' food orders. This field is applicable for hospitality business and is category dependent.Example : http://www.ubereats.com
        + socialProfileURLs (object) - Profile URLs for business on top rated social sites
            + facebookUrl: http://www.facebook.com/ChalkerandPetersonDental (string) - Facebook URL.
            + twitterUrl: https://twitter.com/DrsChaAndPet (string) - Business Twitter URL.
            + linkedInUrl: https://linkedin.com/DrsChaAndPet (string) - Business LinkedId URL.
            + googleUrl: https://plus.google.com/103957250846354895095/about?gl=US&hl=en-US (string)- Business Google URL.
            + youTubeUrl: https://www.youtube.com/channel/UCDNP0M75ySA5qt0So2F8Xxw (string)- Business Youtube URL.
        + isSEOEnabled: true (boolean) - Enable/Disbale search engine indexing of business profile. Valid values are "true","false". Default is "true".
        + externalReferenceId (string) - It should be a unique value for location identifier.


    + Body

            {
              "name": "Dieci Lifestyle Spa",
              "alias": "Dieci Lifestyle Spa - Livingston, NJ",
              "isAddressHidden": 0,
              "location": {
                "address1": "90 W Mount Pleasant Ave",
                "address2": "(btwn Preston Dr. &amp; N. Mitchell Ave.)",
                "city": "Livingston",
                "state": "NJ",
                "zip": "07039",
                "countryCode": "US",
                "countryName": "United States of America",
                "lat": "37.7730319",
                "lng": "-122.3869622"
              },
              "emailId": "4568@livelovespa.com",
              "phone": "(973) 716-0101",
              "fax": "(973) 716-0102",
              "websiteUrl": "http://www.diecispa.com/",
              "establishedYear": "2012",
              "timezone": "Pacific Standard Time",
              "languages": [
                "English",
                "Spanish"
              ],
                "isServiceAreaProvider": "Yes",
                "serviceAreas": [
                {
                    "description": "400 Boston Street, Seattle, WA, 98109"
                },
                {
                    "description": "2390 Boston Street, Seattle, WA, 98109"
                }],
              "working24x7": 0,
              "hoursOfOperations": [
                {
                  "day": "0",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "1",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "2",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "3",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "4",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "5",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "6",
                  "isOpen": 0
                }
              ],
              "specialHours": [
                {
                  "specialDate": "12/31/2020",
                  "startHour": "09:00",
                  "endHour": "12:00",
                  "isOpen": 0
                },
                {
                  "specialDate": "01/01/2021",
                  "startHour": "",
                  "endHour": "",
                  "isOpen": 1
                }
              ],
              "businessStatus": "Open",
              "reopenDate": "01/01/2021",
              "services": "Beauty Salon, Hair Spa",
              "keywords": "Hair Salons,Day Spas,Beauty Salon,Beauty Salons,Salons,Massage Therapists",
              "products": "Living Proof Dry Shampoo,Kevin Murphy Blonde Angel Wash",
              "appointmentLink": "",
              "reservationLink": "",
              "menuLink": "",
              "orderAheadLink": "",
              "payment": "Visa, MasterCard, American Express, Debit Cards, Check",
              "impressum": "",
              "localPhoneNumber": "",
              "tollFreePhoneNumber": "",
              "androidAppURL": "",
              "iosAppURL": "",
              "logoUrl": "http://d3cnqzq0ivprch.cloudfront.net/prod/css/images/logo.jpg",
              "gmbLogoOptOut": 1,
              "fbLogoOptOut": 1,
              "gmbCoverOptOut": 1,
              "fbCoverOptOut": 1,
              "coverImageUrl": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/spa.jpg",
              "gmbCover": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/abcd.jpg",
              "facebookCover": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/fb.jpg",
              "coverBusinessInfoLayout": "In grid cover image, business info overlay",
              "covidInfo": {
                "postDescription": "",
                "covid19SupportLink": "",
                "virtualCareLink": ""
              },
              "bingListing": {
                "primaryCategoryBing": "",
                "category1Bing": "",
                "category2Bing": "",
                "category3Bing": "",
                "bingDescription": "",
                "bingPhoneNumber": ""
              },
              "internalListing": {
                "description": "pecialties\nBridal ServicesMakeup: Makeovers/Lessons/ Faux Lash applicationMassagesFacialsMicrocurrentMicrodermabrasionBody…",
                "category": "",
                "subcategory1": "",
                "subcategory2": "",
                "subcategory3": "",
                "displayCategory": ""

              },
              "facebookListing": {
                "category1Fb": "",
                "category2Fb": "",
                "category3Fb": "",
                "facebookDescription": "",
                "facebookPhoneNumber": ""
              },
              "gmbListing": {
                "googleWebsiteUrl": "",
                "googleStoreId": "",
                "primaryCategoryGmb": "",
                "additionalCategory1Gmb": "",
                "additionalCategory2Gmb": "",
                "additionalCategory3Gmb": "",
                "additionalCategory4Gmb": "",
                "additionalCategory5Gmb": "",
                "googleDescription": "",
                "googlePhoneNumber": ""
                "attributes": {
                  "Crowd": [
                    {
                      "attributeId": "welcomes_families",
                      "attributeName": "Family-friendly",
                      "value": true

                    }
                  ],
                  "Accessibility": [
                    {
                      "attributeId": "has_wheelchair_accessible_elevator",
                      "attributeName": "Wheelchair accessible elevator",
                      "value": false

                    }
                  ]
                },
                "foodDelivery":"https://www.ubereats.com",
                "foodTakeout":"https://www.ubereats.com"
              },
               "vendorListing": {
                "venderCategory": "",
                "venderSubcategory1": "",
                "venderSubcategory2": "",
                "venderSubcategory3": ""
             },
              "socialProfileURLs": {
                "googleUrl": "null",
                "facebookUrl": null,
                "twitterUrl": null,
                "linkedinUrl": null,
                "youTubeUrl": null,
                "instagramUrl": null,
                "pintrestUrl": null,
                "lendingtreeUrl": null,
                "bbbUrl": null
              },
              "isSEOEnabled": "false",
              "externalReferenceId" : ""
            }

+ Response 200 (application/json)

    + Body

            {
              "name": "Dieci Lifestyle Spa",
              "alias": "Dieci Lifestyle Spa - Livingston, NJ",
              "emailId": "4568@livelovespa.com",
              "phone": "(973) 716-0101",
              "fax": "(973) 716-0102",
              "websiteUrl": "http://www.diecispa.com/",
              "description": "Specialties\nBridal ServicesMakeup: Makeovers/Lessons/ Faux Lash applicationMassagesFacialsMicrocurrentMicrodermabrasionBody…",
              "keywords": "Hair Salons,Day Spas,Beauty Salon,Beauty Salons,Salons,Massage Therapists",
              "services": "Beauty Salon, Hair Spa",
              "logoUrl": "http://d3cnqzq0ivprch.cloudfront.net/prod/css/images/logo.jpg",
              "coverImageUrl": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/spa.jpg",
              "gmbCover": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/abcd.jpg",
              "facebookCover": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/fb.jpg",
              "timezone": "Pacific Standard Time",
              "languages": [
                "English",
                "Spanish"
              ],
              "isServiceAreaProvider": "Yes",
                "serviceAreas": [
                {
                    "description": "2390 Boston Street, Seattle, WA, 98109",
                    "placeId": "ChIJ9YasdSKZs0wRSt--7QSjsd3"
                },
                {
                    "description": "400 Boston Street, Seattle, WA, 98109",
                    "placeId": "ChIJ9aasdAOKZasdaSt--7QsdLja4"
                }],
              "payment": "Visa, MasterCard, American Express, Debit Cards, Check",
              "hoursOfOperations": [
                {
                  "day": "0",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "1",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "2",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "3",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "4",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "5",
                  "isOpen": 1,
                  "workingHours": [
                    {
                      "startHour": "09:00",
                      "endHour": "13:30"
                    },
                    {
                      "startHour": "14:30",
                      "endHour": "19:00"
                    }
                  ],
                  "comment": ""
                },
                {
                  "day": "6",
                  "isOpen": 0
                }
              ],
              "working24x7": 0,
              "location": {
                "address1": "90 W Mount Pleasant Ave",
                "address2": "(btwn Preston Dr. &amp; N. Mitchell Ave.)",
                "city": "Livingston",
                "state": "NJ",
                "zip": "07039",
                "countryCode": "US",
                "countryName": "United States of America"
              },
              "categoryList": [
                "Hair Salons"
              ],
              "socialProfileURLs": {
                "googleUrl": "null",
                "facebookUrl": null,
                "twitterUrl": null,
                "linkedinUrl": null,
                "youTubeUrl": null
              }
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1175][]

+ Response 400

    [1045][]

+ Response 401

    [1047][]

+ Response 401

    [1046][]

+ Response 401

    [1055][]

+ Response 401

    [1056][]

+ Response 401

    [1069][]

+ Response 401

    [1070][]

+ Response 401

    [1190][]

+ Response 400

    [2296][]

+ Response 400

    [2297][]

+ Response 400

    [2290][]




## Delete [/v1/business/{business_Id}{?api_key}]
Delete Business API deletes an account or sub-reseller under a reseller.

### Delete Business [DELETE]


+ Parameters
    + business_Id: 12345678 (string, required) - Id of the Business.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 400

    [1174][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1175][]




## Status Update [/v1/business/{business_id}/status{?api_key,astatus}]
Status Update Business API updates the activation status of a business. Activation status signifies whether an account is active or inactive.

### Update the status [PUT]

+ Parameters

    + business_id: 12345678 (string, required) - Business id whose status has to be changed. Returned by create business API
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + astatus: inactive (string, required) - New status for the business. Valid values are "active/inactive".

+ Request (application/json)

    + Headers

            Accept: application/json


+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1175][]

+ Response 403

    [1184][]

+ Response 400

    [1191][]


## Child Businesses [/v1/business/child/all{?api_key,pid}]
Child Businesses API gets all the businesses under an account.

### Get Child Businesses [GET]


+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + pid:  12345678 (number, required) - Reseller/Sub-reseller/Enterprise Id.

+ Request (application/json)

    + Headers

            Accept: application/json


+ Response 200 (application/json)

    + Attributes (array)
        + (object)
            + id: 123456 (number) - Id of the Business
            + name: Drs. Chalker and Peterson, A Dental Partnership (string) - Name of the Business/Product (Max 1000 character long).
            + alias: Drs. Chalker (string) - Alias, Your internal way of identifying this location.
            + phone (string) - Business Phone (Required) Format is (xxx) xxx-xxxx.
            + address (object) - Business address
                + address1: 7405 Morro Rd (string) - Address of the business.
                + address2: Suite 102 (string) - Address of the business.
                + city: Atascadero (string) - City (Max 1000 character long).
                + state: CA (string) - State (2 character state code).
                + countryCode: US (string) - Country Code (2 character country code).
                + zip: 93422 (required,string) - Zip Code.
            + status: demo (string) - Business status. Valid values are demo, active, inactive. Default is
            + type:Business (string)- Business type. Valid values are "Business, Enterprise-Location, Enterprise-Product, Reseller or a existing custom hierarchy type". Default is:
            + createdOn: Dec 05, 2013 (string) - Business singup date.
            + childCount: 3 (number) - Child account count. note: applicable only for Reseller, Enterprise-Location, Enterprise-Product.


    + Body

            [{
                "id": 986031488,
                "name": "Central Ohio Endodontics",
                "alias": "Central Ohio Endodontics - Dublin, OH",
                "address": {
                    "address1": "5152 Blazer Memorial Pkwy",
                    "address2": "Ste 102",
                    "city": "Dublin",
                    "state": "OH",
                    "zip": "43017",
                    "countryCode": "US",
                    "countryName": "United States of America"
                },
                "phone": "(614) 896-2801",
                "type": "Business",
                "status": "active",
                "createdOn": "Dec 04, 2013"
            },
            {
                "id": 768996864,
                "name": "Environmental Pest Management",
                "alias": "Environmental Pest Management - Westerville, OH",
                "address": {
                    "address1": "200 Hoff Rd",
                    "address2": "Unit P",
                    "city": "Westerville",
                    "state": "OH",
                    "zip": "43082",
                    "countryCode": "US",
                    "countryName": "United States of America"
                },
                "phone": "(614) 771-8605",
                "type": "Business",
                "status": "active",
                "createdOn": "Dec 05, 2013"
            },
            {
                "id": 144670708364016,
                "name": "Sub-reseller",
                "alias": "Sub-reseller",
                "status": "active",
                "createdOn": "Nov 05, 2013",
                "type": "Reseller",
                "childCount": 1
            },
            {
                "id": 144670708364322,
                "name": "Holiday Inn",
                "alias": "Holiday Inn",
                "status": "active",
                "createdOn": "Nov 01, 2013",
                "type": "Enterprise-Location",
                "childCount": 2
            }]




## Public profile tabs [/v1/business/tabs{?api_key,businessId}]
Public profile tabs API saves information on business profile tabs.

### Update public profile of Businesses [POST]


+ Parameters
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (string, required) - Id of the Business.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes (object)
        + profileTabs (array)
            + (object)
                + tabType: Map (string, required) - Valid values are "Reviews", "Feedback", "FAQ", "Aboutus", "Map", "Appointment" or "BusinessOwner".
                + label: map location (string) - Name on the tab. Max length 30 character.
                + showOnProfile: 1 (number, required) - Show on profile Valid values "0" or "1".
                + showOnWebsite: 0 (number, required) - Show on website Valid values "0" or "1".
                + showOnFacebook: 1 (number, required) - Show on Facebook Valid values "0" or "1".
                + url (string) - Valid url for tab.

    + Body

            {
                "profileTabs":
                [{
                    "tabType": "map",
                    "label": "map location",
                    "showOnProfile": 0,
                    "showOnWebsite": 1,
                    "showOnFacebook": 1,
                    "url": "http://www.mapurl.com"
                },
                {
                    "tabType": "Feedback",
                    "label": "Feedback",
                    "showOnProfile": 0,
                    "showOnWebsite": 1,
                    "showOnFacebook": 1,
                    "url": "http://www.feedback.com"
                }]
            }



+ Response 200 (application/json)


+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1175][]

+ Response 403

    [1184][]

+ Response 400

    [1191][]


## Get Hierarchy [/v1/business/{businessId}/hierarchy{?api_key}]
Get Hierarchy API gets business hierarchy. Hierarchical information contains the parent-child relationship information
between businesses.

### Get hierarchy for an enterprise [GET]

+ Parameters

    + businessId: 12345678 (string, required) - Id of the Business.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

            {
                "id": 143424324234234,
                "name": "Psychiatry",
                "alias": null,
                "address": null,
                "phone": null,
                "status": "active",
                "createdOn": "Sep 03, 2016",
                "type": "Department",
                "websiteUrl": null,
                "child": [{
                    "id": 147293020095434,
                    "name": "Addiction Psychiatry",
                    "alias": null,
                    "address": null,
                    "phone": null,
                    "status": "active",
                    "createdOn": "Sep 03, 2016",
                    "type": "Specialty",
                    "websiteUrl": null,
                    "child": [{
                        "id": 147293022348715,
                        "name": "NYC Center for Treatment and Research",
                        "alias": null,
                        "address": null,
                        "phone": null,
                        "status": "active",
                        "createdOn": "Sep 03, 2016",
                        "type": "Practice",
                        "websiteUrl": null,
                        "child": [{
                            "id": 1467324432430144,
                            "name": "Anna B. B., M.D",
                            "alias": "Anna B. B., M.D",
                            "address": {
                                "address1": "NYC Center for Treatment and Research",
                                "address2": "561 West 35th Street, 11th Floor",
                                "city": "New York",
                                "state": "NY",
                                "zip": "10036",
                                "countryCode": "US",
                                "countryName": "United States of America"
                            },
                            "phone": "646-xxx-xxxx ",
                            "status": "active",
                            "createdOn": "Jun 30, 2016",
                            "type": "Physician",
                            "websiteUrl": "https://google.org/abbnyc",
                            "child": []
                        }]
                    }]
                }],
                "parents": [{
                    "id": 148189355091299,
                    "name": "Neurology",
                    "alias": null,
                    "address": null,
                    "phone": null,
                    "status": "active",
                    "createdOn": "Dec 16, 2016",
                    "type": "Specialty",
                    "websiteUrl": null,
                    "tags": null,
                    "child": [],
                    "parents": []
                }]
            }


+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]


## Update Hierarchy [/v1/business/business-hierarchy/location/update-mapping/{businessId}{?api_key}]
The Update Hierarchy API maps the hierarchical level to its corresponding level value for a given location. This API is used to update the hierarchical structure of locations, ensuring that each location is correctly placed within the hierarchy based on its level and value. It is important to avoid overwriting existing data by passing all values accurately.


### Update Hierarchy [POST]

+ Parameters

    + businessId: 12345678 (string, required) - Id of the Business.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.

+ Request (application/json)


    + Headers

            Accept: application/json

   + Attributes
        + Level - It will be a key-value pair for each level with its corresponding level value.
            

    + Body

            {
              "Division": "Division 3",
              "Region": "Region 3",
              "RD": "Richard Steves",
              "Department": "Store 3"
            }



+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]


+ Response 401

    [1011][]



## Get Custom card details [/v1/business/{businessNumber}/profile/customcard]
Get Customer card API returns the detail of customer card of the location

### Get Custom card details [GET]

+ Parameters
    + businessNumber (number, required) - Id of a business (Long).

+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.



+ Response 200 (application/json)


    + Attributes
        + customCardDetails (array)
            + (object)
                + cardId: 123456 (number) - Id of the Card
                + title: Steve Smith (string) - Name of the card.
                + description: Business Information (string) - Information of the business on the card.
                + imageURL: https://d2xt3xymj142xp.cloudfront.net/63936/fileUpload/936_16768607_FRetIc.jpeg (string) - Image URL
                + imagePosition: 2 (string) - Image position value. Possible values are:
                        1 - image is placed at top,
                        2 - image is placed at left,
                        3 - image is placed at right
                + isVisible: 1 (number) - Visibility status of card on the microsite. Possible values are:
                        0 - card will not be visible on the microsite,
                        1 - card will be visible on the microsite
                + clickURL: https://www.abcdef.com (string) - Redirect link for a particular website.

    + Body

            {
                "customCardDetails": [
                    {
                        "cardId": 5531,
                        "title": "Mathew",
                        "description": "Card description",
                        "imageURL": "https://d2xt3xymj142xp.cloudfront.net/63936/fileUpload/936_16768607_FRetIc.jpeg",
                        "imagePosition": "2",
                        "isVisible": 1,
                        "clickURL": "https://www.abcdef.com"
                    },
                    {
                        "cardId": 5533,
                        "title": "Steve Smith",
                        "description": "Card description",
                        "imageURL": "https://d2xt3xymj142xp.cloudfront.net/63936/fileUpload/63676550205863_FRetIc.jpeg",
                        "imagePosition": "1",
                        "isVisible": 0,
                        "clickURL": "http://www.abcdef.com"
                    }
                ]
            }


+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 401

    [1011][]


## Get Timezone List [/v1/business/{businessNumber}/timezones]
Get Timezone List API fetches the list of all available timezones.

### Get Timezone List [GET]

+ Parameters
    + businessNumber (number, required) - Id of a business (Long).

+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.



+ Response 200 (application/json)


    + Attributes
        + timezones (array)
            + (object)
                + value: 123456 (number) - The timezone value.
                + label: Steve Smith (string) - The timezone label.


    + Body

            {
                "timezones": [
                    {
                        "value": "Etc/GMT+12",
                        "label": "(GMT-12:00) Etc/GMT+12"
                    },
                    {
                        "value": "Pacific/Pago_Pago",
                        "label": "(GMT-11:00) Pacific/Pago_Pago"
                    },
                    {
                        "value": "Pacific/Samoa",
                        "label": "(GMT-11:00) Pacific/Samoa"
                    },
                    {
                        "value": "Pacific/Niue",
                        "label": "(GMT-11:00) Pacific/Niue"
                    }
             ]
            }



+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1011][]

## Get Birdeye Impressions [/v1/business/{businessNumber}/birdeye/impressions]
Returns only birdeye (source: website) impressions by location as well as total.

### Get Birdeye Impressions [POST]

+ Parameters

    + businessNumber: 986031488 (string, required) - Account Business Number.


+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: - Partner specific API key provided by Birdeye for data exchange.

    + Attributes
         + businessNumbers: 987656789 (required,string)- list of the unique business ids associated with a business eg: [123456789, 987656789]
         + startDate: 2020-11-10 (required,string)-yyyy-MM-dd eg: "2020-11-10"
         + endDate: 2020-11-10 (required,string)-yyyy-MM-dd eg: "2020-11-10"
         + limit: 25 (number) - page size. default: 25
         + startIndex: 0 (number)- default: 0
         + sortby: 25 (string) - "location" or "total" default: total.
         + order: asc (string) - "asc" or "desc" default: desc

    + Body

            {
                "businessNumbers": [147286063579104,147286063579108],
                "startDate": "2022-11-23",
                "endDate": "2023-11-23",
                "limit": 5,
                "order": "desc",
                "sortby": "location",
                "startIndex": 0
            }



+ Response 200


    + Body

            {
                  "total": 300178,
                  "locations": [
                    {
                      "locationName": "Natick House of Prom",
                      "count": "87"
                    },
                    {
                      "locationName": "Kansas City House of Prom",
                      "count": "265"
                    },
                    {
                      "locationName": "Glendale House of Prom House of Prom",
                      "count": "158"
                    },
                    {
                      "locationName": "Fairfax House of Prom",
                      "count": "355"
                    },
                    {
                      "locationName": "David's Bridal - Corporate Office",
                      "count": "2546"
                    }
                  ]
            }

+ Response 401

    [1161][]

+ Response 2292

    [2292][]

+ Response 2293

    [2293][]

+ Response 401

    [1167][]



# Group User
Add, delete and manage user profiles and permissions easily.

## Signup [/v1/user/signup{?bid,api_key}]
Create User API creates a new user for a business.

+ Parameters
    + api_key: abcdefg (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + bid: 12345678 (string, required) - Id of the Business.

### Create User [POST]

+ Request (application/json)

    + Headers

            Accept: application/json


    + Attributes (object)

        + firstName: Rhonda (string) - First name of the user.
        + lastName: Spears (string) - Last name of the user.
        + userEmailId: rhonda@test.com (string, required) - Email Id of the user that’s being added to this business.
        + phone: 123-456-7890 (string) - Mobile number of the user.
        + userRole: admin (string, required) - User role. Valid values are "owner","admin". Default is "owner".
        + userPassword (string, required) - User's password
        + sendInvite: true (boolean) - Whether to send invitation to user or not. Valid values are "true"/"false". Default is "true".

    + Body

            {
                "firstName": "Rhonda",
                "lastName": "Spears",
                "userEmailId": "rhonda@reviewmanagement.com",
                "phone": "408-xxx-xxxx",
                "userRole": "owner",
                "userPassword": "xxxxxxx",
                "sendInvite": "false"
            }

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 401

    [1033][]

+ Response 409

    [1160][]

+ Response 404

    [1175][]

+ Response 400

    [1052][]

+ Response 400

    [1053][]

+ Response 400

    [1054][]

+ Response 400

    [1014][]

+ Response 400

    [1013][]

+ Response 400

    [1057][]

+ Response 400

    [1059][]


## Delete [/v1/user/remove{?api_key,bid,email}]
Delete User API removes user access from a business.

### Delete a user [DELETE]

+ Parameters
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + bid: 123 (string, required) - Business Id from which user access has to be revoked
    + email: abc@test.com (string, required) - Email id of the user whose access has to be revoked


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 400

    [1059][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1188][]

+ Response 404

    [1189][]

+ Response 404

    [1175][]


## Password [/v1/user/forgotpassword{?api_key,email}]
Forgot Password API generates forgot password mail to reset the password.

### Forgot Password [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + email: abc@test.com  (string, required) - Email Id of the user whose access has to be revoked

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 400

    [1052][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 401

    [1177][]

+ Response 404

    [1189][]


## Get [/v1/user/details{?api_key,email}]
Get User API gets details of a user.

### Get details of a user [GET]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + email: abc@test.com (string, required) - Email Id of the user whose details to be retrieved

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Attributes

        + emailId: abc@test.com (string) - User's email Id.
        + firstName: Ron (string) - User's first name.
        + lastName: Spector (string) - User's last name.
        + phone: 1234 123 123 (string) - User's phone number.
        + businessList (array, fixed) - Accessable Business list
            + (object)
                + businessId: 1234567 (string) - Id of the business.
                + businessName: Drs. Chalker and Peterson, A Dental Partnership (string) - Business Name.
                + businessAlias: Drs. Chalker (string) - Business Alias.

    + Body

            {
                "emailId": "147476560554272@birdeye.com",
                "firstName": "Ron",
                "lastName": "Smith",
                "phone": 1234 123 123,
                "businessList": [
                    {
                        "businessId": 147476560554272,
                        "businessName": "single-location-test-6",
                        "businessAlias": "single-location-test-6"
                    }]
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1188][]

+ Response 404

    [1189][]

+ Response 404

    [1010][]




# Group Reviews
Consistently generate more reviews and higher ratings.

## Get [/v1/review/businessId/{businessId}{?sindex,count,api_key,includeNonAggregatedReviews}]
Get Reviews returns the list of reviews for an account with all its details.

> __Note__
> - _Deep Pagination with record window greater than 100k is not supported. Either reduce the sindex + count to be less than equal to 100k or use appropriate filters to narrow down your result set._

### Get Reviews [POST]

+ Parameters

    + businessId: 12345678 (number, required) - Id of the Business.
    + sindex: 10 (integer, required) - Start index of the reviews. Refer API note for max permissible value.
    + count: 30 (integer, required) - Number of reviews to query. Refer API note for max permissible value.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + includeNonAggregatedReviews: false (boolean, optional) - Include Reviews whose auto-crawling is blocked e.g. PressGaney

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + fromDate: 04/01/2013 (string) - Review date start in UTC format.
        + toDate: 04/01/2013 (string) - Review date end in UTC format.
        + updateFromDate: 04/01/2013 (string) - Review response date start in UTC format.
        + updateToDate: 04/01/2013 (string) - Review response date end in UTC format.
        + sources: google (string) - Aggregation source name Note: use "our_website" to filter reviews posted on Birdeye platform or use "direct_feedback" for direct feedback.
        + ratings: 4,5 (array) - Review rating Possible values 0,1,2,3,4,5.
        + searchStr: Great service (string) - String that is contained by review.
        + subBusinessIds: 123456789 ,987654321 (array) - BusinessIds under enterprise account.
        + statuses: published,parked (array) - Review status. Valid values are "published","parked","all". Default is "published" only.
        + allChild: true (boolean) - Get review from all child ignoring merge reviews flag configured at parent/child relationship level.
        + tags: ["top reviews", "need action"] (array) - Reviews with assigned tags
        + fetchExtraParams: false (boolean) - To fetch custom field(s) associated with the customer attributed to the review [if any].
        + needCustomerInfo: false (boolean) - To fetch customer information associated with the reviewer [if attributed].


    + Body

            {
                "fromDate":"04/01/2013",
                "toDate":"05/3/2015",
                "updateFromDate":"04/01/2013",
                "updateToDate":"05/3/2015",
                "sources":["google","citysearch"],
                "ratings":[1,2,3,4,5,0],
                "searchStr":"test string",
                "subBusinessIds":[12345678,1232111,1231231321],
                "statuses":["published","parked"],
                "allChild":"true",
                "tags":["positive","negative"],
                "fetchExtraParams":false,
                "needCustomerInfo":false
            }

+ Response 200 (application/json)

    + Attributes (array)
        + (object)
            + reviewId: 1858537291 (number) - Id of the review.
            + rating: 5.0 (number) - Overall rating for the review, in case of direct feedback and facebook recommendations it will be 0. For Facebook recommendations, value will be 1, Non recommended review will have value set as 0.
            + comments: Great service, excellent food (string) - User comment.
            + reviewer - Reviewer details
                + firstName: Ron (string) :
                + lastName: Spector (string) :
                + nickName: Ron Spector (string) :
                + thumbnailUrl: https://ddjkm7n7lx.cloudfront.net/reviewer/dc42f6d8b2b84dc0b688c43e616.jpeg (string) : Thumbn
            + sourceType: Direct Feedback (string) - Source of the review if it is an aggregated review.
            + reviewURL: https://www.facebook.com/Imp-Flow-17565744/reviews (string) - Review url
            + reviewDate: Jan 20, 2014 (string) - Review posted date.
            + response: Thanks you for the review (string) - Review response text.
            + responseDate: Jan 20, 2014 (string) - Response date.
            + enableReply: true (boolean) - Whether a review reply is supported via Birdeye API or not.
            + customerId: 123456 (number) - Customer's Id attributed with this review (if any).
            + extraParams (object) - Key value pair of custom field(s) associated with the customer attributed to the review (if any)

    + Body

            [
                {
                    "reviewId": "1858537291",
                    "rating": 0,
                    "comments": "Ordered earlier today, delivered fast..exactly what I ordered..thank you so much!",
                    "title": null,
                    "reviewer": {
                      "firstName": "Sandy Rowe",
                      "lastName": "Johncox",
                      "nickName": "Sandy Rowe Johncox",
                      "thumbnailUrl": "https://ddjkm7n7lx.cloudfront.net/reviewer/dc42f6d8b2b84dc0b688c43e616.jpeg",
                      "facebookId": "638309687"
                    },
                    "reviewURL": "https://www.facebook.com/Imp-Flow-17565744/reviews",
                    "sourceType": "Facebook",
                    "reviewDate": "Jan 20, 2014",
                    "response": "Thanks",
                    "responseDate": "Feb 18, 2014",
                    "recommended": 1
                },
                {
                    "reviewId": "73748574902",
                    "rating": 0,
                    "comments": "I am a long time customer and love Dieici. I am there at least once a week. I have never been disappointed with any service. I love all the girls. The customer service is beyond a 10. I also love the new addition Wish to the salon! Wish is a woman's clothing boutique. What could be better...beauty and fashion all in one spot!!! Dieci keeps getting better and better!",
                    "title": null,
                    "reviewer": {
                      "firstName": "Jennifer",
                      "lastName": "Bennett",
                      "nickName": "Jennifer Bennett",
                      "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/9a070cf98f014f5d9b06987dcc9c48fe.jpeg",
                      "emailId": "jbennett@gmail.com",
                      "facebookId": null,
                      "city": "Cedar Knolls",
                      "state": " NJ"
                    },
                    "reviewUrl": "https://birdeye.com/imp-flower-15229573096",
                    "sourceType": "Direct Feedback",
                    "reviewDate": "Jan 20, 2019",
                    "response": "Thanks",
                    "responseDate": "Feb 18, 2019",
                    "featured": 0,
                    "customerId": 7432167,
                    "extraParams":{
                        "key1": "value1",
                        "key2": "value2",
                        "key3": "value3"
                    }
                }
            ]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 400

    [1163][]

+ Response 401

    [1164][]

+ Response 400

    [1167][]

+ Response 4010

    [1186][]

+ Response 400

    [1187][]

+ Response 400

    [1227][]

+ Response 400

    [1228][]

+ Response 400

    [1244][]




## Review Summary [/v1/review/businessid/{businessId}/summary{?api_key,statuses}]
Review Summary API returns the number of reviews based on the review source.
It also returns the list of review sources and review ratings.


### Get reviews summary [GET]

+ Parameters

    + businessId: 12345678 (string, required) - Id of the business.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + statuses: published,parked (string[], optional) -  List of review status.


+ Request (application/json)

    + Headers

            Accept: application/json


+ Response 200 (application/json)

    + Attributes

        + sources (array) - Source detail list.
            + (object)
                + sourceName: Google (string) - Name of the source.
                + sourceAlias: google (string) - Alias of the source.
                + avgRating: 4.6 (number) - Average rating of the source.
                + reviewCount: 15 (number) - Total number of reviews.
        + ratings (array, fixed) - Review count against each possible review rating.
            + (object)
                + rating: 5 (number) -  Review Rating.
                + reviewCount: 140 (number) -  Number of reviews according to rating.

    + Body

            {
                "sources": [
                {
                    "sourceName": "Birdeye",
                    "sourceAlias": "birdeye",
                    "avgRating": 4.6,
                    "reviewCount": 15
                },
                {
                    "sourceName": "Citysearch",
                    "sourceAlias": "citysearch",
                    "avgRating": 5,
                    "reviewCount": 3
                },
                {
                    "sourceName": "GooglePlay",
                    "sourceAlias": "googleplay",
                    "avgRating": 4.5,
                    "reviewCount": 742
                },
                {
                    "sourceName": "PressGaney",
                    "sourceAlias": "pressGaney",
                    "avgRating": 4,
                    "reviewCount": 2
                }]
                "ratings": [
                {
                    "rating": 0,
                    "reviewCount": 0,
                },
                {
                    "rating": 1,
                    "reviewCount": 4,
                },
                {
                    "rating": 2,
                    "reviewCount": 34,
                },
                {
                    "rating": 3,
                    "reviewCount": 46,
                },
                {
                    "rating": 4,
                    "reviewCount": 103,
                },
                {
                    "rating": 5,
                    "reviewCount": 92,
                }]
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]


+ Response 400

    [1167][]


## Review Reply [/v1/review/reply/business/{businessNumber}/review/{reviewId}{?api_key}]
Eligible reviews can be replied to from the Birdeye platform using Review Reply API.

### Post Review Reply [PUT]

+ Parameters

    + businessNumber: 123456789 (string, required) - Id of the business.
    + reviewId: 88778877 (string, required) - Review Id.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + response: Thanks for reviewing us (string) - Review Reply text to be posted.
        + isPrivateResponse: Default user (string) - Flag to post reply privately to reviewer [Only in case of Managed Service].

    + Body

            {
                "response":"Enter Reply here",
                "isPrivateResponse":false
            }

+ Response 200 (application/json)

    + Attributes

        + response: Thanks for reviewing us (string) - Review Reply text that is posted.
        + responseBy: Default user (string) - Default user (static value)
        + responseDate: 1604926421189 (string) - Reply posted date in millis.

    + Body

            {
                "response":"Thanks for reviewing us.",
                "responseBy":"Default user",
                "responseDate": 1604926421189
            }

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 400

    [1011][]

+ Response 404

    [1175][]

+ Response 400

    [1042][]

+ Response 400

    [2110][]

+ Response 400

    [21101][]

+ Response 400

    [21103][]

+ Response 400

    [21104][]

+ Response 400

    [2111][]

+ Response 400

    [21113][]

+ Response 400

    [21114][]

+ Response 400

    [21112][]

+ Response 400

    [2222][]

+ Response 400

    [1541][]

+ Response 400

    [2075][]

+ Response 400

    [20706][]

+ Response 400

    [2078][]


## Create Tags [/v1/tag{?businessId,api_key}]
Create Tags creates new tag(s) in the account.

### Create tags [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (string, required) - Id of the Business.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + tags: positive, spam (array) - List of tag name.


    + Body

            {
                "tags" : [ "positive", "spam" ]
            }

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]



## Delete Tag [/v1/tag/{tagname}{?businessId,api_key}]
Delete Tag deletes any tag from the account.

### Delete a tag [DELETE]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (string, required) - Business Number.
    + tagname: positive2022 (string, required) - Tag name to be deleted.


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]



## Fetch Tags [/v1/tag/all{?businessId,api_key}]
Fetch Tags returns the list of tags associated with the account.

### Get all tags [GET]


+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (string, required) - Business Number.


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)


    + Body

            [ "dental", "dentist", "doctor", "ortho" ]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]



## Search reviews and assign tags [/v1/tag/add/review{?bid,api_key,tag}]
Assign the list of tags to the reviews on the basis of review filter.

### Assign tags to filtered reviews [POST]


+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + bid: 12345678 (string, required) - Id of the Business.
    + tag: positive2022&negative2022 (string, required) - List of tags.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
            + reviewIds: 3901784402334,3901744402337 (array) - List of reviewIds.
            + fromDate: 04/01/2021 (string) - Review Start date format MM/dd/YYYY.
            + toDate: 05/03/2022 (string) - Review End date format MM/dd/YYYY.
            + updateFromDate: 04/01/2021 (string) - Review update from date format MM/dd/YYYY.
            + updateToDate: 05/3/2022 (string) - Review update end date format MM/dd/YYYY.
            + sources: google,citysearch (string) - List of sources.
            + ratings: 1,2,3,4,5,0 (string) - List of Review Ratings.
            + keywords: water,great (string) - List Review keywords.
            + searchStr: Awesome (string) - Search string.
            + subBusinessIds: 134387654345,134387654346 (string) - List of location numbers.


    + Body

            {
                "reviewIds":["3901784402334","3901744402337","3902344402875"],
                "fromDate":"04/01/2013",
                "toDate":"05/3/2015",
                "updateFromDate":"04/01/2013",
                "updateToDate":"05/3/2015",
                "sources":["google","citysearch"],
                "ratings":[1,2,3,4,5,0],
                "keywords":["water"],
                "searchStr":"Awesome",
                "subBusinessIds":[134387654345,134387654346,13438765437]
            }


+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]




## Search reviews and remove tags [/v1/tag/remove/review{?bid,api_key,tag}]
Search reviews and remove tags removes the list of tags from reviews on the basis of review filter.

### Remove tags from filtered reviews [POST]


+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + bid: 12345678 (string, required) - Id of the Business.
    + tag: positive2022&negative2022 (string, required) - List of tags to be removed from reviews.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
            + reviewIds: 3901784402334,3901744402337 (array) - List of reviewIds.
            + fromDate: 04/01/2021 (string) - Review Start date format MM/dd/YYYY.
            + toDate: 05/03/2022 (string) - Review End date format MM/dd/YYYY.
            + updateFromDate: 04/01/2021 (string) - Review update from date format MM/dd/YYYY.
            + updateToDate: 05/3/2022 (string) - Review update end date format MM/dd/YYYY.
            + sources: google,citysearch (string) - List of sources.
            + ratings: 1,2,3,4,5,0 (string) - List of Review Ratings.
            + keywords: water,great (string) - List Review keywords.
            + searchStr: Awesome (string) - Search string.
            + subBusinessIds: 134387654345,134387654346 (string) - List of location numbers.


    + Body

            {
                "reviewIds": [3901784402334,3901744402337],
                "fromDate":"04/01/2013",
                "toDate":"05/3/2015",
                "updateFromDate":"04/01/2013",
                "updateToDate":"05/3/2015",
                "sources":["google","citysearch"],
                "ratings":[1,2,3,4,5,0],
                "keywords":["water"],
                "searchStr":"Awesome",
                "subBusinessIds":[134387654345,134387654346,13438765437]
            }


+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]


## Remove tags from all reviews [/v1/tag/remove/all/review{?bid,api_key}]
Remove particular tags from all reviews removes the list of tags from all the reviews of an account.

### Remove particular tags from all reviews [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + bid: 12345678 (string, required) - Id of the Business.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + tags: happy,good (array) - List of tags to be removed.


    + Body

            {
                "tags":["happy","good","smile"]
            }


+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]



# Group Contact

Manage contacts across locations effortlessly with a robust Contact Management System.

## Create or Update Contact [/v1/customer-v2/external/saveCustomer{?api_key,businessId}]
Customers can be created & updated using Create or Update Contact API.


### Create or Update Contact [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (string, required) - Id of the business.


+ Request (application/json)

    + Headers

            Accept: application/json


    + Attributes


        + id: 115339282 (string) - Id of enterprise customer.
        + firstName: Ron (string) - First name of the customer.
        + lastName: Spector (string) - Last name of the customer.
        + email: ron@test.con (string) - Email of customer, optional (if phone is provided).
        + phone: 123 456 7890 (string) - Phone of customer optional (if email is provided).
        + countryCode: US (string, optional) - Country code of the phone number. Default value=US, Other Possible values=AU,CA,MX,PR,VI
        + smsOptin: false (boolean) - SMS Opt flag.
        + emailOptin: false (boolean) - Email Opt flag.
        + blocked: false (boolean) - Contact block flag.
        + businessIds: 145308764185002,145308769721320 (array) - Business Ids under enterprise account. The Business Ids field is mandatory while creating a new contact. While updating, if no business Ids are provided, the same location mappings are retained.
        + tags: Tag One, Tag Two (string) - List of tags.
        + customFields (array) - List of Custom fields. We currently support 4 types of customfields - text, number, currency, date (in formats - “MM/dd/yyyy” and "MM-dd-yyyy" only), and yes or no (1:"yes", 0:"no").
            + (object)
                + fieldName: Company (string) - Field name.
                + type: text (string) - Field type.
                + fieldValue: Dunder Mifflin (string) - Value of field.

    + Body

            {
                "id": 115339282,
                "firstName": "Michael",
                "lastName": "Scott",
                "email": "michael@test.com",
                "phone": "(212) xxx-xxxx",
                "countryCode": "US",
                "emailOptin": true,
                "smsOptin": true,
                "blocked": false,
                "businessIds": [161458406365307,161072537475129],
                "tags": ["Tag One","Tag Two"],
                "customFields": [
                {
                    "fieldName": "Company",
                    "type": "text",
                    "fieldValue": "Dunder Mifflin"
                },
                {
                    "fieldName": "Product",
                    "type": "text",
                    "fieldValue": "Paper"
                }]
            }


+ Response 200 (application/json)

    + Attributes
        + id: 115339282 (number) - Id of enterprise customer.

    + Body

            {
                "id": 115339282
            }


+ Response 401

    [1161][]

+ Response 429

    [89][]


+ Response 400

    [1167][]


+ Response 404

    [1532][]

+ Response 400

    [5008][]

+ Response 400

    [5043][]



## Get Contact [/v1/customer-v2/external/getCustomer{?api_key,businessId}]
Get Contact fetches Customer details.

### Get Contact [POST]


+ Parameters
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (string, required) - Id of the business.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes

        + id: 115339282 (string) - Id of enterprise customer. optional (if cid, phone or email is provided).
        + cid: 293847172 (string) - Id of customer mapping on a location. optional (if id, phone or email is provided).
        + email: ron@test.con (string) - Email of customer, optional (if phone, id or cid is provided).
        + phone: 123 456 7890 (string) - Phone of customer optional (if email, id or cid is provided).


    + Body

            {
                "id": 115339282,
                "cid": 293847172,
                "email": "test.user@test.com",
                "phone": "(212) xxx-xxxx"
            }

+ Response 200 (application/json)

    + Attributes


        + id: 115339282 (string) - Id of enterprise customer.
        + firstName: Ron (string) - First name of the customer.
        + lastName: Spector (string) - Last name of the customer.
        + email: ron@test.con (string) - Email of customer, optional (if phone is provided).
        + phone: 123 456 7890 (string) - Phone of customer optional (if email is provided).
        + countryCode: US (string) - Country code of the phone number. Default value=US, Other Possible values=AU,CA,MX,PR,VI
        + smsOptin: false (boolean) - SMS Opting flag.
        + mappings (array) - List of locations where customer is mapped. If requested by cid, only that location's mapping is returned.
            + (object)
                + cid: 12345 (number) - Customer location id.
                + location: New York (string) - Name of the location.
                + bid: 710687 (number) - Location id.
                + businessNumber: 161458406365307 (number) - Location Number.
        + tags: Tag One, Tag Two (string) - List of tags.
        + customFields (array) - List of Custom fields.
            + (object)
                + fieldName: Company (string) - Field name.
                + type: text (string) - Field type.
                + fieldValue: Dunder Mifflin (string) - Value of field.


    + Body

            {
                "id": 115339282,
                "firstName": "Michael",
                "lastName": "Scott",
                "email": "test.user@test.com",
                "phone": "(212) xxx-xxxx",
                "countryCode": "US",
                "blocked": false,
                "emailOtin": true,
                "smsOptin": true,
                "source": "api",
                "created": "January 12, 2021",
                "mappings": [
                {
                    "cid": 1234451,
                    "location": "new horizon",
                    "bid": 710687,
                    "businessNumber": 161458406365307
                },
                {
                    "cid": 1235452,
                    "location": "North Carolina",
                    "bid": 714169,
                    "businessNumber": 161072537475129
                }],
                "tags": ["Tag One","Tag Two"],
                "customFields": [
                {
                    "fieldName": "Company",
                    "type": "text",
                    "fieldValue": "Dunder Mifflin"
                },
                {
                    "fieldName": "Product",
                    "type": "text",
                    "fieldValue": "Paper"
                }]
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 400

    [1167][]

+ Response 404

    [1532][]

+ Response 400

    [5043][]



## Delete Contact [/v1/customer-v2/external/deleteCustomer{?api_key,businessId}]
Customers can be deleted using Delete Contact API.


### Delete Contact [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (string, required) - Id of the business.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + id: 115339282 (string,required) - Id of enterprise customer.
        + businessIds: 161322681923726, 161322681923727 (array) - List of business Ids. If businessIds are provided, mappings would be deleted from those locations only. If no businessIds are provided, the customer would be deleted from all the locations.

    + Body

            {
                "id": 115339282,
                "businessIds": [161322681923726, 161322681923727]
            }


+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 404

    [1532][]

+ Response 400

    [5043][]



## Check in [/v1/customer/checkin{?api_key,bid}]
Customer check-in can be done using Check in API.


### Customer Checkin [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + bid: 12345678 (string, required) - Id of the business.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + name: Steve Smith  (string) - Name of the customer.
        + emailId: steves@abcd.com (string) - Email ID of the customer (optional If business has enabled for sms, then either email or phone will be required).
        + phone: 4081231234 (string) - Phone number of the customer (optional If business has enabled for sms, then either email or phone will be required).
        + smsEnabled: 0 (number) - Whether customer has opted to receive SMS request or not. Valid values are 0(false), 1(true). Default is 1.
        + additionalParams (object) - Custom tags can be added as key value pair.
        + employees (array)
            + (object)
                + emailId: sshikha@abcd.com (string) - Email Id of assisted Employee.

    + Body

            {
              "name": "Steve Smith",
              "emailId": "steves@abcd.com",
              "phone": "408-xxx-xxxx",
              "smsEnabled": 1,
              "additionalParams" :
               {
                    "Tag Group Name 1": "Tag Name 1",
                    "Tag Group Name 2" :"Tag Name 2",
                    "location" :"New York"
               },
              "employees":[{
                             "emailId" : "sshikha@abcd.com"
                          }]
            }

+ Response 200 (application/json)

    + Attributes
        + customerId: 673356544  (number) - Id of enterprise customer.


    + Body

            {
                "customerId":”673356544”
            }

+ Response 400

    [1142][]

+ Response 400

    [1086][]

+ Response 400

    [1087][]


+ Response 400

    [1088][]


+ Response 400

    [1055][]


+ Response 400

    [1170][]

+ Response 401

    [1033][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 401

    [1175][]



## Activity log [/v1/customer/history/{customerId}{?businessId,api_key,startDate,endDate}]
You can retrieve the customer history or customer activity log using the Customer activity log API.

### Customer activity log [GET]

+ Parameters

    + businessId: 12345678 (string, required) - Id of the business.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + startDate: 12/30/2021 (string, optional) - The start date format should be MM/dd/yyyy. if start date is not set, then we will use the date customer was created.
    + endDate: 12/30/2022 (string,optional) - The end date format should be MM/dd/yyyy. if end date is not set, then we will use the current date.
    + customerId: 12344 (string,required) - Id of the customer.


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Attributes (array)
        + (object)
            + type: Review request email (string) - Activity Type.
            + activityDate: Review request email (string) - Activity Type.
            + action: Sent (string) -  Action performed on the activity type.
            + activityTimestamp: 1435290249000 (number) - Epoc activity timestamp.


    + Body

            [{
                "type": "Share review email",
                "activityDate": "Mar 11, 2018 08:44 PM",
                "action": "Sent",
                "activityTimestamp": 1435290249000
            },
            {
                "type": "Review request email",
                "activityDate": "Mar 12, 2018 08:43 PM",
                "action": "Sent",
                "activityTimestamp": 1435290234000
            },
            {
                "type": "Review request email",
                "activityDate": "Mar 13, 2018 08:43 PM",
                "action": "5-star review written on Birdeye",
                "activityTimestamp": 1435290234000
            },
            {
                "type": "Created",
                "activityDate": "Mar 13, 2018 08:43 PM",
                "action": "No Action",
                "activityTimestamp": 1435290234000
            }]

+ Response 404

    [1011][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 400

    [1089][]

+ Response 400

    [1091][]

+ Response 400

    [1523][]

+ Response 400

    [1524][]


## Delete Customer [/v1/customer/id/{customerId}{?api_key}]
Customer can be deleted using this API.

### Customer Delete [DELETE]

+ Parameters

    + customerId: 12345678 (string, required) - Id of enterprise customer.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Attributes
        + email: ron@test.com (string) - Email Id of the customer.
        + firstName: Ron Smith (string) - First name of the customer.
        + number: 411504416 (string) -  Phone number of the customer.


    + Body

            {
                "emailId": "tom@abcd.com",
                "firstName": "tom",
                "number": "411504416"
            }

+ Response 404

    [1011][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]


+ Response 400

    [1089][]



## Subscribe/Unsubscribe Customer [/v1/customer-v2/change-permission{?api_key}]
Customer can be subscribe/unsubscribe from Email & SMS using this API.


### Subscribe/Unsubscribe Customer [POST]


+ Parameters
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + permission: both-unsubscribed (string, required) -  Action to be taken. Valid values are both-subscribed, both-unsubscribed, sms-subscribed, and email-subscribed.
        + email: test1@mail.in, ron@test.com (array) - Customer email ids.
        + phone: 2345654326, 1234567890 (array) - Customer phone numbers.
        + accountNumber: 123456789876543 (number, required) - Location id.

    + Body

            {
                "permission" : "both-unsubscribed",
                "email": ["test1@mail.in"],
                "phone": ["2345654326"],
                "accountNumber":123456789876543
            }

+ Response 200 (application/json)


    + Body

            true or false


+ Response 404

    [1011][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]


+ Response 400

    [1089][]



## Contacts list [/v2/customer/list{?businessId,api_key,page,size,order,sortby}]
Contact list API fetches contact list for a business.

### Contact [POST]

+ Parameters

    + businessId: 12345678 (string, required) - Id of the Business.
    + page: 0 (number, required) - The page number.
    + size: 30 (number, required) - Maximum number of contacts return in response.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + sortby: lastActivityOn (string, required) - The sorting order of the list.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes

        + startDate: 07/01/2019 (string, optional) - Start Date in format mm/dd/yyyy
        + endDate: 07/19/2019 (string, optional) - End Date in format mm/dd/yyyy

    + Body

            {
                "startDate" : "07/01/2019",
                "endDate" : "07/19/2019"
            }

+ Response 200 (application/json)

    + Attributes

        + page: 0 (number) - The page number.
        + size: 25 (number) - Maximum number of contacts return in response.
        + totalPages: 68 (number) - Number of pages to query.
        + totalCount: 1679 (number) - Number of contacts to query.
        + customers (array) - Customer list
            + (object)
                + customerId: 12345 (number) - Id of enterprise customer.
                + name: Ron Smith (string) - Name of enterprise customer.
                + email: ron@test.com (string) - Email Id of enterprise customer.
                + phone: 1234567890 (string) - Phone number of enterprise customer.
                + lastActivityWithTime: 12 Aug 2019 02:05 PM PDT (string) - Last activity time.



    + Body

            {
                "page": 0,
                "size": 25,
                "totalPages": 68,
                "totalCount": 1679,
                "customers":
                [{
                    "customerId": 12345,
                    "name": "Dummy1",
                    "email": "sam@gmail.com",
                    "phone": "xxx-xxx-xxxx",
                    "lastActivityWithTime": "12 Aug 2019 02:05 PM PDT"
                },
                {
                    "customerId": 54321,
                    "name": "Summy2",
                    "email": "samuel@gmail.com",
                    "phone": "xxx-xxx-xxxx",
                    "lastActivityWithTime": "12 Aug 2019 02:05 PM PDT"
                }]
            }

+ Response 404

    [1011][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]



## Customer or Lead list [/v1/contact/details{?api_key,tags,customfields}]
Customer or Lead list fetches the contact list for a business, which can be filtered based on contact type (Lead or Customer) & source of the contact.

### Customer or Lead list [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + tags: true (boolean, optional) - If tag data is required send true, default value is false.
    + customfields: true (boolean, optional) - If custom fields data is required send true, default is false.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + sources: api,dashboard (array, optional) - Source of the customer/lead. Possible values are api,dashboard,facebook,integration,sftp,bulkupload,webchat,crmimport,other,referral,voicecall,text,email,google.
        + startDateUtc: 10/01/2020 (string, required) - Start date in format mm/dd/yyyy.
        + endDateUtc: 10/01/2021 (string, required) - End date in format mm/dd/yyyy.
        + contactType: customer (string, optional) - Possible values are "lead", "customer".  If blank then all contact types are returned.
        + businessId: 158629168202762 (number, required) - Business number of the location, when enterprise number is provided, then fetch data for all locations.
        + page: 0 (string, required) - Page number to request.
        + size: 100 (string, required) - Number of records per page, max is 5000.


    + Body

            {
                "sources": ["api", "dashboard", "facebook", "integration", "sftp", "bulkupload", "webchat", "crmimport", "other", "referral", "voicecall", "text", "email", "google"],
                "startDateUtc": "10/01/2020",
                "endDateUtc": "11/01/2021",
                "contactType": "customer",
                "businessId": 158629168202762,
                "page": 0,
                "size": 100
            }


+ Response 200 (application/json)

     + Attributes
        + page: 0 (number) - Page number to request.
        + size: 100 (number) - Number of records per page.
        + totalPages: 310 (number) - Total number of pages.
        + contacts (array) - Contact details
            + (object)
                + firstName: Ron (string) - First name of the contact.
                + lastName: customer (string) - Last name of the contact.
                + email: ron@test.com (string) - Email Id of the contact.
                + phone: 1234567890 (string) - Phone number of the contact.
                + created: 2021-01-06T22:25:12.000+0000 (string) - Created date of the contact.
                + contactType: customer (string) - Contact type.
                + source: facebook (string) - Source of the customer/lead.
                + mappings (array) - Locations customer/lead is associated with
                    + (object)
                        + businessId: 158629168202762 (number) - Business number of the location.
                        + customerId: 123121 (number) - Id of the customer.



    + Body

            {
                "page":0,
                "size":100,
                "totalPages":310,
                "totalCount":30983,
                "contacts":
                [{
                    "firstName":"Dummy1F",
                    "lastName":"Dummy1L",
                    "email":"sam@gmail.com",
                    "phone":"xxx-xxx-xxxx",
                    "created":"2021-01-06T22:25:12.000+0000",
                    "contactType":"customer",
                    "source":"facebook",
                    "mappings" :
                    [{
                        "businessId" : 123456789909,
                        "customerId" : 2341
                    },
                    {
                        "businessId" : 123456789910,
                        "customerId" : 2342
                    }]
                },
                {
                    "firstName":"Dummy2F",
                    "lastName":"Dummy2L",
                    "email":"samuel@gmail.com",
                    "phone":"",
                    "created":"2021-01-06T22:06:41.000+0000",
                    "contactType":"lead",
                    "source":"webchat",
                    "mappings" :
                    [{
                        "businessId" : 123456789909,
                        "customerId" : 2343
                    }]
                }]
            }


+ Response 404

    [1175][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 400

    [21121][]

+ Response 400

    [21120][]

+ Response 400

    [21122][]

+ Response 400

    [2347][]

+ Response 400

    [2348][]


## Contact Us [/v1/contactUs/{businessId}{?api_key}]
Contact Us form can be integrated with Birdeye Inbox using Contact Us API.

### Contact Us Request [POST]

+ Parameters

    + businessId: 12345678 (string, required) - Id of the business.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + customerComment: What all services do you offer? (string) - Comment or query by the customer
        + customer (object,required) - Customer details.
            + name: Ron Smith (string, required) - Name of the customer.
            + email: ron@test.com (string) - Email Id of the Customer. Mandatory if phone not provided.
            + phone: 1234567890 (string) - Phone No of the Customer. Mandatory if email not provided.
        + additionalParams (object) - Additional Params contains (key,value) pair which can be used to track the customers.


    + Body

            {
                "customerComment": "What all services do you offer?",
                "customer": {
                    "name": "Dummy Name",
                    "email": "sam@gmail.com",
                    "phone": "4424242424"
                },
                "additionalParams": {
                "channel": "Web",
                "utm_campiagn": "New Year"
                }
            }

+ Response 200 (application/json)

    + Attributes
        + customerId: 1234567 (number) - Id of the enterprise customer.

    + Body

            {
                "customerId":1234567
            }


+ Response 404

    [1175][]


+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 400

    [1001][]

+ Response 400

    [1021][]

+ Response 400

    [1087][]

+ Response 400

    [1088][]

+ Response 400

    [1089][]

+ Response 400

    [1142][]

+ Response 400

    [5046][]


## Get opt-out Contacts [/v1/contact/{businessId}/update-feed]
API to fetch the daily opt-out or blocked contact data for a business

### Get opt-out contact data [POST]

+ Parameters

    + businessId: 123456 (number, required) - Id of a business (Long).

+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


    + Attributes
        + start: 1693570640000 (number, required) - The start date format should be in milliseconds. If the start date is not set and the end date is provided, we will fetch data for 24 hours before the end date. If both are not provided, the latest 24 hours data will be fetched.
        + end: 1693657040000 (number,required) -  The end date format should be in milliseconds. If the end date is not set and the start date is provided, we will fetch data for 24 hours after the start date. If both are not provided, the latest 24 hours data will be fetched.
        + subscriptionStatus: 155911947195757, 155290409184734 (array,required) - Type of subscription update feed we want the data for. Like opted-out to get email and text optouts, and blocked for contacts getting blocked. If not provided, only opted-out updates will be returned, by default.




    + Body

            {
                "end": 1693657040000,
                "start": 1693570640000,
                "subscriptionStatus": [ "blocked","opted-out" ]
            }

+ Response 200 (application/json)


    + Attributes

        + emailOptOut (array) - All the contacts grouped under this field, which were opted out from email in the given duration
            + (object)
                + id: 1213422 (number) - id of the enterprise customer.
                + firstName: John (string) - First name of the contact.
                + lastName: Doe (string) - Last name of the contact.
                + emailId: john@yahoo.com (string) - EmailId of the contact, if exists.
                + phone (string) - Phone number of the contact, if exists. Format is (xxx) xxx-xxxx.
        + textOptOut (array) - All the contacts grouped under this field, which were opted out from text in the given duration
            + (object)
                + id: 1213422 (number) - id of the enterprise customer.
                + firstName: John (string) - First name of the contact.
                + lastName: Doe (string) - Last name of the contact.
                + emailId: john@yahoo.com (string) - EmailId of the contact, if exists.
                + phone (string) - Phone number of the contact, if exists. Format is (xxx) xxx-xxxx.
        + blocked (array) - All the contacts grouped under this field, which were blockedl in the given duration.
            + (object)
                + id: 1213422 (number) - id of the enterprise customer.
                + firstName: John (string) - First name of the contact.
                + lastName: Doe (string) - Last name of the contact.
                + emailId: john@yahoo.com (string) - EmailId of the contact, if exists.
                + phone (string) - Phone number of the contact, if exists. Format is (xxx) xxx-xxxx.


    + Body

            {
              "emailOptOut": [
                {
                  "id": 1213422,
                  "firstName": "John",
                  "lastName": "Doe",
                  "emailId": "john@yahoo.com",
                  "phone": "(212) 234-1242"
                },
                {
                  "id": 1213423,
                  "firstName": "Johnny",
                  "lastName": "Doe",
                  "emailId": "johnny@yahoo.com",
                  "phone": "(212) 231-1242"
                }
              ],
              "textOptOut": [
                {
                  "id": 1213425,
                  "firstName": "Jane",
                  "lastName": "Doe",
                  "emailId": "john@yahoo.com",
                  "phone": "(212) 234-1242"
                },
                {
                  "id": 1213423,
                  "firstName": "Johnny",
                  "lastName": "Doe",
                  "emailId": "johnny@yahoo.com",
                  "phone": "(212) 231-1242"
                }
              ],
              "blocked": [
                {
                  "id": 1213422,
                  "firstName": "John",
                  "lastName": "Doe",
                  "emailId": "john@yahoo.com",
                  "phone": "(212) 234-1242"
                },
                {
                  "id": 1213423,
                  "firstName": "Johnny",
                  "lastName": "Doe",
                  "emailId": "johnny@yahoo.com",
                  "phone": "(212) 231-1242"
                }
              ]
            }


+ Response 401

    [1161][]

+ Response 401

    [1011][]

+ Response 429

    [89][]

+ Response 400

    [20083][]


# Group Campaign
Create a short link for review requests and set review sources in the template.

## Fetch Request URL [/v1/campaign/external/campaign-request-url{?api_key}]
Fetch Request URL gets the short link of the requested URL for the customer.

### Fetch Request URL [POST]


+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + businessId: 100018055 (number, required) - Id of a business (Long).
        + customerId (number,required) - Id of the Customer.
        + surveyId: 6102 (number) - Survey Id, required only for survey requests.
        + templateId: 1133204 (number) - Id of Text template, required except for survey requests.
        + checkinId: 123456 (number) - Checkin id of customer.


    + Body

            {
                "businessId": "100018055",
                "customerId": 39870987,
                "surveyId":6102,
                "templateId": 1133204,
                "checkinId": 123456
            }

+ Response 200 (application/json)

    + Attributes
        + externalUId: 10001805512 (number) - Id of the requested URL.
        + url (number) - Short link of the requested URL.


    + Body

            {
                "externalUId" : 10001805512,
                "url" : "https://birdeye.cx/a1swor"
            }

+ Response 401

    [1161][]

+ Response 401

    [1011][]

+ Response 400

    [1089][]

+ Response 400

    [1040][]

+ Response 400

    [1315][]

+ Response 429

    [89][]




## Set Defaullt Review Sources [/v1/campaign/external/default-review-sources{?api_key}]
Set Default Review Sources API updates default templates of businesses under a reseller with default review sources (i.e., Google/Facebook).

### Set Defaullt Review Sources [POST]


+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + businessId: 157189662556139 (number, required) - Id of reseller (Long).
        + customerId: 155911947195757, 155290409184734 (array,required) - List of business ids under a reseller.


    + Body

            {
                "resellerId": “157189662556139”,
                "businessIds": [ 155911947195757, 155290409184734 ]
            }

+ Response 200 (application/json)



+ Response 401

    [1161][]

+ Response 401

    [1011][]

+ Response 429

    [89][]

# Group Aggregation

Access your public data from 150+ review sites.

## Get source list [/v1/aggregation/business/{businessId}{?api_key}]
Get source list API returns the list of aggregations associated with the location/SMB.


### Get all aggregation source [GET]

+ Parameters

    + businessId: 12345678 (string, required) - Id of the Business.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Attributes (array)
        + (object)
            + id: 234950761 (number) - Id of aggregation.
            + sourceAlias: citysearch (string) - Source alias.
            + sourceUrl: http://www.citysearch.com/biz/trattoria-da-vittorio-san-francisco (string) - Source url.
            + sourceName: Citysearch (string) - Source name.



    + Body

            {[
                {
                    "id": "234970154",
                    "sourceAlias": "our_website",
                    "sourceUrl": "http://birdeye.com/trattoria-da-vittorio-943999808/recommendus",
                    "sourceName": "Our Website"
                },
                {
                    "id": "234950761",
                    "sourceAlias": "citysearch",
                    "sourceUrl": "http://www.citysearch.com/biz/trattoria-da-vittorio-san-francisco",
                    "sourceName": "Citysearch"
                },
                {
                    "id": "235020762",
                    "sourceAlias": "google",
                    "sourceUrl": "https://plus.google.com/112610500708977805079/about?gl=US&hl=en-US",
                    "sourceName": "Google"
                }
            ]}


+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 401

    [1033][]

+ Response 404

    [1175][]


## Get Source List-lite [/v1/survey/reviewsites-alias{?api_key,businessId}]
Get Source List-lite returns a list of aggregation aliases associated with the location/SMB.

### Get all aggregation source [GET]


+ Parameters

    + businessId: 12345678 (string, required) - Id of the business.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)


    + Attributes (object)
        + aliases: Google,Citysearch,Yellow Pages (array) - List of source aliases.


    + Body

            {
                "aliases": [
                    "Google",
                    "Citysearch",
                    "Yahoo! Local",
                    "Yellow Pages",
                    "Insider Pages",
                    "Superpages",
                    "Amazon",
                    "Facebook",
                    "Realself",
                    "ConsumersAdvocate",
                    "Vrbo",
                    "Tell Management",
                    "Rehabs.com"
                ]
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 401

    [1033][]

+ Response 404

    [1175][]


## Add Aggregation Link [/v1/aggregation/business/{business_id}{?api_key}]
Add Aggregation Link adds the aggregation URL to the location.

### Add aggregation URL [POST]

+ Parameters

    + business_id: 12345678 (string, required) - Id of the business.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + sourceAlias: citysearch (string, required) - Source alias.
        + url: http://www.citysearch.com/biz/maria-da-vittorio-san-francisco (string, required) - Source url to be added.


    + Body

            {
                "sourceAlias" : "citysearch ",
                "url" : "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco"
            }


+ Response 200 (application/json)

    + Attributes
        + id: 237030543 (number) - Id of the created Aggregation.
        + sourceAlias: citysearch (string) - Alias of the source.
        + sourceName: Citysearch (string) - Name of the source.
        + sourceUrl: http://www.citysearch.com/biz/maria-da-vittorio-san-francisco (string) - Url of the souce.



     + Body

            {
                "id": "237030543",
                "sourceAlias": "citysearch",
                "sourceName": "Citysearch",
                "sourceUrl": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco"
            }

+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 400

    [1030][]

+ Response 400

    [1031][]

+ Response 400

    [1032][]



## Delete [/v1/aggregation/business/{businessID}/aggregation/{aggregationID}{?api_key}]
Delete Aggregation API deletes aggregation from the location/SMB.


### Delete aggregation URL [DELETE]

+ Parameters

    + businessID: 12345678 (string, required) - Id of the business.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + aggregationID: abcdefgh (number, required) - Id of the aggregation to be deleted.



+ Response 200 (application/json)


+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 400

    [1039][]


# Group Report
Various reporting data points across Birdeye modules like reviews, insights and competitors etc for all your data visualisation

## Dashboard [/v1/reports/smb{?api_key,bid}]
Get Dashboard Data API gives you an overview of business data with data points like review & rating count, sentiment of reviews, negative/positive reviews, and past 30 days' reviews with review responses.

### Get Dashboard data [GET]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + bid: 12345678 (string, required) - Id of the Business.


+ Request (application/json)

    + Headers

            Accept: application/json


+ Response 200 (application/json)

    + Body

            {
                "allTime": {
                "avgRating": {
                    "percentChange": 0,
                    "rating": 4.3
                },
                "benchmark": {
                    "industryRating": 4.1,
                    "industryReviewCount": 75785,
                    "percentChange": 4,
                    "rating": 4.3
                },
                "custCommn": {},
                "reviewCount": {
                    "count": 376,
                    "percentChange": 0
                },
                "sentiments": {
                    "negative": 45,
                    "neutral": 36,
                    "positive": 295
                },
                "visitors": {}
            },
            "last30Days": {
                "avgRating": {
                    "rating": 0
                },
                "benchmark": {
                "industryRating": 0,
                "industryReviewCount": 0,
                "percentChange": 0,
                "rating": 0
            },
            "custCommn": {
                "reviewRequest": 0,
                "reviewRequestSms": 0,
                "shareReview": 0
            },
            "reviewCount": {
                "count": 0,
                "percentChange": 0
            },
            "sentiments": {
                "negative": 0,
                "neutral": 0,
                "positive": 0
            },
            "visitors": {}
            },
            "negativeReviews": [
            {
                "comments": "One word...inconsistent. We had high hopes for this place but alas it was not to be. While the servers were polite, they lacked the professionalism normally expected at most dining establishments...you know, simple things like the waiter introducing himself by name or dropping by to see how we liked the food or refilling our drinks. The minestrone soup was pretty good but the fried calamari was bland, rubbery, obviously over cooked, and did I mention bland. The linguini pescatora was also inconsistent. The pasta in the dish was excellent but the calamari was once again over cooked and rubbery, I got a couple of clams that were not cleaned resulting in a few mouthfuls of dirt, and the shrimp was once again over cooked. We also ordered the margherita pizza with mushrooms and that was pretty good. Overall, we cannot recommend this place.",
                "rating": 1,
                "response": "",
                "reviewDate": "Jan 30, 2015",
                "reviewId": "2335311245464",
                "reviewUrl": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco?hrid=60fLFX4lRvHnodkhoWC2lw&nb=1",
                "reviewer": {
                    "city": "Yorba Linda",
                    "nickName": "wendy w.",
                    "state": "CA",
                    "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/9a070cf98f014f5d9b06987dcc9c48fe.jpeg"
                },
                "sourceType": "citysearch"
            },
            {
                "comments": "Veal Scaloppini, mushrooms, marsala wine, seasonal vegetables and potatoes $24.\nFlavor was great but disappointed in portion 2 small thin slice, I had better portion in North Beach...my shoe sole was large than this portion. I'm petite size woman; still left hungry....not a hungry man plate. Don't waste your money on this one, men.",
                "rating": 2,
                "response": "",
                "reviewDate": "Jan 26, 2015",
                "reviewId": "2335208845791",
                "reviewUrl": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco?hrid=FKcQE7naP_Wb4D2ylDsLaQ&nb=1",
                "reviewer": {
                    "city": "San Francisco",
                    "nickName": "Catalina W.",
                    "state": "CA",
                    "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/9a070cf98f014f5d9b06987dcc9c48fe.jpeg"
                },
                "sourceType": "citysearch"
            },
            {
                "comments": "I have to say that this restaurant is very nice but very Loud!:( The bread was old:( The prosciutto appetizer was ridiculous! They only used one slice on six slices of bread:( My husband's main course of the Veal Scallopini was a complete shame! Great sauce but come on! 4 very thin slices of veal w/veggies & red potatoes, he was starving when we got home!:( At $24!!! Ridiculously stingy! My lamb shank & mashed potatoes was superb! No veggies though:( $19 We won't be returning, I was not impressed, I'd rather go to North Beach w/ real Italian dining:) they do have good food but they need to step it up a notch for the prices they charge, I hope they read they're review's so they can change things, Good luck",
                "rating": 2,
                "response": "",
                "reviewDate": "Jan 26, 2015",
                "reviewId": "2337522245554",
                "reviewUrl": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco?hrid=Xn9XOjZYNknHQu5eF9MteQ&nb=1",
                "reviewer": {
                    "city": "San Francisco",
                    "nickName": "Adele R.",
                    "state": "CA"
                },
                "sourceType": "citysearch"
            }
            ],
            "positiveReviews": [
            {
                "comments": "Service is awesome- everyone is from Italy and are so sweet and low the menu/specials from head to toe. Great wine selection that's pretty reasonable. The Bruschetta varieties are unique and yummy. Sometimes main dishes can be hit or miss-not very consistent but it's a new restaurant that I can see establish itself a few great dishes overtime.",
                "rating": 4,
                "response": "",
                "reviewDate": "Jan 23, 2015",
                "reviewId": "2334445645625",
                "reviewUrl": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco?hrid=YYtOE3hvBjp4jYtLgtgBoQ&nb=1",
                "reviewer": {
                    "city": "San Francisco",
                    "nickName": "Anastasia P.",
                    "state": "CA",
                    "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/9a070cf98f014f5d9b06987dcc9c48fe.jpeg"
                },
                "sourceType": "citysearch"
            },
            {
                "comments": "I've been here 3 times in the past year, & it's been good every time.",
                "rating": 4,
                "response": "",
                "reviewDate": "Jan 23, 2015",
                "reviewId": "2333514245697",
                "reviewUrl": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco?hrid=3kiZtC-tj-FGLO3GPRqNDA&nb=1",
                "reviewer": {
                    "city": "Daly City",
                    "nickName": "Matt L.",
                    "state": "CA"
                },
                "sourceType": "Citysearch"
            },
            {
                "comments": "Owner is awesome! ! Came here tonight with my parents and sister's family. .highly recommended! ! I will definitely come back here again!",
                "rating": 5,
                "response": "",
                "reviewDate": "Jan 21, 2015",
                "reviewId": "2336865297689",
                "reviewUrl": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco?hrid=U8mRtt5vA93l0n7j2H1J_w&nb=1",
                "reviewer": {
                    "city": "San Francisco",
                    "nickName": "Johnny C.",
                    "state": "CA",
                    "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/9a070cf98f014f5d9b06987dcc9c48fe.jpeg"
                },
                "sourceType": "Citysearch"
            }
            ],
            "syndication": {
            "presenceCount": 0,
            "reviewDistribution": [
                {
                    "count": 328,
                    "name": "citysearch"
                },
                {
                    "count": 8,
                    "name": "Google"
                },
                {
                    "count": 1,
                    "name": "Yellow Pages"
                },
                {
                    "count": 16,
                    "name": "Foursquare"
                },
                {
                    "count": 23,
                    "name": "Facebook"
                }
            ],
            "reviewListings": [
                {
                    "id": 2,
                    "name": "Google",
                    "url": "https://plus.google.com/112610500708977805079/about?gl=US&hl=en-US"
                },
                {
                    "id": 3,
                    "name": "Citysearch",
                    "url": "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco"
                },
                {
                    "id": 4,
                    "name": "Yahoo! Local",
                    "url": "https://local.yahoo.com/info-148859369-maria-da-vittorio-san-francisco"
                },
                {
                    "id": 5,
                    "name": "Yellow Pages",
                    "url": "http://www.yellowpages.com/san-francisco-ca/mip/maria-da-vittorio-478366944"
                },
                {
                    "id": 10,
                    "name": "Foursquare",
                    "url": "https://foursquare.com/v/maria-da-vittorio/5195394d498e344eeb952b4f"
                },
                {
                    "id": 16,
                    "name": "Superpages",
                    "url": "http://www.superpages.com/bp/San-Francisco-CA/maria-Da-Vittorio-L2450131113.htm"
                },
                {
                    "id": 33,
                    "name": "Merchant Circle",
                    "url": "http://www.merchantcircle.com/business/maria.Da.Vittorio.415-592-8398"
                },
                {
                    "id": 63,
                    "name": "YellowBot",
                    "url": "http://www.yellowbot.com/maria-da-vittorio-san-francisco-ca.html"
                },
                {
                    "id": 84,
                    "name": "MapQuest",
                    "url": "http://www.mapquest.com/us/california/italian-restaurants-san-francisco/maria-da-vittorio-284984723"
                },
                {
                    "id": 110,
                    "name": "Facebook",
                    "url": "https://www.facebook.com/mariadavittorio"
                }
            ]}
            }


+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]


## Review conversion report [/v1/reports/business/analytics/email{?api_key,businessId,fromDate,toDate,days,months}]
Review conversion report API gives you the detail overview of the review request send to the customer.

### Get Review conversion report [GET]

+ Parameters
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (number, required) - Id of the Business.
    + fromDate: 01/13/2021 (string, optional) - Date from result is expected. Format MM/DD/YYYY.
    + toDate: 01/21/2021 (string, optional) - Date up to result is expected. Format MM/DD/YYYY.
    + days: 120 (number, optional) - Use to get results for last some days.
    + months: 2 (number, optional) - Use to get results for last some months.


+ Request (application/json)

    + Headers

            Accept: application/json


+ Response 200 (application/json)

    + Attributes
        + emailSentInfo (object) - Email sent details.
            + total: 12 (number) - Total number of email send.
            + emailDetails (array) - Details of email.
                + (object)
                    + reqType: share_request (string) - Type of request, Values could be share_request, share_request_reminder,review_request,review_request_reminder.
                    + count: 120 (number) - Number of request send.
        + emailOpenInfo (object) - Email open details.
            + total: 50 (number) - Total number of email opened.
            + pc: 20 (number) - Total number of email opened on PC.
            + mobile (object) - Total number of email opened on Mobile device.
                + ios: 5 (number) - IOS
                + android: 5 (number) - Anroid
                + other: 5 (number) - Others
            + tablet (object) - Total number of email opened on Tablet device.
                + ios: 5 (number) - IOS
                + android: 5 (number) - Anroid
                + other: 5 (number) - Others
        + emailClickInfo (array) - Email click details.
            + (object)
                + total: 12 (number) - Total number of email clicked.
                + pc (array) - Total number of email clicked on PC.
                    + (object)
                        + citysearch: 5 (number) - Email click on citysearch.
                        + google: 5 (number) - Email click on google.
                        + birdeye: 5 (number) - Email click on birdeye.
                        + otherSites: 5 (number) - Email click on otherSites.
        + reviews (array) - Review details
            + (object)
                + sourceName: Citysearch (string) - Source name
                + sourceAlias: citysearch (string) - Souce alias
                + avgRating: 4.0 (number) - Average rating
                + reviewCount: 12 (number) -  Review count
        + smsDetail (object) - SMS details.
            + msgSent: 20 (number) - Total number of SMS sent.
            + msgClick: 20 (number) - Total number of SMS clicked.
            + destination (array) -
                + (object)
                    + citysearch: 6 (number) - Number of click on citysearch.
                    + google: 5 (number) - Number of click on google.
                    + birdeye: 7 (number) - Number of click on birdeye.
                    + otherSites: 6 (number) - Number of click on otherSites.

    + Body

            {
                "emailSentInfo": {
                    "total": 28,
                    "emailDetails": [{
                        "reqType": "share_request",
                        "count": 5
                    },
                    {
                        "reqType": "share_request_reminder",
                        "count": 3
                    },
                    {
                        "reqType": "review_request",
                        "count": 12
                    },
                    {
                        "reqType": "review_request_reminder",
                        "count": 10
                    }]
                },
                "emailOpenInfo": {
                    "total": 26,
                    "pc": 14,
                    "mobile": {
                        "ios": 5,
                        "android": 4,
                        "other": 0
                    },
                    "tablet": {
                        "ios": 3,
                        "android": 0,
                        "other": 0
                    }
                },
                "emailClickInfo": {
                    "total": 20,
                    "pc": {
                        "citysearch": 4,
                        "google": 6,
                        "birdeye": 4,
                        "otherSites": 0
                    },
                    "mobile": {
                        "citysearch": 2,
                        "google": 0,
                        "birdeye": 4,
                        "otherSites": 0
                    }
                },
                "reviews": [{
                    "sourceName": "citysearch",
                    "sourceAlias": "citysearch",
                    "avgRating": 4.6,
                    "reviewCount": 159
                },
                {
                    "sourceName": "Google",
                    "sourceAlias": "google",
                    "avgRating": 4.9,
                    "reviewCount": 8
                },
                {
                    "sourceName": "Yellow Pages",
                    "sourceAlias": "yellow_pages",
                    "avgRating": 5,
                    "reviewCount": 1
                }],
                "smsDetail": {
                    "msgSent": 34,
                    "msgClick": 28,
                    "destination": {
                        "citysearch": 12,
                        "google": 6,
                        "birdeye": 10,
                        "otherSites": 0
                    }
                }
            }




+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 400

    [1039][]



## Review and rating over time [/v1/reports/review/analytic/time{?api_key,businessId,sortby,sorder}]
Review and rating over time API gives you the number of reviews and average rating in accordance with the time.

### Review and rating over time Report [POST]


+ Parameters
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (number, required) - Id of the Business.
    + sortby: rating (string, optional) - Values can be 'count' or 'rating'.
    + sorder: 0 (number, optional) - '0' for ascending and '1' for descending order.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + sourceAliases: citysearch,google (array) - List of source aliases.
        + businessNumbers: 943967608,943476803 (array) - List of business number.
        + days: 12 (number) - Use to get results for last some days.

    + Body

            {
                "sourceAliases": ["citysearch ", "google"],
                "businessNumbers": ["943967608", "943476803"],
                "days": 12
            }


+ Response 200 (application/json)

    + Attributes (array)
        + (object)
            + rating: 2.0 (number) - Average Rating for the particular day.
            + count: 10 (number) - Number of reviews for the particular day.
            + milestone: 8/20/15 (string) - Date.
            + timeStamp: 1439942400158 (number) - Epoc time.


    + Body

            [{
                "rating": 0.0,
                "count": 0,
                "milestone": "8\/19\/15",
                "timeStamp": 1439942400158
            },
            {
                "rating": 3.9,
                "count": 23,
                "milestone": "8\/20\/15",
                "timeStamp": 1440028800158
            },
            {
                "rating": 4.9,
                "count": 55,
                "milestone": "8\/21\/15",
                "timeStamp": 1440115200158
            },
            {
                "rating": 2.9,
                "count": 24,
                "milestone": "8\/22\/15",
                "timeStamp": 1440201600158
            },
            {
                "rating": 2.6,
                "count": 23,
                "milestone": "8\/23\/15",
                "timeStamp": 1440288000158
            },
            {
                "rating": 3.3,
                "count": 45,
                "milestone": "8\/24\/15",
                "timeStamp": 1440374400158
            },
            {
                "rating": 1.6,
                "count": 28,
                "milestone": "8\/25\/15",
                "timeStamp": 1440460800158
            }]


+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]



## Reviews & Rating By Location [/v1/reports/rating/location{?api_key,businessId,sortby,sorder}]
Reviews & Rating By Location gives an overall view of how many reviews, and the average ratings are associated with each location.


### Reviews & Rating By Location Report [POST]



+ Parameters
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (number, required) - Id of the Business.
    + sortby: rating (string, optional) - Values can be 'count' or 'rating'.
    + sorder: 0 (number, optional) - '0' for ascending and '1' for descending order.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + sourceAliases: citysearch,google (array) - List of source aliases.
        + businessNumbers: 943967608,943476803 (array) - List of business number.
        + months: 12 (number) - Use to get results for last some months.

    + Body

            {
                "sourceAliases": ["citysearch ", "google"],
                "businessNumbers": ["943967608", "943476803"],
                "months": 12
            }


+ Response 200 (application/json)

    + Attributes

        + rating: 2.0 (number) - Average Rating for the particular location.
        + count: 10 (number) - Number of reviews for the particular location.
        + milestone: Smile dental (string) - Name of the Location.
        + businessId: 943967608 (number) - Business number of the location.
        + state: CA (string) - State.


    + Body

            [{
                "rating": 4.6,
                "count": 132,
                "milestone": "Smile dental",
                "businessId": 943967608,
                "state": "CA"
            },
            {
                "rating": 3.2,
                "count": 367,
                "milestone": "Blaze Dental",
                "businessId": 943589678,
                "state": "CA"
            }]


+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]





## Review Count & Rating [/v1/review/report/count-by-rating/{BusinessId}{?api_key}]
Review Count & Rating API fetches the review count according to the rating.

### Review Count & Rating [POST]

+ Parameters

    + BusinessId: 12345678 (string, required) - Id of the business.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes

        + businessNumbers: 145308764185002,145308769721320 (array) - Business Numbers under enterprise account.
        + sourceAlias: google (string) - Alias of the source.
        + fromDate: 04/01/2013 (string) - Review date (start).
        + toDate: 04/01/2013 (string) - Review date (end).



    + Body

            {
                "businessNumbers": [145308764185002,145308769721320],
                "sourceAlias": ["google","citysearch"],
                "fromDate": "04/01/2013",
                "toDate": "05/3/2015"
            }

+ Response 200 (application/json)

    + Attributes

        + reviewCount: 220 (number) - Total number of reviews.
        + countByRating (array) - Review count against each possible review rating. For Facebook recommended and non-recommended reviews rating will be 0.
            + (object)
                + rating: 5 (number) -  Review Rating.
                + count: 140 (number) -  Number of reviews according to rating.


    + Body

            {
                "reviewCount": 108,
                "countByRating": [
                    {
                        "rating": 0,
                        "count": 17
                    },
                    {
                        "rating": 1,
                        "count": 19
                    },
                    {
                        "rating": 2,
                        "count": 3
                    },
                    {
                        "rating": 3,
                        "count": 14
                    },
                    {
                        "rating": 4,
                        "count": 11
                    },
                    {
                        "rating": 5,
                        "count": 44
                    }
                ]
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]


+ Response 400

    [1167][]


## Review Count & Rating By Employee [/v1/review/report/count-by-rating/employee/{BusinessId}{?api_key}]
Review Count & Rating By Employee returns review count by rating associated with each assisted employee.

### Review Count & Rating By Employee [POST]

+ Parameters

    + BusinessId: 12345678 (string, required) - Id of the business.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes

        + businessNumbers: 145308764185002,145308769721320 (array) - Business Numbers under enterprise account.
        + sourceAlias: google (string) - Alias of the source.
        + fromDate: 04/01/2013 (string) - Review date (start).
        + toDate: 04/01/2013 (string) - Review date (end).
        + employees (array) - Employee details for which review count will be fetched.
            + (object)
                + firstName: Ron (string) - Employee's first name.
                + lastName: Spector (string) - Employee's last name.
                + phone: 4424242424 (string) - Employee's phone number.

    + Body

            {
                "businessNumbers": [145308764185002,145308769721320],
                "sourceAlias": ["google","citysearch"],
                "employees": [{
                    "firstName": "David",
                    "lastName": "Wood",
                    "phone": "4424242424"
                }],
                "fromDate": "04/01/2013",
                "toDate": "05/3/2015"
            }


+ Response 200  (application/json)

    + Attributes
        + employees (array) - Employee details for which review count will be fetched.
            + (object)
                + employee
                    + firstName: Ron (string) - Employee's first name.
                    + lastName: Spector (string) - Employee's last name.
                    + phone: 4424242424 (string) - Employee's phone number.
                + countByRating (array) - Review count against each possible review rating. For Facebook recommended and non-recommended reviews rating will be 0.
                    + (object)
                        + rating: 5 (number) -  Review Rating.
                        + count: 140 (number) -  Number of reviews according to rating.


    + Body

            {
              "employees": [
                {
                  "employee": {
                    "firstName": "David",
                    "lastName": "Wood",
                    "phone": "4424242424"
                  },
                  "countByRating": [
                    {
                      "rating": 0,
                      "count": 0
                    },
                    {
                      "rating": 1,
                      "count": 1
                    },
                    {
                      "rating": 2,
                      "count": 0
                    },
                    {
                      "rating": 3,
                      "count": 0
                    },
                    {
                      "rating": 4,
                      "count": 2
                    },
                    {
                      "rating": 5,
                      "count": 1
                    }
                  ]
                }
              ]
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]


+ Response 400

    [1167][]



## Insights Category Report by location [/v1/keywords/opmetric/location{?api_key,businessId}]
Insights Category Report by location provides the location-wise insights category data in the response.


### Insights Category Report by location report [POST]

+ Parameters
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (number, required) - Id of the Business.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + startDate: 04/01/2013 (string) - Start Date format MM/dd/YYYY.
        + endDate: 05/3/2015 (string) - End Date format MM/dd/YYYY.
        + reviewSites: 2,110,1,100 (array) - List of Souce Ids.
        + businessNumbers: 9489687712,2136910876 (array) -  List of business numbers.

    + Body

            {
                "startDate":"04/01/2013",
                "endDate":"05/3/2015",
                "reviewSites":["2","110","1","100","3","303","6","84","33","202","25","21","4","5","63"],
                "businessNumbers":["9489687712","2136910876"]
            }


+ Response 200 (application/json)

    + Attributes (array)
        + (object)
            + alias: 7653 Xrtrm Balltown Rd (string) - Alias of the location.
            + avgScore: 10 (number) - Average score of the keywords inside the category.
            + grade: A (string) - Grade of the keywords.
            + totalCount: 1679 (number) - Total count of keyword present.
            + metricForLocn - Location wise metric data.
                + Category_Name - This will be the name of the category like Beverages.
                    + category: Assortment (string) - Category name.
                    + avgScore: 3.4 (number) - Average score.
                    + count: 12 (number) - Count.
                    + grade: B+ (string) - Grade.
                    + parentCategory: Beverages (string) - Parent category name.


    + Body

            [{
                "alias": "7653 - Xrtrm - Balltown Rd",
                "avgScore": 4,
                "grade": "A",
                "totalCount": 1679,
                "metricForLocn": {
                    "Beverages": {
                        "category": "Beverages",
                        "avgScore": 3.8,
                        "count": 5,
                        "grade": "B+"
                    },
                    "Assortment (Beverages)": {
                        "category": "Assortment",
                        "parentCategory": "Beverages",
                        "avgScore": 5,
                        "count": 1,
                        "grade": "A+"
                    },
                    "Utensils": {
                        "category": "Utensils",
                        "avgScore": 0,
                        "count": 0
                    }
                }
            }]


+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]


## Competitive Ranking [/v2/competitive/ranking{?api_key,businessId}]
Competitive Ranking Report provides the competitors ranking & rating data in the response for a business.


### Competitive Ranking Report [POST]

+ Parameters
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (number, required) - Id of the Business.



+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + startDate: 04/01/2013 (string) - Start Date format MM/dd/YYYY.
        + endDate: 05/3/2015 (string) - End Date format MM/dd/YYYY.
        + reviewSites: 2,110,1,100 (array) - List of Souce Ids.

    + Body

            {
                "startDate":"10/08/2019",
                "endDate":"01/15/2020",
                "reviewSites":["2","110"]
            }


+ Response 200 (application/json)

    + Attributes
        + positiveCount: 218305 (number) - Number of positive keywords.
        + neutralCount: 18600 (number) - Number of neutral keywords.
        + negativeCount: 22794 (number) - Number of negative keywords..
        + positivePercent: 84.0 (number) - Positive keyword percentage.
        + neutralPercent: 7.0 (number) - Neutral keyword percentage.
        + negativePercent: 9.0 (number) - Negative keyword percentage.
        + name: Pizza Palace (string) - Enterprise name.
        + count: 259699 (number) - Total Count.
        + rating: 4.3 (number) - Average rating.
        + competitors (array) - Competitors data.
            + (object)
                + positiveCount: 249953 (number) - Number of positive keywords.
                + neutralCount: 21827 (number) - Number of neutral keywords.
                + negativeCount: 16876 (number) - Number of negative keywords..
                + positivePercent: 87.0 (number) - Positive keyword percentage.
                + neutralPercent: 8.0 (number) - Neutral keyword percentage.
                + negativePercent: 6.0 (number) - Negative keyword percentage.
                + name: Family Pizza (string) - Enterprise name.
                + count: 288656 (number) - Total count.
                + rating: 4.45 (number) - Average rating.


    + Body

            {
                "positiveCount" : 218305,
                "neutralCount" : 18600,
                "negativeCount" : 22794,
                "positivePercent" : 84.0,
                "neutralPercent" : 7.0,
                "negativePercent" : 9.0,
                "name" : "Pizza Palace",
                "count" : 259699,
                "rating" : 4.339487006543244,
                "competitors" : [ {
                    "positiveCount" : 249953,
                    "neutralCount" : 21827,
                    "negativeCount" : 16876,
                    "positivePercent" : 87.0,
                    "neutralPercent" : 8.0,
                    "negativePercent" : 6.0,
                    "name" : "Family Pizza",
                    "count" : 288656,
                    "rating" : 4.457812929751687
                },
                {
                    "positiveCount" : 13148,
                    "neutralCount" : 2239,
                    "negativeCount" : 2051,
                    "positivePercent" : 75.0,
                    "neutralPercent" : 13.0,
                    "negativePercent" : 12.0,
                    "name" : "Veggie Pizza and Grill",
                    "count" : 17438,
                    "rating" : 4.126577756608716
                }]
            }



+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]


## NPS Over time [/v1/reports/nps/time/elst{?api_key,businessId}]
NPS Over time gives you the NPS score for a selected period of time for all locations across businesses and the count of promoters, passives, and detractors for this business. The report can be grouped per day/week/month/year.

### NPS Over time Report [POST]

+ Parameters
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (number, required) - Id of the Business.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + startDate: 04/01/2013 (string) - Start Date format MM/dd/YYYY.
        + endDate: 05/3/2015 (string) - End Date format MM/dd/YYYY.
        + reviewSites: 2,110,1,100 (array) - List of Souce Ids.

    + Body

            {
                "startDate":"10/08/2019",
                "endDate":"01/15/2020",
                "reviewSites":["2","110"]
            }


+ Response 200 (application/json)

    + Attributes
        + totalCount: 190322 (number) - Total number of promoters, passives, and detractors.
        + avgNpsScore: 48.6 (number) - Average NPS score.
        + promoters: 63.1 (number) - Total number of promoters.
        + passives: 22.4 (number) - Total number of passives.
        + detractors: 14.5 (number) - Total number of detractors.
        + dataPoints (array) - Data points.
            + (object)
                + nodeId: 9 (number) - Node Id.
                + label: Jul 2009 - Sep 2009 (string) - Label.
                + shortLabel: Q3 2009 (string) - Short Label.
                + startDate: 07/21/2009 (string) - Start date.
                + endDate: 09/30/2009 (string) - End date.
                + totalCount: 1 (number) - Count.
                + detractorPercentile: 100 (number) - Detractor Percentile.
                + passivePercentile: 0 (number) - Passive Percentile.
                + npsScore: /-100 (number) - Average NPS Score.
                + positiveCount: 0 (number) - Positive Count.
                + negativeCount: 1 (number) - Negative Count.
                + neutralCount: 0 (number) - Neutral Count.
        + groupByType: quarter (string) - Grouping by.
        + dateDiff: 324 (number) - Date difference.


    + Body

            {
                "totalCount": 190322,
                "avgNpsScore": "48.6",
                "promoters": "63.1",
                "passives": "22.4",
                "detractors": "14.5",
                "dataPoints": [
                {
                    "nodeId": null,
                    "label": "Jul 2009 - Sep 2009",
                    "shortLabel": "Q3 2009",
                    "startDate": "07/21/2009",
                    "endDate": "09/30/2009",
                    "totalCount": 1,
                    "detractorPercentile": 100,
                    "passivePercentile": 0,
                    "promoterPercentile": 0,
                    "npsScore": -100,
                    "positiveCount": 0,
                    "negativeCount": 1,
                    "neutralCount": 0
                    }
                ],
                "groupByType": "quarter",
                "dateDiff": 3526
            }



+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]


## NPS By Location [/v1/reports/nps/location/elst{?api_key,businessId}]
NPS By Location gives you the NPS score for each location and the count of promoters, passives, and detractors for the business.


### NPS By Location Report [POST]

+ Parameters
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (number, required) - Id of the Business.



+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + startDate: 04/01/2013 (string) - Start Date format MM/dd/YYYY.
        + endDate: 05/3/2015 (string) - End Date format MM/dd/YYYY.
        + reviewSites: 2,110,1,100 (array) - List of Souce Ids.
        + businessNumbers: 9489676910876,9434065498803 (array) - List of business numbers.

    + Body

            {
                "startDate":"10/08/2019",
                "endDate":"01/15/2020",
                "reviewSites":["2","110"],
                "businessNumbers": ["9489676910876", "9434065498803"]
            }


+ Response 200 (application/json)

    + Attributes
        + page: 0 (number) - Page number.
        + size: 333 (number) - Size.
        + totalPages: 12 (number) - Total pages.
        + totalCount: 190322 (number) - Total number of promoters, passives, and detractors.
        + avgNpsScore: 48.6 (number) - Average NPS score.
        + promoters: 63.1 (number) - Total number of promoters.
        + passives: 22.4 (number) - Total number of passives.
        + detractors: 14.5 (number) - Total number of detractors.
        + dataPoints (array) - Data points.
            + (object)
                + page: 0 (number) - Page number.
                + nodeId: 9 (number) - Node Id.
                + label: Jul 2009 - Sep 2009 (string) - Label.
                + shortLabel: Q3 2009 (string) - Short Label.
                + startDate: 07/21/2009 (string) - Start date.
                + endDate: 09/30/2009 (string) - End date.
                + totalCount: 1 (number) - Count.
                + detractorPercentile: 100 (number) - Detractor Percentile.
                + passivePercentile: 0 (number) - Passive Percentile.
                + npsScore: /-100 (number) - Average NPS Score.
                + positiveCount: 0 (number) - Positive Count.
                + negativeCount: 1 (number) - Negative Count.
                + neutralCount: 0 (number) - Neutral Count.
        + dateDiff: 324 (number) - Date difference.


    + Body

            {
                page": 0,
                "size": 333,
                "totalCount": 190322,
                "totalPages": 1,
                "avgNpsScore": "48.6",
                "promoters": "63.1",
                "passives": "22.4",
                "detractors": "14.5",
                "dataPoints": [
                {
                    "nodeId": null,
                    "label": "Jul 2009 - Sep 2009",
                    "shortLabel": "Q3 2009",
                    "startDate": "07/21/2009",
                    "endDate": "09/30/2009",
                    "totalCount": 1,
                    "detractorPercentile": 100,
                    "passivePercentile": 0,
                    "promoterPercentile": 0,
                    "npsScore": -100,
                    "positiveCount": 0,
                    "negativeCount": 1,
                    "neutralCount": 0
                    }
                ],
                "dateDiff": 3526
            }



+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]



## Review By Source [/v1/reports/count/reviewsite{?api_key,businessId}]
Review By Source  API groups the number of reviews and average ratings in an account according to the aggregation source.

### Review By Source Report [POST]


+ Parameters
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (number, required) - Id of the Business.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + sourceAliases: citysearch,google (array) - List of source aliases.
        + businessNumbers: 943967608,943476803 (array) - List of business number.
        + months: 12 (number) - Use to get results for last some months.

    + Body

            {
                "sourceAliases": ["citysearch ", "google"],
                "businessNumbers": ["943967608", "943476803"],
                "months": 12
            }


+ Response 200 (application/json)

    + Attributes (array)
        + (object)
            + count: 10 (number) - Number of reviews for the particular location.
            + milestone: Smile dental (string) - Name of the Location.
            + businessId: 943967608 (number) - Business number of the location.
            + reviewSites (array) - List of source Alias.
                + (object)
                    + sourceAlias: Citysearch (string) - Source alias.
                    + count: 5 (number) - Number of reviews in sources.


    + Body

            [{
                "count": 1132,
                "milestone": "Smile Dental",
                "businessId": "943967608",
                "reviewSites": [{
                    "sourceAlias": "Citysearch",
                    "count": 4
                },
                {
                    "sourceAlias": "GooglePlay",
                    "count": 1060
                },
                {
                    "sourceAlias": "bestcreditrepaircompany",
                    "count": 1
                 },
                 {
                    "sourceAlias": "Birdeye",
                    "count": 67
                 }
                ]
              }
            ]



+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]

## Visitor report [/v1/reports/count/visitors{?api_key,businessId}]
Visitor report groups the data according to source.

### Visitor report [POST]


+ Parameters
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (number, required) - Id of the Business.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + sourceAliases: citysearch,google (array) - List of source aliases.
        + businessNumbers: 943967608,943476803 (array) - List of business number.
        + months: 12 (number) - Use to get results for last some months.

    + Body

            {
                "sourceAliases": ["citysearch ", "google"],
                "businessNumbers": ["943967608", "943476803"],
                "months": 12
            }


+ Response 200 (application/json)

    + Attributes (array)
        + (object)
            + count: 315 (number) - Number of visitor for the particular locations.
            + milestone: Smile dental (string) - Name of the Location.
            + businessId: 943967608 (number) - Business number of the location.
            + visitors (array) - Visitor data.
                + (object)
                    + sourceAlias: Citysearch (string) - Source alias.
                    + count: 5 (number) - Number of visits at source side.


    + Body

            [{
                "count": 315,
                "milestone": "Smile Dental",
                "businessId": "943967608",
                "visitors": [
                    {
                        "sourceAlias": "Facebook",
                        "count": 0
                    },
                    {
                        "sourceAlias": "Google",
                        "count": 0
                    },
                    {
                        "sourceAlias": "Twitter",
                        "count": 0
                    },
                    {
                        "sourceAlias": "Review Site",
                        "count": 289
                    },
                    {
                        "sourceAlias": "Website",
                        "count": 26
                    },
                    {
                        "sourceAlias": "Total",
                        "count": 315
                    }
                ]

            }]



+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]





## Usage report [/v1/reports/usage{?api_key,reportType,sindex,count,business_id}]
Usage report gives the usage details for the review requests, and the number of requests sent, opened and clicked.


### Usage report [POST]

+ Parameters
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + business_id: 12345678 (number, required) - Id of the Business.
    + reportType: rating (string, required) - The type of Report - Summary or Tabular.
    + sindex: 0 (number, required) - The starting index of the reviews
    + count: 100 (string, required) - The number of reviews to query


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + startDate: 04/01/2013 (string) - Start date.
        + endDate: 05/3/2015 (string) -  End date.
        + reviewSites: 1,2,110,41 (array) - List of review sites.
        + ratings: 1,2,3,4,5,0 (array) - List of ratings.
        + days: 7 (number) - Use to get results for last some days.
        + groupByDays: 1 (number) - Group by days.
        + reviewSiteAllFlag: true (boolean) - Pass true if you want to get data from all sources.

    + Body

            {
                "startDate":"04/01/2013",
                "endDate":"05/3/2015",
                "reviewSites":["2","110","1","100","3","303","6","84","33","202","25","21","4","5","63"],
                "ratings":[1,2,3,4,5,0],
                "days":7
                "groupByDays":1,
                "reviewSiteAllFlag":true
            }


+ Response 200 (application/json)


    + Body

            [{
                "name": "Total",
                "alias1": "Total",
                "emailSentInfo": {
                    "total": 15990,
                    "percent": 0,
                    "reqCount": 15990,
                    "reqReminderCount": 37034,
                    "shareReqCount": 0,
                    "shareReqReminderCount": 0
                },
                "emailOpenInfo": {
                    "total": 10316,
                    "percent": 64.5,
                    "reqCount": 10316,
                    "reqReminderCount": 0,
                    "shareReqCount": 0,
                    "shareReqReminderCount": 0
                },
                "emailClickInfo": {
                    "total": 1370,
                    "percent": 8.6,
                    "rcmdCount": [
                        {
                            "name": "Google",
                            "count": 683,
                            "percent": 49.9,
                            "sourceId": 2
                        },
                        {
                            "name": "Facebook",
                            "count": 263,
                            "percent": 19.2,
                            "sourceId": 110
                        },
                        {
                            "name": "Birdeye",
                            "count": 4,
                            "percent": 0.3,
                            "sourceId": 100
                        }
                    ],
                    "nonRcmdCount": [
                        {
                            "name": "Birdeye",
                            "count": 420,
                            "percent": 30.7,
                            "sourceId": 100
                        }]
                    },
                    "rcmdReviewsCount": [
                    {
                        "sourceId": 2,
                        "sourceName": "Google",
                        "sourceAlias": "Google",
                        "avgRating": null,
                        "reviewCount": 1297
                    },
                    {
                        "sourceId": 110,
                        "sourceName": "Facebook",
                        "sourceAlias": "Facebook",
                        "avgRating": null,
                        "reviewCount": 517
                    },
                    {
                        "sourceId": 100,
                        "sourceName": "Birdeye",
                        "sourceAlias": "birdeye",
                        "avgRating": null,
                        "reviewCount": 176
                    },
                    {
                        "sourceId": 1,
                        "sourceName": "Yelp",
                        "sourceAlias": "Yelp",
                        "avgRating": null,
                        "reviewCount": 171
                    },
                    {
                        "sourceId": 25,
                        "sourceName": "The Knot",
                        "sourceAlias": "The Knot",
                        "avgRating": null,
                        "reviewCount": 6
                    },
                    {
                        "sourceId": 21,
                        "sourceName": "Wedding Wire",
                        "sourceAlias": "Wedding Wire",
                        "avgRating": null,
                        "reviewCount": 1
                    }
                    ],
                    "nonRcmdReviewsCount": [
                    {
                        "sourceId": 100,
                        "sourceName": "Birdeye",
                        "sourceAlias": "birdeye",
                        "avgRating": null,
                        "reviewCount": 516
                    }
                    ],
                    "smsSentInfo": {
                        "total": 39980,
                        "percent": 0,
                        "reqCount": 39980,
                        "reqReminderCount": 0,
                        "shareReqCount": 0,
                        "shareReqReminderCount": 0
                    },
                    "smsOpenInfo": {
                        "total": 2340,
                        "percent": 5.9,
                        "reqCount": 2340,
                        "reqReminderCount": 0,
                        "shareReqCount": 0,
                        "shareReqReminderCount": 0
                    },
                    "smsClickInfo": {
                        "total": 1558,
                        "percent": 3.9,
                        "rcmdCount": [
                        {
                            "name": "Google",
                            "count": 850,
                            "percent": 54.6,
                            "sourceId": 2
                        },
                        {
                            "name": "Facebook",
                            "count": 425,
                            "percent": 27.3,
                            "sourceId": 110
                        },
                        {
                            "name": "Birdeye",
                            "count": 2,
                            "percent": 0.1,
                            "sourceId": 100
                        }
                        ],
                        "nonRcmdCount": [
                            {
                                "name": "Birdeye",
                                "count": 281,
                                "percent": 18,
                                "sourceId": 100
                            }
                            ]
                        },
                        "totalReviewsCount": 2684
                    }
                ]


+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 401

    [1161][]

+ Response 429

    [89][]




# Group Survey
Engage each customer at the right time with NPS or CSAT surveys to improve your service.

## Get [/v1/survey/{survey_id}{?api_key,businessId,lang}]
Get Survey fetches the survey designer page details for a particular survey. It provides all the questions which are available in the requested survey ID.

### Get Survey [GET]

+ Parameters
    + survey_id: 123 (integer, required) - Id of the Survey.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (number, required) - Id of the Business.
    + lang: english (string, optional) - The survey locale, default is english



+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

    + Body

              {
                  "surveyId": 535,
                  "logoUrl": "https://d2xt3xymj142xp.cloudfront.net/145301531829695/logo%2F57db1409813c70.82884191.png",
                  "name": "JetBlue Customer Satisfaction Survey",
                  "status": "new",
                  "created": 1484941995000,
                  "lastModified": 1484941995000,
                  "responses": 0,
                  "questionCount": 4,
                  "pages": [
                      {
                          "name": "Introduction",
                          "id": 2316,
                          "order": 0,
                          "showQuestionNumbers": 1,
                          "visible": false,
                          "questions": [
                              {
                                  "title": "Thank you for traveling with JetBlue Airways! We’d love to hear about your recent trip with us.  Your feedback will help us improve the way we serve you",
                                  "name": "Question name",
                                  "showQuestionNumbers": 1,
                                  "id": 10315,
                                  "skipQuestion": false,
                                  "displayQuestion": false,
                                  "minimumValue": 0,
                                  "maximumValue": 0,
                                  "order": 0,
                                  "visible": true,
                                  "isRequired": true,
                                  "type": "label",
                                  "reactElementId": 493,
                                  "value": [],
                                  "choices": [],
                                  "rows": [],
                                  "skipLogic": [],
                                  "displayLogic": []
                              },
                              {
                                  "title": "How was your trip today",
                                  "name": "Question name",
                                  "showQuestionNumbers": 1,
                                  "id": 10314,
                                  "skipQuestion": false,
                                  "displayQuestion": false,
                                  "minimumValue": 0,
                                  "maximumValue": 0,
                                  "order": 1,
                                  "visible": true,
                                  "isRequired": true,
                                  "type": "radio",
                                  "reactElementId": 840,
                                  "value": [],
                                  "choices": [
                                      {
                                          "id": 22854,
                                          "title": "Satified",
                                          "order": 0
                                      },
                                      {
                                          "id": 22856,
                                          "title": "Needs Improvement",
                                          "order": 1
                                      },
                                      {
                                          "id": 22855,
                                          "title": "Dissatiffied",
                                          "order": 2
                                      }
                                  ],
                                  "rows": [],
                                  "skipLogic": [],
                                  "displayLogic": []
                              },
                              {
                                  "title": "Please rate us based on your experience",
                                  "name": "Question name",
                                  "showQuestionNumbers": 1,
                                  "id": 10316,
                                  "skipQuestion": false,
                                  "displayQuestion": false,
                                  "maximumRateDescription": "Excellent",
                                  "minimumRateDescription": "Poor",
                                  "minimumValue": 1,
                                  "maximumValue": 10,
                                  "order": 2,
                                  "visible": true,
                                  "isRequired": true,
                                  "type": "rating",
                                  "reactElementId": 101,
                                  "value": [],
                                  "choices": [],
                                  "rows": [],
                                  "skipLogic": [],
                                  "displayLogic": []
                              },
                              {
                                  "title": "Thanks for your feedback! Please let us know how we can serve you better",
                                  "name": "Question name",
                                  "showQuestionNumbers": 1,
                                  "id": 10317,
                                  "skipQuestion": false,
                                  "displayQuestion": false,
                                  "minimumValue": 0,
                                  "maximumValue": 0,
                                  "order": 3,
                                  "visible": true,
                                  "isRequired": true,
                                  "type": "textarea",
                                  "reactElementId": 813,
                                  "value": [],
                                  "choices": [],
                                  "rows": [],
                                  "skipLogic": [],
                                  "displayLogic": []
                              }
                          ]
                      }
                  ],
                  "supportedLocales": [],
                  "buttonTexts": [
                      {
                          "id": 2096,
                          "locale": "en",
                          "textKey": "Start",
                          "localeText": "Start"
                      },
                      {
                          "id": 2097,
                          "locale": "en",
                          "textKey": "Cancel",
                          "localeText": "Cancel"
                      },
                      {
                          "id": 2098,
                          "locale": "en",
                          "textKey": "Back",
                          "localeText": "Back"
                      },
                      {
                          "id": 2099,
                          "locale": "en",
                          "textKey": "Next",
                          "localeText": "Next"
                      },
                      {
                          "id": 2100,
                          "locale": "en",
                          "textKey": "Done",
                          "localeText": "Done"
                      },
                      {
                          "id": 2101,
                          "locale": "en",
                          "textKey": "Finish",
                          "localeText": "Finish"
                      },
                      {
                          "id": 2102,
                          "locale": "en",
                          "textKey": "Submit",
                          "localeText": "Submit"
                      },
                      {
                          "id": 2103,
                          "locale": "en",
                          "textKey": "notNow",
                          "localeText": "Not Now"
                      }
                  ],
                  "businessId": 145301531829695
              }

+ Response 400

    [1315][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 400

    [1161][]

+ Response 429

    [89][]



## Submit [/v1/survey/{survey_id}/submit{?api_key,businessId}]
Post a survey response API submits the survey response for a particular survey using JSON structure.


### Post a survey response [POST]

+ Parameters
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + survey_id: 123 (integer, required) - Id of the Survey.
    + businessId: 12345678 (string, required) - Id of the Business.



+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

            {
                "surveyId": 535,
                "logoUrl": "https://d2xt3xymj142xp.cloudfront.net/145301531829695/logo%2F57db1409813c70.82884191.png",
                "name": "JetBlue Customer Satisfaction Survey",
                "status": "new",
              "created": 1484941995000,
              "lastModified": 1484941995000,
              "responses": 0,
              "questionCount": 4,
              "pages": [
                  {
                      "name": "Introduction",
                      "id": 2316,
                      "order": 0,
                      "showQuestionNumbers": 1,
                      "visible": false,
                      "questions": [
                          {
                              "title": "Thank you for traveling with JetBlue Airways! We’d love to hear about your recent trip with us.  Your feedback will help us improve the way we serve you",
                              "name": "Question name",
                              "showQuestionNumbers": 1,
                              "id": 10315,
                              "skipQuestion": false,
                              "displayQuestion": false,
                              "minimumValue": 0,
                              "maximumValue": 0,
                              "order": 0,
                              "visible": true,
                              "isRequired": true,
                              "type": "label",
                              "reactElementId": 493,
                              "value": [],
                              "choices": [],
                              "rows": [],
                              "skipLogic": [],
                              "displayLogic": []
                          },
                          {
                              "title": "How was your trip today",
                              "name": "Question name",
                              "showQuestionNumbers": 1,
                              "id": 10314,
                              "skipQuestion": false,
                              "displayQuestion": false,
                              "minimumValue": 0,
                              "maximumValue": 0,
                              "order": 1,
                              "visible": true,
                              "isRequired": true,
                              "type": "radio",
                              "reactElementId": 840,
                              "value": [
                                  "22856"
                              ],
                              "choices": [
                                  {
                                      "id": 22854,
                                      "title": "Satified",
                                      "order": 0
                                  },
                                  {
                                      "id": 22856,
                                      "title": "Needs Improvement",
                                      "order": 1
                                  },
                                  {
                                      "id": 22855,
                                      "title": "Dissatiffied",
                                      "order": 2
                                  }
                              ],
                              "rows": [],
                              "skipLogic": [],
                              "displayLogic": []
                          },
                          {
                              "title": "Please rate us based on your experience",
                              "name": "Question name",
                              "showQuestionNumbers": 1,
                              "id": 10316,
                              "skipQuestion": false,
                              "displayQuestion": false,
                              "maximumRateDescription": "Excellent",
                              "minimumRateDescription": "Poor",
                              "minimumValue": 1,
                              "maximumValue": 10,
                              "order": 2,
                              "visible": true,
                              "isRequired": true,
                              "type": "rating",
                              "reactElementId": 101,
                              "value": [
                                  "9"
                              ],
                              "choices": [],
                              "rows": [],
                              "skipLogic": [],
                              "displayLogic": []
                          },
                          {
                              "title": "Thanks for your feedback! Please let us know how we can serve you better",
                              "name": "Question name",
                              "showQuestionNumbers": 1,
                              "id": 10317,
                              "skipQuestion": false,
                              "displayQuestion": false,
                              "minimumValue": 0,
                              "maximumValue": 0,
                              "order": 3,
                              "visible": true,
                              "isRequired": true,
                              "type": "textarea",
                              "reactElementId": 813,
                              "value": [
                                  "I'm happy with the service! Wi-Fi can be better"
                              ],
                              "choices": [],
                              "rows": [],
                              "skipLogic": [],
                              "displayLogic": []
                          }
                      ]
                  }
              ],
              "businessId": 145301531829695,
              "isComplete":1
            }

+ Response 200

+ Response 400

  [1315][]

+ Response 401

  [1161][]

+ Response 429

  [89][]

+ Response 401

  [1167][]

+ Response 404

  [1011][]



## List Responses [/v1/survey/ext/list/responses/{survey_id}{?api_key,businessNumber,page,size,sortby,sorder}]
List Responses for a Survey API fetches all the responses available for a particular survey ID.


### List Responses for a Survey [POST]

+ Parameters
    + survey_id: 123 (integer, required) - Id of the Survey.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessNumber: 1232131 (string, required) - The Business Number of Enterprise
    + page: 0 (integer, optional) - The page number, starts with 0.
    + size: 30 (integer, optional) - The size of the page.
    + sortby: date (string, optional) - The sort by parameter.
    + sorder: asc (string, optional) - The sort order parameter.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + startDate: "07/02/2018 06:30:00" (string, optional) - Start date.
        + endDate: "07/03/2018 06:45:00" (string, optional) - End date.

    + Body

            {
                "startDate" : "07/02/2018 06:30:00",
                "endDate" : "07/03/2018 06:45:00"
            }




+ Response 200

    + Body

            {
               "responseList":[
                  {
                     "responseId":12345,
                     "requestDate":"07/11/2018",
                     "responseDate":"07/11/2018",
                     "completed":true,
                     "questionCount":10,
                     "locale":"en",
                     "surveyId":1000,
                     "surveyName":"Test Edit Test Edit 2(2)",
                     "locationName":"BMW",
                     "customerId":123456,
                     "customerName":"Anonymous",
                     "ticketed":false,
                     "answers":[
                        {
                           "questionTitle":"We are interested in receiving your feedback. \nabout the care provided at our facility. \n\nPlease take a few minutes to rate your satisfaction with each of the following\n\nPlease describe ur properties.",
                           "questionType":"label",
                           "visible":true,
                           "conditional":false,
                           "shownToCustomer":true,
                           "hidden":false,
                           "maxValue":0,
                           "minValue":0,
                           "showTime":true,
                           "showDate":true
                        },
                        {
                           "questionTitle":"Single CHoice",
                           "questionType":"radio",
                           "visible":true,
                           "conditional":false,
                           "shownToCustomer":true,
                           "hidden":false,
                           "maxValue":0,
                           "minValue":0,
                           "showTime":true,
                           "showDate":true,
                           "answer":"A"
                        },
                        {
                           "questionTitle":"Multiple choice q",
                           "questionType":"checkbox",
                           "visible":true,
                           "conditional":false,
                           "shownToCustomer":true,
                           "hidden":false,
                           "maxValue":0,
                           "minValue":0,
                           "showTime":true,
                           "showDate":true,
                           "answer":"A"
                        },
                        {
                           "questionTitle":"Multiple Text Entry edited",
                           "questionType":"textarea",
                           "visible":true,
                           "conditional":false,
                           "shownToCustomer":true,
                           "hidden":false,
                           "maxValue":0,
                           "minValue":0,
                           "showTime":true,
                           "showDate":true,
                           "answer":"qwsad"
                        },
                        {
                           "questionTitle":"Single TExt Entry edited",
                           "questionType":"text",
                           "visible":true,
                           "conditional":false,
                           "shownToCustomer":true,
                           "hidden":false,
                           "maxValue":0,
                           "minValue":0,
                           "showTime":true,
                           "showDate":true,
                           "answer":"fasdf"
                        },
                        {
                           "questionTitle":"Drop Down edited",
                           "questionType":"dropdown",
                           "visible":true,
                           "conditional":false,
                           "shownToCustomer":true,
                           "hidden":false,
                           "maxValue":0,
                           "minValue":0,
                           "showTime":true,
                           "showDate":true,
                           "answer":"Select1"
                        },
                        {
                           "questionTitle":"Please rate us based on your experience Rating Question edited",
                           "questionType":"rating",
                           "visible":true,
                           "conditional":true,
                           "shownToCustomer":true,
                           "hidden":false,
                           "maxValue":10,
                           "minValue":1,
                           "showTime":true,
                           "showDate":true,
                           "answer":"6"
                        },
                        {
                           "questionTitle":"Please rate us for the below mentioned services Matrix Drop Down edited",
                           "questionType":"matrixdropdown",
                           "visible":true,
                           "conditional":false,
                           "shownToCustomer":true,
                           "hidden":false,
                           "maxValue":0,
                           "minValue":0,
                           "showTime":true,
                           "showDate":true,
                           "childAnswers":[
                              {
                                 "questionTitle":"Click to write statement 1",
                                 "questionType":"dropdown",
                                 "visible":true,
                                 "conditional":false,
                                 "shownToCustomer":true,
                                 "hidden":false,
                                 "maxValue":0,
                                 "minValue":0,
                                 "showTime":true,
                                 "showDate":true,
                                 "answer":"Choice 1"
                              },
                              {
                                 "questionTitle":"Click to write statement 2",
                                 "questionType":"dropdown",
                                 "visible":true,
                                 "conditional":false,
                                 "shownToCustomer":true,
                                 "hidden":false,
                                 "maxValue":0,
                                 "minValue":0,
                                 "showTime":true,
                                 "showDate":true,
                                 "answer":"Choice 1"
                              },
                              {
                                 "questionTitle":"Click to write statement 3",
                                 "questionType":"dropdown",
                                 "visible":true,
                                 "conditional":false,
                                 "shownToCustomer":true,
                                 "hidden":false,
                                 "maxValue":0,
                                 "minValue":0,
                                 "showTime":true,
                                 "showDate":true,
                                 "answer":"Choice 1"
                              },
                              {
                                 "questionTitle":"Click to write statement 4",
                                 "questionType":"dropdown",
                                 "visible":true,
                                 "conditional":false,
                                 "shownToCustomer":true,
                                 "hidden":false,
                                 "maxValue":0,
                                 "minValue":0,
                                 "showTime":true,
                                 "showDate":true,
                                 "answer":"Choice 2"
                              },
                              {
                                 "questionTitle":"Click to write statement 5",
                                 "questionType":"dropdown",
                                 "visible":true,
                                 "conditional":false,
                                 "shownToCustomer":true,
                                 "hidden":false,
                                 "maxValue":0,
                                 "minValue":0,
                                 "showTime":true,
                                 "showDate":true,
                                 "answer":"Choice 2"
                              },
                              {
                                 "questionTitle":"Click to write statement",
                                 "questionType":"dropdown",
                                 "visible":true,
                                 "conditional":false,
                                 "shownToCustomer":true,
                                 "hidden":false,
                                 "maxValue":0,
                                 "minValue":0,
                                 "showTime":true,
                                 "showDate":true,
                                 "answer":"Choice 2"
                              }
                           ]
                        },
                        {
                           "questionTitle":"How likely are you to recommend us to your family and friends NPS edited?",
                           "questionType":"nps",
                           "visible":true,
                           "conditional":false,
                           "shownToCustomer":true,
                           "hidden":false,
                           "maxValue":10,
                           "minValue":0,
                           "showTime":true,
                           "showDate":true,
                           "answer":"7"
                        },
                        {
                           "questionTitle":"Matrix Radio Choice editedf",
                           "questionType":"matrixradio",
                           "visible":true,
                           "conditional":false,
                           "shownToCustomer":true,
                           "hidden":false,
                           "maxValue":0,
                           "minValue":0,
                           "showTime":true,
                           "showDate":true,
                           "childAnswers":[
                              {
                                 "questionTitle":"Click to write statement A",
                                 "questionType":"radio",
                                 "visible":true,
                                 "conditional":false,
                                 "shownToCustomer":true,
                                 "hidden":false,
                                 "maxValue":0,
                                 "minValue":0,
                                 "showTime":true,
                                 "showDate":true,
                                 "answer":"Choice D"
                              }
                           ]
                        }
                     ],
                     "overallScore": "9.0",
                     "customParam":  {
                          "order Date": "2024-03-21 06:14:00",
                          "orderId": "52"
                     },
                     "extraParams": {
                         "facilityId": "38861",
                         "Integration Trigger": "Updated Rentals",
                         "Current balance due": "0.0000",
                         "Move In date": "12-19-2023"
                     } 
                  }
               ],
               "totalResponses":2,
               "pageNo":0,
               "pageSize":1,
               "hasNext":true
            }

+ Response 400

  [1315][]

+ Response 401

  [1161][]

+ Response 429

  [89][]

+ Response 401

  [1167][]

+ Response 404

  [1011][]



## Get All [/v1/survey/business/{business_id}/all{?api_key,sortby,sorder,searchStr}]
Get All Surveys fetches the list of all available surveys on the business.

### Get All Surveys [GET]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + sortby: modified (string, optional) - Sort results by lastModified[modified], Created[created], Response Count[response].
    + sorder: 0 (string, optional) - Sort order ascending (0) and descending (1).
    + searchStr: abc (string, optional) - Search survey by name or business location.
    + business_id: 12345678 (string, required) - Business ID.


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

    + Attributes (array)
        + (object)
            + surveyId: 1234 (number) - Survey Id.
            + name: JetBlue Customer Satisfaction Survey (string) - Survey Name.
            + status: new (string) - Survey status.
            + created: 1458844108000 (number) - Survey created date in epoc.
            + lastModified: 1482174350000 (number) - Survey last modified date in epoc
            + responses: 97 (number) - Number of survey responses.
            + questionCount: 13 (number) - Number of questions.


    + Body

            [{
                "surveyId": 9,
                "name": "JetBlue Customer Satisfaction Survey",
                "status": "new",
                "created": 1458844108000,
                "lastModified": 1482174350000,
                "responses": 97,
                "questionCount": 13
            },
            {
                "surveyId": 10,
                "name": "JetBlue Membership Survey",
                "status": "active",
                "created": 1481554022000,
                "lastModified": 1484867564000,
                "responses": 20,
                "questionCount": 18
            }
            ]



+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 400

    [1161][]

+ Response 429

    [89][]




## Create Survey [/v1/survey/external/create/{businessId}{?api_key}]
Create Survey API helps create a new survey for the required question structure and further displays it on the survey list page.

<b>Please go through <a href="https://bit.ly/3km4oJi">this document</a> for a detailed explanation of request body fields </b>

### Create Survey [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (string, required) -Id of the Business.



+ Request (application/json)

    + Headers

            Accept: application/json


    + Body

            {
                "surveyName": "Experience Survey",
                "thankYouMessage": "Thank you for taking the survey!",
                "surveyType": "traditional",
                "ownerEmailId": "testmail@gmail.com",
                "pages": [
                    {
                        "questions": [
                            {
                                "title": "Text1",
                                "type": "text"
                            },
                            {
                                "title": "Paragraph",
                                "type": "textarea"
                            }
                        ]
                    },
                    {
                        "title": "Page 2-optional",
                        "questions": [
                            {
                                "title": "Questionnumber1",
                                "type": "checkbox",
                                "required": true,
                                "choices": [
                                    "Choice 1",
                                    "Choice 2",
                                    "Choice 3"
                                ]
                            },
                            {
                                "title": "Q2",
                                "type": "dropdown",
                                "choices": [
                                    "Dropdown 1",
                                    "Dropdown 2",
                                    "Dropdown 3"
                                ]
                            },
                            {
                                "title": "ratingQn",
                                "type": "rating",
                                "minLabel": "Strongly Disagree",
                                "maxLabel": "Strongly Agree",
                                "maxValue": 10
                            }
                        ]
                    },
                    {
                        "questions": [
                            {
                                "title": "P3-Q1-Radio",
                                "type": "radio",
                                "choices": [
                                    "radio 1",
                                    "radio 2",
                                    "radio 3"
                                ]
                            },
                            {
                                "title": "npsQn",
                                "type": "nps",
                                "minLabel": "Strongly Disagree"
                            }
                        ]
                    },
                    {
                        "questions": [
                            {
                                "title": "Datetime question",
                                "type": "datetime",
                                "required": true,
                                "showTime": true,
                                "showDate": true,
                                "interval": 60,
                                "minValue": "12",
                                "maxValue": "36"
                            },
                            {
                                "title": "Please enter your contact information",
                                "type": "contact",
                                "required": true,
                                "contactRows": [
                                    {
                                        "required": true,
                                        "title": "First name",
                                        "type": "text"
                                    },
                                    {
                                        "required": true,
                                        "title": "Email",
                                        "type": "email"
                                    },
                                    {
                                        "required": true,
                                        "title": "Phone",
                                        "type": "phone"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "title": "Page 4",
                        "questions": [
                            {
                                "title": "P4-Q1",
                                "type": "matrixrating",
                                "minLabel": "Strongly Disagree",
                                "maxLabel": "Strongly Agree",
                                "maxValue": 5,
                                "rows": [
                                    "Row label 1",
                                    "Row label 2"
                                ]
                            },
                            {
                                "title": "P4-Q2",
                                "type": "matrixradio",
                                "required": true,
                                "choices": [
                                    "c1",
                                    "c2",
                                    "c3"
                                ],
                                "rows": [
                                    "Row 1",
                                    "Row2"
                                ]
                            },
                            {
                                "title": "p4-Q3",
                                "type": "matrixdropdown",
                                "required": true,
                                "choices": [
                                    "c1",
                                    "c2",
                                    "c3"
                                ],
                                "rows": [
                                    "Row label 1",
                                    "Row label 2"
                                ]
                            },
                            {
                                "title": "Label type ques",
                                "type": "label"
                            }
                        ]
                    },
                    {
                        "questions": [
                            {
                                "title": "please review us on one of these sites",
                                "type": "review",
                                "required": true,
                                "contactUsMessage": "ContactUs test message",
                                "reviewSources": ["Google","Facebook","CitySearch"
                                ]
                            }
                        ]
                    }
                ]
            }

+ Response 200

    + Body

              {
                  "surveyId": 1234
              }


+ Response 401

    [1161][]

+ Response 401

    [1380][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 400

    [2044][]

+ Response 400

    [2093][]

+ Response 400

    [2045][]

+ Response 400

    [2046][]

+ Response 400

    [2047][]

+ Response 400

    [2048][]

+ Response 400

    [2049][]

+ Response 400

    [2050][]

+ Response 400

    [2051][]

+ Response 400

    [2052][]

+ Response 400

    [2053][]

+ Response 400

    [2054][]

+ Response 400

    [2055][]

+ Response 400

    [2056][]

+ Response 400

    [2057][]

+ Response 400

    [2058][]

+ Response 400

    [2059][]

+ Response 400

    [2060][]

+ Response 400

    [2061][]

+ Response 400

    [2062][]

+ Response 400

    [2063][]

+ Response 400

    [2064][]

+ Response 400

    [2065][]

+ Response 400

    [2066][]

+ Response 400

    [2067][]

+ Response 400

    [2068][]

+ Response 400

    [2069][]

+ Response 400

    [2070][]

+ Response 400

    [2071][]

+ Response 400

    [2072][]

+ Response 400

    [2073][]

+ Response 400

    [2074][]

+ Response 400

    [2092][]

+ Response 400

    [2076][]

+ Response 400

    [2077][]

+ Response 400

    [2091][]

+ Response 400

    [2079][]

+ Response 400

    [2080][]

+ Response 400

    [2081][]

+ Response 400

    [2082][]

+ Response 400

    [2083][]

+ Response 400

    [2084][]

+ Response 400

    [2085][]

+ Response 400

    [2086][]

+ Response 400

    [2087][]

+ Response 400

    [2088][]

+ Response 400

    [2094][]

+ Response 400

    [2095][]



## Update Settings [/v1/survey/{surveyId}/settings/update{?api_key,businessId}]
Update Survey Settings helps update the survey page appearance settings like Logo, Title, ProgessBar setting, Theme Colour, User Acess, and many more.


> __Note__
> - _In user-access request, if multiple entries are detected for a user, they will be assigned the highest role among all the different roles specified. If the entries are conflicting (e.g. delete + update), the API will return with exception_


### Update Survey Settings [POST]

+ Parameters

    + surveyId: 123 (integer, required) - Survey ID
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (string, required) - Id of the Business.



+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes

        + surveySettings (object) - Survey settings
            + showSurveyTitle: false (boolean) - Pass true if want to show survey title.
            + showQuestionNumber: false (boolean) - Pass true if want to show question number.
            + showProgressBar: false (boolean) - Pass true if want to show progress bar.
            + progressbarPosition: Bottom (string) - Position of progress bar.
            + showLogo: ON (string) - Pass ON if want to show logo.
            + showTitle: CUSTOM (string) - Show title.
            + customTitle: Welcome to Tennessee (string) - Custom title value.
            + themeColor: #1976d2 (string) - Theme color value.
            + themeTextColor: #ffffff (string) - Theme color text value.
            + subject: Thank you for taking the survey (string) - Subject of the survey email.
            + message: Thank you for taking the time to give your inputs on the survey (string) - Thank you message..
            + signature: Sincerely, BMW_Survey (string) - Signature.
            + enableThankyouEmail: false (boolean) - Pass true if want to enable Thank you email.
        + accessControl (object) - Access control data.
            + userAccessList (array)
                + (object)
                    + userEmail: abc@test.com (string) - Email of the user.
                    + role: viewer (string) - User role.
                    + delete: true (boolean) - Delete status of the user.
            + surveyAccess (object)
                + role: editor - User's survey access.

    + Body

            {
                "surveySettings": {
                    "showSurveyTitle": false,
                    "showQuestionNumber": false,
                    "showProgressBar": false,
                    "progressbarPosition": "Bottom",
                    "showLogo": "ON",
                    "showTitle": "CUSTOM",
                    "customTitle": "Welcome to Tennessee!",
                    "themeColor": "#1976d2",
                    "themeTextColor": "#ffffff",
                    "subject": "Thank you for taking the survey",
                    "message": "Hi , \nThank you for taking the time to give your inputs on the survey.",
                    "signature": "Sincerely, \nBMW_Survey \n",
                    "enableThankyouEmail": true
                },
                "accessControl": {
                "userAccessList": [
                  {
                    "userEmail": "abc@test.com",
                    "role": "viewer"
                  },
                  {
                    "userEmail": "def@test.com",
                    "delete" : true
                  }
                ],
              "surveyAccess": {
                        "role": "editor"
                    }
                }
            }

+ Response 200

    + Body

              {
                  "surveyId": 1234,
                  "suveySettingId" : 12345
              }


+ Response 401

    [1380][]

+ Response 404

    [1161][]

+ Response 401

    [89][]

+ Response 400

    [1011][]

+ Response 404

    [1175][]

+ Response 400

    [1315][]

+ Response 400

    [2037][]

+ Response 400

    [2042][]

+ Response 400

    [2040][]

+ Response 400

    [2090][]

+ Response 400

    [2043][]

+ Response 400

    [2039][]

+ Response 400

    [2038][]

+ Response 400

    [2041][]

+ Response 400

    [2096][]

# Group Business Media
Add, delete and manage business media.

> __Supported Media Size__
> - _Photo: JPG or PNG. 720 x 720px. 10KB min._
> - _Video: 30 sec long. 720p or more upto 75MB._

> __Note__
> - _Uploaded media will be pushed to your google business profile (if connected) and other long tail directories only._



## Add Media [/v1/business/{businessNumber}/upload/media]
API to upload the Business Media.


### Add Media [POST]

+ Parameters

    + businessNumber: 123456789 (string, required) - Location Number, in case of SMB it will be Business Number.


+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


    + Attributes
        + media (required, array) - List of media items to be uploaded.
            + (object)
                + url: https://images.pexels.com/photos/12128533/pexelsphoto12128533.jpeg (string, required) - Url of the media item.
                + mediaCategory: TEAMS (string, required) - Category for the media item. Possible values are:
                                        EXTERIOR (PHOTO, VIDEO)
                                        INTERIOR (PHOTO, VIDEO)
                                        TEAMS (PHOTO, VIDEO)
                                        ADDITIONAL (PHOTO, VIDEO)
                + description: Image of the team (string, required) - Description of the media.
                + mediaFormat: PHOTO (string, required) - Format of the Media. Possible values are:
                                                    PHOTO
                                                    VIDEO



    + Body

            {
                "media": [
                {
                    "url": "https://images.pexels.com/photos/12128533/pexels-photo-12128533.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2",
                    "mediaCategory": "TEAMS",
                    "description": "Image of the team",
                    "mediaFormat": "PHOTO"
                },
                {
                    "url": "https://videos.pexels.com/video/123123/pexelsvideo-12323.mp4",
                    "mediaCategory": "ADDITIONAL",
                    "description": "Introductory video",
                    "mediaFormat": "VIDEO"
                }
                ]
            }

+ Response 200


    + Attributes
        + media (required, array) - List of media items.
            + (object)
                + mediaId: 987654321123 (string) - Id of the media.
                + url: https://images.pexels.com/photos/12128533/pexelsphoto12128533.jpeg (string) - Url of the media item.
                + mediaCategory: TEAMS (string) - Category for the media item.
                + description: Image of the team (string) - Description of the media.
                + mediaFormat: PHOTO (string) - Format of the Media.


    + Body

            {
                "media": [
                {
                    "mediaId": "987654321123",
                    "url": "https://images.pexels.com/photos/12128533/pexels-photo-12128533.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2",
                    "mediaCategory": "TEAMS",
                    "description": "Image of the team",
                    "mediaFormat": "PHOTO"
                },
                {
                    "mediaId": "7654321123",
                    "url": "https://videos.pexels.com/video/123123/pexelsvideo-12323.mp4",
                    "mediaCategory": "ADDITIONAL",
                    "description": "Introductory video",
                    "mediaFormat": "VIDEO"
                }
                ]
            }


+ Response 401

    [1011][]

+ Response 401

    [1161][]

+ Response 401

    [1167][]

+ Response 429

    [89][]

+ Response 400

    [2174][]

+ Response 400

    [2180][]

+ Response 400

    [2181][]

+ Response 400

    [2171][]

+ Response 400

    [2175][]



## Get Media [/v1/business/{businessNumber}/media/get]
API to get the Business Media details.

### Get Media [GET]

+ Parameters

    + businessNumber: 123456789 (string, required) - Location Number, in case of SMB it will be Business Number.


+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


+ Response 200


    + Attributes
        + media (array) - List of media items of the business.
            + (object)
                + mediaId: 987654321123 (string) - Id of the media.
                + url: https://images.pexels.com/photos/12128533/pexelsphoto12128533.jpeg (string) - Url of the media item.
                + mediaCategory: TEAMS (string) - Category for the media item.
                + description: Image of the team (string) - Description of the media.
                + mediaFormat: PHOTO (string) - Format of the Media.


    + Body

            {
                "media": [
                {
                    "mediaId": "987654321123",
                    "url": "https://images.pexels.com/photos/12128533/pexels-photo-12128533.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2",
                    "mediaCategory": "TEAMS",
                    "description": "Image of the team",
                    "mediaFormat": "PHOTO"
                },
                {
                    "mediaId": "7654321122",
                    "url": "https://videos.pexels.com/video/123123/pexelsvideo-12323.mp4",
                    "mediaCategory": "ADDITIONAL",
                    "description": "Introductory video",
                    "mediaFormat": "VIDEO"
                }
                ]
            }


+ Response 401

    [1011][]

+ Response 401

    [1161][]

+ Response 401

    [1167][]

+ Response 429

    [89][]


## Update Media [/v1/business/{businessNumber}/update/media/{mediaId}]
API to update the Business Media.

### Update Media [PUT]

+ Parameters

    + businessNumber: 123456789 (string, required) - Location Number, in case of SMB it will be Business Number.
    + mediaId: 62185029212 (string, required) - Id of the media item.


+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


    + Attributes
        + mediaCategory: INTERIOR (string, required) - Category for the media item. Possible values are:
                                                                EXTERIOR
                                                                INTERIOR
                                                                TEAMS
                                                                ADDITIONAL



    + Body

            {
                "mediaCategory": "INTERIOR"
            }

+ Response 200


+ Response 401

    [1161][]

+ Response 401

    [1167][]

+ Response 429

    [89][]

+ Response 400

    [2174][]

+ Response 400

    [2270][]

+ Response 400

    [2176][]

+ Response 400

    [2177][]



## Delete Media [/v1/business/{businessNumber}/media/delete]
API to delete the Business Medias.

### Delete Media [DELETE]

+ Parameters

    + businessNumber: 123456789 (string, required) - Location Number, in case of SMB it will be Business Number.


+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


    + Attributes
        + mediaIds: 123456,654321 (array, required) - List of Media Ids to be deleted.


    + Body

            {
                "mediaIds": ["987654321123","7654321123"]
            }

+ Response 200


+ Response 401

    [1011][]

+ Response 401

    [1161][]

+ Response 401

    [1167][]

+ Response 429

    [89][]

+ Response 400

    [2177][]


# Group Social
Create and track Social posting for all channels.

## Schedule Social Post [/v1/social/{accountNumber}/schedule]
Schedule or immediately post content on  Social sites.

### Schedule Social Post [POST]

+ Parameters

    + accountNumber: 12345678 (number, required) - Id of the Account.

+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


    + Attributes
        + text: Check out the latest collection (string, required) - Input text that will be added in the post. Limits of characters across various Social Sites
                            Google Business Profile: 1500
                            Facebook: 5000
                            Instagram: 5000
                            LinkedIn: 3000
                            Twitter: 240
        + socialSite: GOOGLEMYBUSINESS (string, required) - Social Sites. Possible values are
                                            INSTAGRAM,
                                            FACEBOOK,
                                            GOOGLEMYBUSINESS,
                                            LINKEDIN,
                                            TWITTER
        + subBusinessNumbers: 123456780,123456781 (array) - List of Location Ids. Optional for SMB.
        + scheduleTimestamp: 1677759962528 (number) - Epoch time in milliseconds.
        + media (object) - Media details.
            + type: IMAGE (string) - Type of Media. IMAGE or VIDEO
            + mediaUrl: https://upload.wikimedia.org/wikipedia/commons/5/53/Google_Logo.png (string) - Media Link.
        + additionalMetaData (object) - Applicable only for GOOGLEMYBUSINESS, learn more link.
            + callToActionType: LEARN_MORE (string) - Type of data.
            + callToActionUrl: https://app.birdeye.com (string) - Link of the additional data.



    + Body

            {
                "text": "Check out the latest collection",
                "socialSite" : "GOOGLEMYBUSINESS" ,
                "subBusinessNumbers": [123456780,123456781],
                "scheduleTimestamp": 1677759962528,
                "media": [{
                    "type": "IMAGE",
                    "mediaUrl": "https://upload.wikimedia.org/wikipedia/commons/5/53/Google_Logo.png"
                },
                {
                    "type": "IMAGE",
                    "mediaUrl": "https://upload.wikimedia.org/wikipedia/commons/5/53/Google_Logo.png"
                }],
                "additionalMetaData": {
                "callToActionType":"LEARN_MORE",
                "callToActionUrl": "https://app.birdeye.com/"
                }
            }



+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]

+ Response 400

    [5556][]

+ Response 400

    [5557][]




## Track Social Post [/v1/social/{accountNumber}/post/track/{trackingId}]
Track the status of scheduled or published post.

### Track Social Post [GET]

+ Parameters

    + accountNumber: 12345678 (number, required) - Id of the Account.
    + trackingId: abcdefdhs (string, required) - Id to track the post status.

+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


+ Response 200 (application/json)

    + Attributes
        + trackingId: BvgqPRWtObg4jWTKG2wHBg (string) -  Track Id.
        + accountNumber: 124356718987 (string) -  Account Id.
        + socialSite: GOOGLEMYBUSINESS (string) - Social Sites. Possible values are
                                            INSTAGRAM,
                                            FACEBOOK,
                                            GOOGLEMYBUSINESS,
                                            LINKEDIN,
                                            TWITTER
        + subBusinessNumbers: 123456780,123456781 (array) - List of Location Ids. Optional for SMB.
        + socialPostDetails (array) - Post details.
            + (object)
                + locationName: Chalker and Peterson (string) - Name of the location.
                + locationNumber: 12345678909 (string) - Location Id.
                + status (object) - Post status details.
                    + status: POST_SUCCEEDED (string) - Post status. Possible values:
                                                                POST_SCHEDULED,
                                                                POST_SUCCEEDED,
                                                                POST_PROCESSING,
                                                                POST_FAILED,
                                                                REJECTED_BY_APPROVER
                    + failureReason: Your session has expired. Please log back into your Facebook account to continue. (string) - Failure reason if any.
                + publishedTimestamp: 43412413412 (number) - Published timestamp in milliseconds.
                + socialSitePostId: 847803613041846_899791936843015 (string) - Social site post id.
                + socialSitePostUrl: http://www.facebook.com/847803613041846_899791936843015 (string) - Social site post link.



    + Body

            {
                    "trackingId": "BvgqPRWtObg4jWTKG2wHBg",
                    "accountNumber": 124356718987,
                    "socialSite" : "FACEBOOK"
                    "subBusinessNumbers": [123456780,123456781],
                    "socialPostDetails": [
                    {
                        "locationName": "Chalker and Peterson",
                        "locationNumber": 12345678909 ,
                        "status":{
                            "status": POST_SCHEDULED
                        },
                        "publishedTimestamp":  1679888791000
                    },
                    {
                        "locationName": "Prince George, BC",
                        "locationNumber": 2234561212 ,
                        "status":{
                            "status": POST_FAILED,
                            "failureReason": "Your session has expired. Please log back into your Facebook account to continue."
                        },
                        "publishedTimestamp": 43412413412
                    },
                    {
                        "locationName": "New York, NY",
                        "locationNumber": 323456121 ,
                        "status":{
                            "status": POST_SUCCEEDED
                        },
                        "publishedTimestamp": 43412413412,
                        "socialSitePostId": 847803613041846_899791936843015
                        "socialSitePostUrl": "http://www.facebook.com/847803613041846_899791936843015"
                    }]
                }



+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]



# Group Employee


## Get [/v1/employee/{businessId}{?api_key}]
Get details of Employees is a lite version API that retrieves a sorted list of all active employees for an account.


### Get details of Employees [GET]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (string, required) - Id of the Business.



+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Attributes (array)
        + (object)
            + firstName: Ron (string) - First name of the employee.
            + lastName: Smith (string) - Last name of the employee.
            + emailId: ron@test.com (string) - Email Id of the employee.
            + phone: 1234567890 (string) - Phone number of the employee.
            + imageUrl: employees/574549fb79cff9.54677638.jpg (string) - Image URL of the employee.


    + Body

            [
                {
                    "firstName": "sachin",
                    "lastName": "birdeye",
                    "emailId": "sachin@birdeye.com",
                    "phone": "",
                    "imageUrl": ""
                },
                {
                    "firstName": "Kailash",
                    "lastName": "Yadav",
                    "emailId": "kailash12121@gmail.com",
                    "phone": "(989) 898-9898",
                    "imageUrl": "employees/574549fb79cff9.54677638.jpg"
                },
                {
                    "firstName": "Kailash",
                    "lastName": "Yadav",
                    "emailId": "1213@gmail.com",
                    "phone": "(989) 898-9898",
                    "imageUrl": "http://d2xt3xymj142xp.cloudfront.net/169830616/573db5844e0e66.08202399.png"
                }
            ]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]




# Group Conversation
Connect with customers across a range of digital channels from one unified inbox.


## List Conversations [/v1/messenger/export]
List Conversations retrieves conversations for a business.


### List Conversations [POST]


+ Request (application/json)

    + Attributes
        + businessNumber: 755009344 (number, required) - The business number for which the details to be fetched, it can be either enterprise or location business number.
        + apiKey: abcdefgh (string, required) -  Partner specific API key provided by Birdeye for data exchange.
        + startDate: 04/06/2020 (string) - Start fetching messages from this date in MM/DD/YYYY format.
        + endDate: 05/30/2020 (string) - Fetch messages till this date in MM/DD/YYYY format.
        + offset: 0 (number) - Message offset,the start index.
        + size: 100 (number) - Number of messages return in the response.
        + contact  (object) - Contact details
            + phone: 1234567890 (string) - Phone number of the contact.
            + email: tushar.garg@birdeye.com (string) - Email Id of the contact.
        + excludeCampaignMessages: 1 (number) - If passed with value 1, It will exclude campaign messages from API response.


    + Body

            {
                "businessNumber": "755009344",
                "apiKey": "abcdefgh",
                "startDate": "04/06/2020",
                "endDate": "05/30/2020",
                "offset": "0",
                "size": "100",
                "contact": {
                    "phone" : "(650)492-3456",
                    "email" : "abc@test.com"
                },
                "excludeCampaignMessages": 1
            }


+ Response 200 (application/json)

    + Attributes
        + totalConversations: 120 (number) - The number of total conversation objects that can be retrieved through pagination.
        + totalMessages: 1212 (string) -  The number of total message objects that can be retrieved through pagination.
        + conversations (array) - List of conversations.
            + (object)
                + id: 123 (string) - A unique ID generated by the Birdeye platform that identifies this conversation.
                + contact (object) - Contact details.
                    + id: 100 (number) - Contact id.
                    + name: Ron Smith (string) - Contact name.
                    + firstName: Ron (string) - Contact first name.
                    + lastName: Smith (string) - Contact last name.
                    + phone: 1234567890  (string) - Phone number of the contact.
                    + emailId: ron@test.com (string) - Email Id of the contact.
                    + createdDate: 2020-05-04 17:20:14 (string) - Contact creation date.
                    + updatedDate:  2021-05-04 17:20:14 (string) - Contact updation date.
                    + team: Blue (string) - Team name.
                    + locationId: 123445521 (string) - Location Id to which contact is attached.
                + messages (array) - List of messages.
                    + (object)
                        + sentAt: 1588612840000 (number) - Epoc time of the message.
                        + id: 1221  (number) - Message id.
                        + text: Great service (string) - Message text.
                        + attachments (object) - Attachment details.
                        + direction: SEND (string) - Message direction, SEND or RECEIVE.
                        + channel: LIVE_CHAT (string) - A unique identifier that is used to send or receive the message.for example: sms, email or Live_chat.
                + conversation_start_date: May 04, 2020 10:20 AM PDT (string) - The date conversation.
                + last_message_received_on: May 04, 2020 10:20 AM PDT (string) - The date on which the last message was recieved within the defined date range.
                + status: OPEN (string) - Status of the conversation, OPEN or CLOSE.
                + last_used_channel: SMS (string) - Last used channel.
                + assigned_to (object) - Assinee details.
                    + id: 100 (number) - Id of the user.
                    + name: Joe R (string) - Name of the Assignee.
                    + type: T (string) - Type of Assignee.
                    + emailId: joe@test.com (string) - Email id of Assignee.
        + hasMore: true (boolean) - Indicates if there are more conversations.



    + Body

            {
                "totalConversations": 1,
                "totalMessages": 2,
                "conversations": [
                    {
                        "id": 127490,
                        "contact": {
                            "id": 80768826,
                            "name": "S G",
                            "firstName": "S",
                            "lastName": "G",
                            "phone": "(650) 492-3456",
                            "emailId": null,
                            "createdDate": "2020-05-04 17:20:14",
                            "updatedDate": "2020-05-18 15:22:57",
                            "team": "Harshit",
                            "locationId": 155911960965004
                        },
                        "messages": [
                            {
                                "sentAt": 1588612840000,
                                "id": "124776",
                                "text": "hi",
                                "message_date": "May 04, 2020 10:20 AM PDT",
                                "attachments": null,
                                "direction": "SEND",
                                "channel": "SMS"
                            },
                            {
                                "sentAt": 1588612814000,
                                "id": "124775",
                                "text": "Hello",
                                "message_date": "May 04, 2020 10:20 AM PDT",
                                "attachments": null,
                                "direction": "RECEIVE",
                                "channel": "LIVE_CHAT"
                            }
                        ],
                        "conversation_start_date": "May 04, 2020 10:20 AM PDT",
                        "last_message_received_on": "May 04, 2020 10:20 AM PDT",
                        "status": "OPEN",
                        "last_used_channel": "SMS",
                        "assigned_to": {
                            "id": -100000,
                            "name": "",
                            "type": "T",
                            "emailId": null
                        }
                    }
                ],
                "hasMore": false
            }




+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]


+ Response 400

    [1246][]





# Group Webhook
Configure multiple webhooks with different URLs for a subscription and deliver real-time notifications.

## List webhook events [/v1/messenger/webhook/event]
List webhook events get events via webhook on multiple activities, whether the conversation is open, updated, closed, or a new message has been added.

### Get events [GET]



+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Attributes (array)
        + (object)
            + eventId: 1 (number) - Event Id.
            + eventName: conversation.created (string) -  Name of the created event. Possible values are
                conversation.created - A new conversation started,
                conversation.updated - A conversation has been updated with a new status or assigned/unassigned,
                message.added - A new message has been created. Triggered for both sent and received messages,
                and conversation.closed - Conversation is closed..




    + Body

            [
                {
                    "eventId": 1,
                    "eventName": "conversation.created"
                },
                {
                    "eventId": 2,
                    "eventName": "conversation.updated"
                },
                {
                    "eventId": 3,
                    "eventName": "message.added"
                },
                {
                    "eventId": 4,
                    "eventName": "conversation.closed"
                }
            ]



## Create webhook subscription [/v1/messenger/subscribe/webhook/event]
Create webhook subscription listens to webhook events on a specific passed URL.


### Create webhook subscription[POST]


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + businessNumber: 755009344 (number, required) - The business number for which events to be subscribed. Should always be the account business number not the location business number.
        + apiKey: abcdefgh (string, required) -  Partner specific API key provided by Birdeye for data exchange.
        + events: conversation.created, conversation.updated, message.added, message.closed (array, required) - A list of event name strings from the list of available events that should trigger this webhook. Possible values are
                conversation.created - A new conversation started,
                conversation.updated - A conversation has been updated with a new status or assigned/unassigned,
                message.added - A new message has been created. Triggered for both sent and received messages,
                and conversation.closed - Conversation is closed.
        + endpoint: https://webhook.site/0c27e14d-f833-4589-b201-86b41a651464 (string) - The webhook endpoint URL on your server on which webhook requests are to be sent.

    + Body

            {
                "businessNumber": "755009344",
                "apiKey": "92bcd6e0-c102-43fd-8a67-1a7be5258451",
                "events": [
                    "conversation.created",
                    "conversation.updated",
                    "message.added",
                    "message.closed"
                ],
                "endpoint": "https://webhook.site/0c27e14d-f833-4589-b201-86b41a651464"
            }

+ Response 200 (application/json)

    + Attributes
        + subscriptionId: 1 (number) - Event Id.
        + events: conversation.created, conversation.updated, message.added, message.closed (array, required) - A list of event names that should trigger this webhook.
        + businessId: 755009344 (number) - A unique ID generated by the Birdeye platform that identifies this business.


    + Body

            {
                "subscriptionId": 2,
                "businessId": 755009344,
                "events": [
                    "conversation.created",
                    "conversation.updated",
                    "message.added",
                    "conversation.closed"
                ]
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1011][]



# Group Competitor
Make competitive insights your unfair advantage.

## Competitor of Enterprise Business [/v1/business/{EnterpriseBusinessNumber}/child{?api_key,isCompetitor}]
Competitor of Enterprise Business retrieves list of all competitor businesses for an enterprise.


### Get Competitor Business [GET]


+ Parameters

    + EnterpriseBusinessNumber: 231123123 (string, required) - Enterprise Business id.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + isCompetitor: true (boolean, required) - True for get competitor business of Enterprise Business and False for get Child Business of Enterprise Business.



+ Request (application/json)

    + Headers

            Accept: application/json


+ Response 200 (application/json)

    + Attributes (array)
        + (object)
            + id: 768996864 (number) - Enterprise Competitor Business Number.
            + name: Environmental Pest Management (string) - Enterprise Competitor Business Name.
            + competitorId: 9876567 (number) - Enterprise Competitor Business ID.
            + alias: Environmental Pest Management - Westerville, OH (string) - Enterprise Competitor Business alias.

    + Body

            [ {
                "id": 768996864,
                "name": "Environmental Pest Management",
                "competitorId" : 2398456,
                "alias": "Environmental Pest Management - Westerville, OH"
            },
            {
                "id": 144670708364016,
                "name": "Sub-reseller",
                "competitorId" : 4598762,
                "alias": "Sub-reseller"
            },
            {
                "id": 144670708364322,
                "name": "Holiday Inn",
                "competitorId" : 9876567,
                "alias": "Holiday Inn"
            }
            ]


+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]




## Child Business of Competitor [/v1/business/{EnterpriseCompetitorBusinessId}/child{?api_key,isCompetitor}]
Get Competitor Child Business retrieves all child locations.


### Get Competitor Child Business [GET]


+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + isCompetitor: true (boolean, required) - True for get competitor business of Enterprise Business and False for get Child Business of Enterprise Business.

+ Request (application/json)

    + Headers

            Accept: application/json


+ Response 200 (application/json)

    + Attributes (array)
        + (object)
            + id: 986031488 (number) - Business ID
            + name: Central Ohio Endodontics (string) - Business Name
            + alias: Central Ohio Endodontics - Dublin, OH (number) - Business alias
            + address (object) - Business address
                + address1: 7405 Morro Rd (string) - Address of the business.
                + address2: Suite 102 (string) - Address of the business.
                + city: Atascadero (string) - City (Max 1000 character long).
                + state: CA (string) - State (2 character state code).
                + countryCode: US (string) - Country Code (2 character country code).
                + zip: 93422 (string) - Zip Code.
                + countryName: United States of America (string) - Country Name (2 character country code).
            + phone: 1234567890 (string) - Business phone.
            + type: Business (string) - Type of account. e.g. Reseller (when it is a sub-reseller), Enterprise-Location (location based enterprise), Enterprise-Product (product based enterprise), Business (SMB/Enterprise location), Product (Enterprise product).
            + status: active (string) - Business status
            + createdOn: Dec 04, 2013 (string) - Business singup date
            + compAccountId: 7876807 (number) - Competitor Location Ids.
            + childCount: 3 (number) - Child account count(applicable only for Reseller, Enterprise-Location, Enterprise-Product).


    + Body

            [{
                "id": 986031488,
                "name": "Central Ohio Endodontics",
                "alias": "Central Ohio Endodontics - Dublin, OH",
                "address": {
                  "address1": "5152 Blazer Memorial Pkwy",
                  "address2": "Ste 102",
                  "city": "Dublin",
                  "state": "OH",
                  "zip": "43017",
                  "countryCode": "US",
                  "countryName": "United States of America"
                },
                "phone": "(614) 896-2801",
                "type": "Business",
                "status": "active",
                "createdOn": "Dec 04, 2013",
                "compAccountId":7876807
            },
            {
                "id": 768996864,
                "name": "Environmental Pest Management",
                "alias": "Environmental Pest Management - Westerville, OH",
                "address": {
                    "address1": "200 Hoff Rd",
                    "address2": "Unit P",
                    "city": "Westerville",
                    "state": "OH",
                    "zip": "43082",
                    "countryCode": "US",
                    "countryName": "United States of America"
                },
                "phone": "(614) 771-8605",
                "type": "Business",
                "status": "active",
                "createdOn": "Dec 05, 2013",
                "compAccountId":4567893
            },
            {
                "id": 144670708364016,
                "name": "Sub-reseller",
                "alias": "Sub-reseller",
                "status": "active",
                "createdOn": "Nov 05, 2013",
                "type": "Reseller",
                "childCount": 1
            },
            {
                "id": 144670708364322,
                "name": "Holiday Inn",
                "alias": "Holiday Inn",
                "status": "active",
                "createdOn": "Nov 01, 2013",
                "type": "Enterprise-Location",
                "childCount": 2
            }
            ]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]


## Get Competitors [/v1/business/{businessId}/competitors{?api_key}]
Get Business Competitors retrieves competitor’s details for an enterprise.

### Get Business Competitors [GET]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 986031488 (string, required) - Account Business Number.


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Attributes (array)
        + (object)
            + enterpriseId: 986031488 (number) - Enterprise Business Number.
            + enterpriseName: Taj (string) - Enterprise Name.
            + businessCompetitors (array) - List of business competitors
                + (object)
                    + businessId: 986031488 (number) - Competitor Business Number.
                    + name: Texas (string) - Competitor Business Name.
                    + location (object) - Address details
                        + address1: 7405 Morro Rd (string) - Address of the business.
                        + address2: Suite 102 (string) - Address of the business.
                        + city: Atascadero (string) - City (Max 1000 character long).
                        + state: CA (string) - State (2 character state code).
                        + countryCode: US (string) - Country Code (2 character country code).
                        + zip: 93422 (string) - Zip Code.
                        + countryName: United States of America (string) - Country Name (2 character country code).
                        + lat (string) - Latitude.
                        + lng (string) - Longitude.





    + Body

            [
                {
                        "enterpriseId": 144679606934805,
                        "enterpriseName": "taj",
                        "businessCompetitors": [{
                                "businessId": 144681844334495,
                                "name": "texas",
                                "location":{
                                        "address1": "44/5",
                                        "address2": "II-street",
                                        "city": "San Jose",
                                        "state": "CA",
                                        "zip": "102634",
                                        "countryCode": "US",
                                        "countryName": null,
                                        "lat": null,
                                        "lng": null
                                }
                        }]
                },
                {
                        "enterpriseId": 144679577771476,
                        "enterpriseName": "pullman",
                        "businessCompetitors": [{
                                "businessId": 144974367274032,
                                "name": "paris",
                                "location":{
                                        "address1": "b/t 24th St",
                                        "address2": "Mission",
                                        "city": "San Francisco",
                                        "state": "CA",
                                        "zip": "90011",
                                        "countryCode": null,
                                        "countryName": null,
                                        "lat": null,
                                        "lng": null
                                }

                        }]
                }
            ]

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]


## Create Competitor Enterprise [/v1/signup/competitor/{businessNumber}{?api_key}]
Create New Competitor Enterprise creates a new competitor for an enterprise.


### Create New Competitor Enterprise [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessNumber: 986031488 (string, required) - Account Business Number.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + businessName: Location_compca (string) - Location competitor name.
        + userEmailId: ron@test.com (string) - Location user email.
        + countryCode: CA (string) - Location country code.
        + phone: 408-234-5272 (string) - Location phone number.
        + zip: 95035 (string) - Zip code.
        + competitorId: 100037693 (string) - Competitor Id.
        + type: Product (string) - Business type.


    + Body

            {
                "businessName": "Location_compca",
                "userEmailId": "ron@test.com",
                "countryCode": "CA",
                "phone": "408-234-5272",
                "zip": "95035",
                "competitorId": 100037693,
                "type": "Product"
            }


+ Response 200

    + Attributes
        + competitorId: 100037739 (number) - Enterprise Competitor Business ID.
        + templateid: 0 (number) - Template Id.
        + isAggregationRequired: 1 (number) - Is agrgegation required.
        + type: Enterprise-Location-Competitor (string) - Type.
        + businessNumber: 161295237142347 (number) - Enterprise Competitor Business Number.
        + businessAlreadyPresent: false (boolean) - Is Business Already Present.

    + Body

            {
                "competitorId": 100037739,
                "templateid": 0,
                "isAggregationRequired": 1,
                "type": "Enterprise-Location-Competitor",
                "businessNumber": 161295237142347,
                "businessAlreadyPresent": false
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]




## Create Child Business [/v1/signup/competitor/{businessId}{?api_key}]
Create New Child Business in Competitor Enterprise creates a new child business for a competitor enterprise.

### Create New Child Business in Competitor Enterprise [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 986031488 (string, required) - Account Business Number.


+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

    + Attributes
        + competitorId: 100037739 (number) - Enterprise Competitor Business ID.
        + templateid: 0 (number) - Template Id.
        + isAggregationRequired: 1 (number) - Is agrgegation required.
        + type: Enterprise-Location-Competitor (string) - Type.
        + businessNumber: 161295237142347 (number) - Enterprise Competitor Business Number.
        + businessAlreadyPresent: false (boolean) - Is Business Already Present.


    + Body

            {
                "competitorId": 100037701,
                "templateid": 0,
                "isAggregationRequired": 0,
                "type": "Product",
                "businessNumber": 161278371646396,
                "compAccountId": 1795,
                "businessAlreadyPresent": true
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]




## Add Aggregation Link [/v1/aggregation/competitor/{compAccountId}/{businessNumber}{?api_key}]
Add new Competitor Aggregation URL adds an aggregation URL for a competitor location.


### Add new Competitor Aggregation URL [POST]

+ Parameters

    + businessNumber: 12345678 (number, required) - Id of the business.
    + compAccountId : 234567 (number, required) - Competitor Account Id.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + sourceAlias: citysearch (string, required) - Source alias.
        + url: http://www.citysearch.com/biz/maria-da-vittorio-san-francisco (string, required) - Source url to be added.


    + Body

            {
                "sourceAlias" : "citysearch ",
                "url" : "http://www.citysearch.com/biz/maria-da-vittorio-san-francisco"
            }


+ Response 200 (application/json)

    + Attributes
        + id: 237030543 (number) - Id of the created Aggregation.
        + sourceAlias: citysearch (string) - Alias of the source.
        + sourceName: Citysearch (string) - Name of the source.
        + sourceUrl: http://www.citysearch.com/biz/maria-da-vittorio-san-francisco (string) - Url of the souce.
        + sourceId: 2 (number) - Id of the source.
        + compAccountId: 1765 (number) - Competitor account id.



     + Body

            {
                "id": 140179308,
                "sourceId": 2,
                "compAccountId": 1765,
                "sourceUrl": "https://www.google.com/maps/place/Rama+Sai+Medical+Store/@28.4390976,76.9596497,11z/data=!4m8!1m2!2m1!1sreviews+google!3m4!1s0x390d04b550d23f2d:0x7e948cb85612d0!8m2!3d28.61074!4d77.0798476",
                "sourceName": "Google",
                "thumbnailUrl": "source/icons/2.png",
                "backGroundColor": "#dd4b39",
                "textColor": "#ffffff",
                "userName": null,
                "password": null,
                "profileId": null,
                "reviewFormUrl": "https://www.google.com/maps/place/Rama+Sai+Medical+Store/@28.4390976,76.9596497,11z/data=!4m8!1m2!2m1!1sreviews+google!3m4!1s0x390d04b550d23f2d:0x7e948cb85612d0!8m2!3d28.61074!4d77.0798476",
                "aggregationStatus": 3,
                "sourceAlias": "google",
                "disabledAggregation": null,
                "disabledAggregationReason": null
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]

## Get Competitor Review [/v1/review/businessId/{CompetitorEnterpriseBusinessId}{?sindex,count,api_key,isCompetitor}]
Get Competitor Review returns the list of review(s) of competitors for an account.

### Get Competitor Reviews [POST]

+ Parameters

    + sindex: 10 (integer, required) - Start index of the reviews.
    + count: 30 (integer, required) - Number of reviews to query.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + isCompetitor: false (boolean, required) - True for Competitor Review.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + fromDate: 04/01/2013 (string) - Review date (start) in UTC format.
        + toDate: 04/01/2013 (string) - Review date (end) in UTC format.
        + updateFromDate: 04/01/2013 (string) - Review response date (start) in UTC format.
        + updateToDate: 04/01/2013 (string) - Review response date (end) in UTC format.
        + sources: google (string) - Aggregation source name Note: use "our_website" to filter reviews posted on Birdeye platform or use "direct_feedback" for direct feedback.
        + ratings: 4,5 (array) - Review rating Possible values 0,1,2,3,4,5.
        + searchStr: Great service (string) - String that is contained by review.
        + subBusinessIds: 123456789 ,987654321 (array) - BusinessIds under enterprise account.
        + statuses: published,parked (array) - Review status. Valid values are "published","parked","all". Default is "published" only.


    + Body

            {
                "fromDate":"04/01/2013",
                "toDate":"05/3/2015",
                "updateFromDate":"04/01/2013",
                "updateToDate":"05/3/2015",
                "sources":["google","citysearch"],
                "ratings":[1,2,3,4,5,0],
                "searchStr":"test string",
                "subBusinessIds":[145308764185002,145308769721320,145308702026610],
                "statuses":["published","parked"]
            }

+ Response 200 (application/json)

    + Attributes (array)
        + (object)
            + reviewId: 1858537291 (number) - Id of the review.
            + rating: 5.0 (number) - Overall rating for the review, in case of direct feedback and facebook recommendations it will be 0. For Facebook recommendations, value will be 1, Non recommended review will have value set as 0.
            + comments: Great service, excellent food (string) - User comment.
            + reviewer - Reviewer details
                + firstName: Ron (string) :
                + lastName: Spector (string) :
                + nickName: Ron Spector (string) :
                + thumbnailUrl: https://ddjkm7n7lx.cloudfront.net/reviewer/dc42f6d8b2b84dc0b688c43e616.jpeg (string) : Thumbn
            + sourceType: Direct Feedback (string) - Source of the review if it is an aggregated review.
            + reviewURL: https://www.facebook.com/Imp-Flow-17565744/reviews (string) - Review url
            + reviewDate: Jan 20, 2014 (string) - Review posted date.
            + response: Thanks you for the review (string) - Review response text.
            + responseDate: Jan 20, 2014 (string) - Response date.
            + enableReply: true (boolean) - Whether a review reply is supported via Birdeye API or not.
            + customerId: 123456 (number) - Customer's Id attributed with this review (if any).
            + extraParams (object) - Key value pair of custom field(s) associated with the customer attributed to the review (if any)

    + Body

            [{
                "reviewId": "3947127516862",
                "rating": 4,
                "comments": "Our water polo team stayed there for 4 nights while in for a tournament. It fit our needs perfectly. The rooms were squeaky clean and comfortable. The housekeeping staff was super efficient and k...",
                "title": null,
                "reviewer": {
                    "firstName": null,
                    "lastName": null,
                    "nickName": "Jen C.",
                    "thumbnailUrl": "http://d3cnqzq0ivprch.cloudfront.net/demo/css/images/default-profile.png",
                    "emailId": null,
                    "facebookId": null,
                    "city": "Ann Arbor",
                    "state": "MI"
                },
                "reviewUrl": "http://www.citysearch.com/not_recommended_reviews/Knzq0i-RsFqWRaNKNWOQbw",
                "sourceType": "citysearch",
                "reviewDate": "Aug 01, 2014",
                "response": null,
                "responseDate": null,
                "featured": 1,
                "businessId": "755009344",
                "uniqueReviewUrl":"https://birdeye.com/websiter-755009344/review/3947127516862",
                "businessName":"Websiter",
                "businessType":"Location"
            },
            {
                "reviewId": "3947077656849",
                "rating": 4,
                "comments": "Was scared when I saw that is was more if a motel the hotel, but for one night we would give it a try. The rooms were clean and the desk help was also good. It was a little noise but I fell aslee...",
                "title": null,
                "reviewer": {
                    "firstName": null,
                    "lastName": null,
                    "nickName": "Stella S.",
                    "thumbnailUrl": "http://d2xt3xymj142xp.cloudfront.net/reviewer/4b7339a2c966485ab58ceaf7ae49e91e.jpeg",
                    "emailId": null,
                    "facebookId": null,
                    "city": "Diamond Bar",
                    "state": "CA"
                },
                "reviewUrl": "http://www.citysearch.com/biz/holiday-inn-express-san-jose-central-city-san-jose?hrid=mJpfRj7QaZzxaaLFRfR48w&nb=1",
                "sourceType": "citysearch",
                "reviewDate": "Jul 31, 2014",
                "response": null,
                "responseDate": null,
                "featured": 0,
                "businessId": "755009344",
                "uniqueReviewUrl":"https://birdeye.com/websiter-755009344/review/3942327516353",
                "businessName":"Websiter",
                "businessType":"Location"
            }
            ]



+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 400

    [1163][]

+ Response 401

    [1164][]

+ Response 400

    [1167][]

+ Response 4010

    [1186][]

+ Response 400

    [1187][]

+ Response 400

    [1227][]

+ Response 400

    [1228][]




## Competitive Insight Category [/v1/competitors/competitive-insight/categories/{businessNumber}{?api_key}]
Get Score retrieves Insights category details for a competitor.

### Get Score [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessNumber: 986031488 (string, required) - Account Business Number.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + sourceType: review (string) - Type of source e.g. review [by default] or social.
        + sources: google,citysearch (array) - Aggregation sources.
        + timePeriodSelected: all (string) - For all time : all.
        + startDate: 11/02/2020 (string) - Date from which data has to be fetched[MM/DD/YYYY].
        + endDate: 01/06/2021 (string) - Date until which data has to be fetched[MM/DD/YYYY].
        + competitors (array) - List of competitors
            + (object)
                + competitorId: 530846 (number) -  Enterprise Competitor Ids [competitorId in Competitor of Enterprise Business API].
                + compAccountIds: 162426,162427 (array) - Locations Ids of competitor account [compAccountIds in Child Business of Competitor API].

    + Body

            {
                "sourceType": "review",
                "sources": ["google","citysearch"]
                "startDate":"11/02/2020",
                "endDate":"01/06/2021",
                "competitors": [
                    {
                        "competitorId": 530846,
                        "compAccountIds": [162426]
                    },
                    {
                        "competitorId": 535009,
                        "compAccountIds": [234589]
                    }
                ]
            }

+ Response 200

+ Attributes
        + cats (array) - Category details.
            + (object)
                + catId: 16643 (number) - Id of the category.
                + catName: ambience (string) - Name of Category.
                + catStats (array) - Category stats.
                    + (object)
                        + entId: 398331 (string) - Enterprise Id.
                        + entName: Social Stress (string) - Enterprise Name.
                        + competitor: false (boolean) -  true if enterprise is a competitor, else false.
                        + grade: A (string) - Grade according to category.
                        + colorCode: #32661d (string) - Color code.
                        + avgScr: 4.4 (number) -  Average Score.
                        + ct: 3146 (number) - Total count/score.
                + subCats (array) - Sub Category details.
                    + (object)
                        + catId: 16643 (number) - Id of the Sub category.
                        + catName: ambience (string) - Name of Sub Category.
                        + catStats (array) - Sub Category stats.
                            + (object)
                                + entId: 398331 (string) - Enterprise Id.
                                + entName: Social Stress (string) - Enterprise Name.
                                + competitor: false (boolean) -  true if enterprise is a competitor, else false.
                                + grade: A (string) - Grade according to Sub category.
                                + colorCode: #32661d (string) - Color code.
                                + avgScr: 4.4 (number) -  Average Score.
                                + ct: 3146 (number) - Total count/score.



    + Body

            {
              "cats": [
                {
                  "catId": 16643,
                  "catName": "ambience",
                  "catStats": [
                    {
                      "entId": 398331,
                      "entName": "Social Stress",
                      "competitor": false,
                      "grade": "A",
                      "colorCode": "#32661d",
                      "avgScr": 4.4,
                      "ct": 3146
                    }
                  ],
                  "subCats": [
                    {
                      "catId": 16644,
                      "catName": "xyx",
                      "catStats": [
                        {
                          "entId": 398331,
                          "entName": "Social Stress",
                          "competitor": false,
                          "grade": "A",
                          "colorCode": "#32661d",
                          "avgScr": 4.1,
                          "ct": 1173
                        }
                      ]
                    }
                  ]
                },
                {
                  "catId": 15299,
                  "catName": "test1",
                  "catStats": [
                    {
                      "entId": 398331,
                      "entName": "Social Stress",
                      "competitor": false,
                      "grade": "B+",
                      "colorCode": "#a0cfa2",
                      "avgScr": 3.7,
                      "ct": 2249
                    }
                  ]
                }
              ]
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]



## Competitive Insight Themes [/v1/competitors/competitive-insight/themes/{businessNumber}{?api_key}]
Get Theme Statistics retrieves Insights topic details for a competitor.

### Get Theme Statistics [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessNumber: 986031488 (string, required) - Account Business Number.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + sourceType: review (string) - Type of source e.g. review [by default] or social.
        + sources: google,citysearch (array) - Aggregation sources.
        + timePeriodSelected: all (string) - For all time : all.
        + startDate: 11/02/2020 (string) - Date from which data has to be fetched[MM/DD/YYYY].
        + endDate: 01/06/2021 (string) - Date until which data has to be fetched[MM/DD/YYYY].
        + competitors (array) - List of competitors
            + (object)
                + competitorId: 530846 (number) -  Enterprise Competitor Ids [competitorId in Competitor of Enterprise Business API].
                + compAccountIds: 162426,162427 (array) - Locations Ids of competitor account [compAccountIds in Child Business of Competitor API].
        + topThm: 25 (number) - Count of top Themes to be fetched.
        + orderBy: occurrence (string) - Order of the result e.g.: "occurrence"[default] or "ztoa" or "atoz"
        + sentiment: 0 (number) - -1 = negative sentiment,
                                    1 = positive sentiment,
                                    0 = all sentiments [default].

    + Body

            {
                "sourceType": "review",
                "sources": ["google","citysearch"],
                "startDate":"11/02/2020",
                "endDate":"01/06/2021",
                "competitors": [
                {
                    "competitorId": 530846,
                    "compAccountIds": [ 162426, 144352 ]
                },
                {
                    "competitorId": 720708,
                    "compAccountIds": [ 165432 ]
                }
                ],
                "topThm": 25,
                "orderBy": "occurrence",
                "sentiment": -1
            }

+ Response 200


    + Attributes
        + id: 398331 (number) - Business Id.
        + name: Social Stress (string) - Name of Enterprise.
        + themes: your money (array) - List of Themes.
        + occr: 3 (number) - Occurence.
        + avgScore: 1.0 (number) - Average Score.
        + pPrct: 0.0 (number) - Positive Percentage.
        + nPrct: 0.047169812 (number) - Negative Percentage.
        + prct: 0.0063035805 (number) - Percentage
        + pCt: 30707 (number) - Positive Count.
        + nCt: 6360 (number) - Negative Count.
        + ct: 47592 (number) -  Total Count.
        + themeStats (array) - List of Theme details
            + (object)
                + theme: your money (string) - Theme.
                + adj: your (string) - Adjective
                + kw: money (string) - Keyword.
                + pCt: 0 (number) - Positive Count.
                + nCt: 3 (number) - Negative Count.
                + ct: 3 (number) - Total Count.
                + score: 3 (number) - Score.
                + scr: 1.0 (number) - Scr.
        + competitors (array) - Competitor details.
            + (object)
                + id: 398331 (number) - Business Id.
                + name: Social Stress (string) - Name of Enterprise.
                + themes: your money (array) - List of Themes.
                + occr: 3 (number) - Occurence.
                + avgScore: 1.0 (number) - Average Score.
                + pPrct: 0.0 (number) - Positive Percentage.
                + nPrct: 0.047169812 (number) - Negative Percentage.
                + prct: 0.0063035805 (number) - Percentage
                + pCt: 30707 (number) - Positive Count.
                + nCt: 6360 (number) - Negative Count.
                + ct: 47592 (number) -  Total Count.
                + themeStats (array) - List of Theme details
                    + (object)
                        + theme: your money (string) - Theme.
                        + adj: your (string) - Adjective
                        + kw: money (string) - Keyword.
                        + pCt: 0 (number) - Positive Count.
                        + nCt: 3 (number) - Negative Count.
                        + ct: 3 (number) - Total Count.
                        + score: 3 (number) - Score.
                        + scr: 1.0 (number) - Scr.

    + Body

            {
              "id": 398331,
              "name": "Social Stress",
              "themes": [
                "your money"
              ],
              "occr": 3,
              "avgScore": 1.0,
              "pPrct": 0.0,
              "nPrct": 0.047169812,
              "prct": 0.0063035805,
              "pCt": 30707,
              "nCt": 6360,
              "ct": 47592,
              "themeStats": [
                {
                  "theme": "your money",
                  "adj": "your",
                  "kw": "money",
                  "pCt": 0,
                  "nCt": 3,
                  "ct": 3,
                  "score": 3,
                  "scr": 1.0
                },
                {
                  "theme": "wrong vehicle",
                  "adj": "wrong",
                  "kw": "vehicle",
                  "pCt": 4,
                  "nCt": 4,
                  "ct": 14,
                  "score": 4,
                  "scr": 1.0
                }
              ],
              "competitors": [
                {
                  "id": 530846,
                  "name": "Social 1",
                  "themes": [
                    "your money"
                  ],
                  "occr": 0,
                  "avgScore": 0.0,
                  "pPrct": 0.0,
                  "nPrct": 0.0,
                  "prct": 0.0,
                  "pCt": 41,
                  "nCt": 67,
                  "ct": 132,
                  "themeStats": [
                    {
                      "theme": "young lady",
                      "adj": "young",
                      "kw": "lady",
                      "pCt": 0,
                      "nCt": 1,
                      "ct": 2,
                      "score": 1,
                      "scr": 1.0
                    }
                  ]
                }
              ]
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]


## Competitive Insight Keywords [/v1/competitors/competitive-insight/keywords/{businessNumber}{?api_key}]
Get Keyword Statistics retrieves Insights keywords details for a competitor.

### Get Keyword Statistics [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessNumber: 986031488 (string, required) - Account Business Number.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + sourceType: review (string) - Type of source e.g. review [by default] or social.
        + sources: google,citysearch (array) - Aggregation sources.
        + timePeriodSelected: all (string) - For all time : all.
        + startDate: 11/02/2020 (string) - Date from which data has to be fetched[MM/DD/YYYY].
        + endDate: 01/06/2021 (string) - Date until which data has to be fetched[MM/DD/YYYY].
        + competitors (array) - List of competitors
            + (object)
                + competitorId: 530846 (number) -  Enterprise Competitor Ids [competitorId in Competitor of Enterprise Business API].
                + compAccountIds: 162426,162427 (array) - Locations Ids of competitor account [compAccountIds in Child Business of Competitor API].
        + topKW: 25 (number) - Count of top Keywords to be fetched.
        + topAd: 25 (number) - Count of top Adjectives to be fetched.
        + orderBy: occurrence (string) - Order of the result e.g.: "occurrence"[default] or "ztoa" or "atoz"
        + sentiment: 0 (number) - -1 = negative sentiment,
                                    1 = positive sentiment,
                                    0 = all sentiments [default].

    + Body

            {
                  "sourceType": "review",
                  "sources": ["google","citysearch"],
                  "startDate":"11/02/2020",
                  "endDate":"01/06/2021",
                  "competitors": [
                    {
                      "competitorId": 530846,
                      "compAccountIds": [
                        162426,
                        144352
                      ]
                    },
                    {
                      "competitorId": 720708,
                      "compAccountIds": [
                        165432
                      ]
                    }
                  ],
                  "topKW": 25,
                  "topAd": 10,
                  "orderBy": "ztoa",
                  "sentiment": -1
                }

+ Response 200

    + Attributes
        + id: 119468 (number) - Business Id
        + name: Social Stress (string) - Name of Enterprise
        + keywords: experience (array) -  List of keywords.
        + ct: 27159 (number) - Count.
        + avgScr: 1.0 (number) - Average Score.
        + keywordStats (array) -
            + (object)
                + keyword: experience (string) - Keyword
                + occurences: 27158 (number) - Occurences
                + score: 1.0 (number) - Score
                + scr: 27158 (number) - Scr.
        + negKWAdjectives (array) - Negative keyword details
            + (object)
                + adjective: horrible (string) - Adjectives
                + occurences: 4137 (number) - Occurences
                + prcnt: 15.232519 (number) - Percentage
                + avgScore: 1.0 (number) - Average Score
        + competitors (array) - Competitor details
            + (object)
                + id: 119468 (number) - Business Id
                + name: Social Stress (string) - Name of Enterprise
                + keywords: experience (array) -  List of keywords.
                + ct: 27159 (number) - Count.
                + avgScr: 1.0 (number) - Average Score.
                + keywordStats (array) -
                    + (object)
                        + keyword: experience (string) - Keyword
                        + occurences: 27158 (number) - Occurences
                        + score: 1.0 (number) - Score
                        + scr: 27158 (number) - Scr.
                + negKWAdjectives (array) - Negative keyword details
                    + (object)
                        + adjective: horrible (string) - Adjectives
                        + occurences: 4137 (number) - Occurences
                        + prcnt: 15.232519 (number) - Percentage
                        + avgScore: 1.0 (number) - Average Score


    + Body

            {
              "id": 119468,
              "name": "Social Stress",
              "keywords": [
                "experience"
              ],
              "ct": 27159,
              "avgScr": 1.0,
              "keywordStats": [
                {
                  "keyword": "experience",
                  "occurences": 27158,
                  "score": 1.0,
                  "scr": 27158
                },
                {
                  "keyword": "lady",
                  "occurences": 2186,
                  "score": 1.0,
                  "scr": 2186
                }
              ],
              "negKWAdjectives": [
                {
                  "adjective": "horrible",
                  "occurences": 4137,
                  "avgScore": 1.0,
                  "prcnt": 15.232519
                }
              ],
              "competitors": [
                {
                  "id": 159180,
                  "name": "Online Competitors",
                  "keywords": [
                    "experience"
                  ],
                  "ct": 1176,
                  "avgScr": 1.0,
                  "keywordStats": [
                    {
                      "keyword": "problem",
                      "occurences": 2972,
                      "score": 1.0,
                      "scr": 2972
                    }
                  ],
                  "negKWAdjectives": [
                    {
                      "adjective": "bad",
                      "occurences": 340,
                      "avgScore": 1.0,
                      "prcnt": 28.911564
                    }
                  ]
                }
              ]
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]




# Group Listing
Keep your business information accurate and consistent across 50+ websites.


## Fix Listing [/v1/listing/fix{?api_key,b_id}]
Fix Listing publishes information on online listing sources. We post presence information on more than 50 online directories.


### Fix Listing [POST]

+ Parameters

    + b_id: 12345678 (number, required) - Id of the business.
    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

            {
            }


+ Response 200

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1175][]

## Get Location Status [/v1/listing/{businessNumber}/location/status]
Get Location Status retrieves status for each sources for a given business. Health aggregates sum and percentage metrics for distinct statuses.

### Get Location Status [GET]

+ Parameters

    + businessNumber: 12345678 (number, required) - Id of the business.

+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


+ Response 200

    + Attributes
        + listingStatus (array) - List of location status.
            + sourceName: Google (string) - Name of listing source.
            + status: Action Required (string) -  Status of the location on that source. Possible values are :
                        Sync Initiated,
                        In Progress,
                        Opted out,
                        Submitted,
                        Live,
                        Action Required,
                        Connect,
                        Reconnect,
                        Unavailable.
            + liveLink: https://maps.google.com/maps?cid=151047735163 (string) - Location source link.
            + name: Utah Dental Center (string) - Name of the location.
            + phone (string) - Phone number Format is (xxx) xxx-xxxx.
            + address: 420 E S Temple St #220 (string) - Address of the business.
        + health (array) -  Aggregates sum and percentage metrics for distinct statuses


    + Body

            {
                "listingStatus": [{
                    "sourceName": "Navmii",
                    "status": "Action Required",
                    "liveLink": "http://livepoi.navmii.com/p/view/4d6c-ace0-0a2483b47182",
                    "name": "Richard L. Blackhurst/Utah Dental Center",
                    "phone": "(123) 456-7890",
                    "address": "420 E S Temple St #220"
                    },
                    {
                        "sourceName": "Where To?",
                        "status": "In Progress",
                        "liveLink": "https://wheretoapp.com/search?poi=86183685562887",
                        "name": "Richard L. Blackhurst/Utah Dental Center",
                        "phone": "(123) 456-0987",
                        "address": "420 E S Temple St #220"
                    }],
                 "health": [
                        {
                          "status": "Action Required",
                          "count": 1,
                          "percentage": 14.29
                        },
                        {
                          "status": "In Progress",
                          "count": 1,
                          "percentage": 14.29
                        },
                        {
                          "status": "Reconnect",
                          "count": 1,
                          "percentage": 14.29
                        },
                        {
                          "status": "Connect",
                          "count": 1,
                          "percentage": 14.29
                        },
                        {
                          "status": "Live",
                          "count": 1,
                          "percentage": 14.29
                        },
                        {
                          "status": "Opted out",
                          "count": 1,
                          "percentage": 14.29
                        },
                        {
                          "status": "Sync Initiated",
                          "count": 1,
                          "percentage": 14.29
                        }
                      ]
             }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1175][]


## Listings Insights [/v1/listing/insights{?api_key,businessId}]
Insights/Analytics for Google Listings of a given business.

### Listings Insights [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + businessId: 12345678 (number, required) - Id of the account.

+ Request (application/json)

    + Headers

            Accept: application/json


    + Attributes

        + businessNumbers: 23456788,1231313 (array) - Location numbers of enterprise locations. If empty all valid enterprise locations will be selected.
        + startDate (string) - Start Date, Format: yyyy-MM-dd.
        + endDate (string) - End Date, Format: yyyy-MM-dd. If startDate and endDate are not provided, then the last 3 months date range will be chosen.
        + viewMode (array,required) - for mobile or desktop or both (if none is provided then data for both will be displayed) Example “Desktop”, ”Mobile”


    + Body

            {
                "businessNumbers": [156387109031976],
                "startDate": "2010-02-01",
                "endDate": "2022-02-01",
                "viewMode": [ "Mobile"]
            }



+ Response 200

    + Attributes

        + mapViewTotalCount: 2868 (number) - Business impressions on Google Maps on Desktop and mobile devices. Multiple impressions by a unique user within a single day are counted as a single impression.
        + searchViewTotalCount: 2868 (number) - Business impressions on Google Search on Desktop and mobile devices. Multiple impressions by a unique user within a single day are counted as a single impression.
        + websiteVisitsTotalCount: 2868 (number) - The number of times the business profile website was clicked.
        + getDirectionsTotalCount: 0 (number) - The number of times a direction request was requested to the business location.
        + callsTotalCount: 2868 (number) - The number of times the business profile call button was clicked.
        + usersReachedTotalCount: 0 (number) - The number of times your business appeared in search results and other services in Bing.
        + impressionCountTotalCount: 0 (number) - The number of users who saw the activity from your page including posts, check-ins, and ads.
        + liveCount: 10 (number) - Total no of synched sites for a business.
        + entityCount: 1 (number) - Total businesses count.
        + viewMode  (array) - is data required for mobile or desktop or both (if none is provided then data for both will be displayed)

    + Body

            {
                "mapViewTotalCount": 2868,
                "searchViewTotalCount": 2868,
                "websiteVisitsTotalCount": 2868,
                "getDirectionsTotalCount": 0,
                "callsTotalCount": 2868,
                "usersReachedTotalCount": 0,
                "impressionCountTotalCount": 0,
                "liveCount": 10,
                "entityCount": 1
            }


+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1175][]



## Listings Insights Datapoints [/v1/listing/report/{reportType}/datapoints{?api_key,businessId}]
Datapoints of report graph is date/label mapped to value/data of a given business.

### Listings Insights Datapoints [POST]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.
    + reportType: google_view_search_map (string, required) - Report type, Possible values [google_view_search_map, gmb_customer_actions_map, fb_users_reached,fb_users_engaged, bing_impression_count,bing_customer_actions]
    + businessId: 12345678 (number, required) - Id of the account.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + businessNumbers: 23456788,1231313 (array) - Location numbers of enterprise locations. If empty all valid enterprise locations will be selected.
        + startDate (string) - Start Date, Format: yyyy-MM-dd.
        + endDate (string) - End Date, Format: yyyy-MM-dd. If startDate and endDate are not provided, then the last 3 months date range will be chosen with groupByType as the day.
        + viewMode (array) - is data required for mobile or desktop or both (if none is provided then data for both will be displayed)
        + groupByType: year (string) - Group the data accordingly. The default value will be the week. Possible values are
                                                        day,
                                                        week,
                                                        month,
                                                        quarter,
                                                        year


    + Body

            {
                "businessNumbers": [156387109031976],
                "startDate": "2010-02-01",
                "endDate": "2022-02-01",
                "groupByType": "year",
                "viewMode": [ "Mobile"]
            }



+ Response 200

    + Attributes (array)
        + (object)
            + label: 02/01/2020 (string) - The business counts data on a particular date.
            + wsiteVisitsCount: 670 (number) - The number of times the business profile website was clicked.
            + directionsCount: 670 (number) - The number of times a direction request was requested to the business location.
            + callsCount: 670 (number) - The number of times the business profile call button was clicked.

    + Body

            [{
                "label": "02/01/2020",
                "wsiteVisitsCount": 670,
                "directionsCount": 670,
                "callsCount": 670
            },
            {
                "label": "01/01/2021",
                "wsiteVisitsCount": 730,
                "directionsCount": 730,
                "callsCount": 730
            },
            {
                "label": "01/01/2022",
                "wsiteVisitsCount": 730,
                "directionsCount": 730,
                "callsCount": 730
            }
            ]


+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 401

    [1167][]

+ Response 404

    [1175][]



## Get GMB Attributes [/v1/listing/{businessNumber}/gmb-attributes-list{?categoryId,countryCode}]
The Get GMB Attributes API fetches the list of applicable GMB attributes for the selected GMB category ID


### Get GMB Attributes [GET]

+ Parameters

    + businessNumber: 12345678 (number, required) - Business Number.
    + categoryId: gcid:electrical_installation_service (string, required) - Category id.
    + countryCode: US (string, required) - Code of the country, Possible values are US,CA,AU,PR,NZ,MX,IN,UK,FR,IT.

+ Request (application/json)


    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


+ Response 200

    + Attributes
        + Accessibility (array) - This is dynamic field. Depends upon request inputs.
            + (object)
                + attributeId: has_wheelchair_accessible_restroom (string) - Attribute Id.
                + valueType: BOOL (string) - Attribute value type.
                + displayName: Wheelchair accessible restroom (string) - Attribute display name.
                + groupDisplayName: Accessibility (string) - Attribute group name.
                + valueMetadata (array) - Contains the list of possible values for the attribute.
                    + (object)
                        + value: true - Possible attribute value.
                        + displayName: Wheelchair accessible restroom (string) - Attribute display name.

    + Body

            {
                "Accessibility": [{
                        "attributeId": "has_wheelchair_accessible_restroom",
                        "valueType": "BOOL",
                        "displayName": "Wheelchair accessible restroom",
                        "groupDisplayName": "Accessibility",
                        "valueMetadata": [{
                                "value": "true",
                                "displayName": "Wheelchair accessible restroom"
                            },
                            {
                                "value": "false",
                                "displayName": "No wheelchair accessible restroom"
                            }
                        ]
                    },
                    {
                        "attributeId": "has_wheelchair_accessible_seating",
                        "valueType": "BOOL",
                        "displayName": "Wheelchair accessible seating",
                        "groupDisplayName": "Accessibility",
                        "valueMetadata": [{
                                "value": "true",
                                "displayName": "Wheelchair accessible seating"
                            },
                            {
                                "value": "false",
                                "displayName": "No wheelchair accessible seating"
                        }]
                    }
                ],
                    "Crowd": [{
                        "attributeId": "welcomes_lgbtq",
                        "valueType": "BOOL",
                        "displayName": "LGBTQ+ friendly",
                        "groupDisplayName": "Crowd",
                        "valueMetadata": [{
                            "value": "true",
                            "displayName": "LGBTQ+ friendly"
                        }]
                    },
                    {
                        "attributeId": "is_transgender_safespace",
                        "valueType": "BOOL",
                        "displayName": "Transgender safespace",
                        "groupDisplayName": "Crowd",
                        "valueMetadata": [{
                            "value": "true",
                            "displayName": "Transgender safespace"
                        }]
                    }
                ],
                "Planning": [{
                    "attributeId": "requires_appointments",
                    "valueType": "BOOL",
                    "displayName": "Appointment required",
                    "groupDisplayName": "Planning",
                    "valueMetadata": [{
                        "value": "true",
                        "displayName": "Appointment required"
                    }]
                }]
            }



+ Response 401

    [1161][]

+ Response 429

    [89][]


+ Response 400

    [4011][]

+ Response 400

    [4012][]

+ Response 400

    [4013][]


## Get Apple Attributes [/v1/listing/{businessNumber}/apple-location-attributes-list]
The Get Apple Attributes API fetches the list of applicable Apple attributes. An attribute is typically something that helps describe your location better. E.g.: You provide paid parking or that your location is kid friendly etc.


### Get Apple Attributes [GET]

+ Parameters

    + businessNumber: 12345678 (number, required) - Business Number.

+ Request (application/json)


    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


+ Response 200

    + Attributes
        + Accessibility (array) - This is dynamic field. Depends upon request inputs.
            + (object)

    + Body

            {
                "crossbusiness.family_kids": [{
                        "attributeId": "kidsclub",
                        "description": "Kids club is the facility that a business or establishment has where various social and recreational activities are available for children's entertainment."
                    }
                ],
                    "crossbusiness.goodfor": [{
                        "attributeId": "groups",
                        "description": "Good for groups refer that the establishment is good for people in groups."
                    },
                    {
                        "attributeId": "singles",
                        "description": "Good for singles refer that the establishment is good for people who are single."
                    }
                ],
                    "crossbusiness.barservice": [{
                        "attributeId": "no_alcohol",
                        "description": "Business that does not serve alcohol."
                    },
                    {
                        "attributeId": "bar_lounge",
                        "description": "The bar lounge is the facility where non-alcoholic, alcoholic drinks and other condiments are available in a room with comfortable tables and sittings."
                    }
                ],
                  "crossbusiness.cellphone_rental": []


            }



+ Response 401

    [1161][]

+ Response 429

    [89][]


+ Response 400

    [4011][]

+ Response 400

    [4012][]

+ Response 400

    [4013][]


## Get Apple Action Links [/v1/listing/{businessNumber}/apple-action-links]
The Get Apple Action Links fetches the list of applicable Apple Action Link Types. Apple action links are the click throughs that are displayed in the action row on your Apple Maps listings also known as the Apple Maps Placecard.


### Get Apple Action Links [GET]


+ Parameters

    + businessNumber: 12345678 (number, required) - Business Number.

+ Request (application/json)


    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


+ Response 200

    + Attributes
        + Accessibility (array) - This is dynamic field. Depends upon request inputs.
            + (object)

    + Body


             [
                {
                     "id": "quicklinks.parking_available_parking",
                     "name": "Parking"
                },{
                    "id": "quicklinks.parking_reserve_parking",
                    "name": "Reserve"
                },{
                     "id": "quicklinks.restaurant_join_waitlist",
                     "name": "Waitlist"
                },{
                    "id": "quicklinks.restaurant_order_delivery",
                     "name": "Delivery"
                },{
                     "id": "quicklinks.restaurant_order_food",
                     "name": "Order"
                },{
                    "id": "quicklinks.restaurant_pickup",
                     "name": "Pickup"
                }


            ]



+ Response 401

    [1161][]

+ Response 429

    [89][]


+ Response 400

    [4011][]

+ Response 400

    [4012][]

+ Response 400

    [4013][]

## Get Category List [/v1/listing/{businessNumber}/category-list{?sourceName,countryCode}]
The Get Category List API fetches the list of category values for the selected source.

### Get Category List [GET]

+ Parameters

    + businessNumber: 12345678 (number, required) - Business Number.
    + sourceName: BING (string, required) -  Source name for which category data needs to be fetched. Possible values are BING, HEALTHCARE, GMB, VENDOR, FACEBOOK, APPLE.
    + countryCode: US (string, required) - Code of the country, Possible values are US,CA,AU,PR,NZ,MX,IN,UK,FR,IT.

+ Request (application/json)


    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


+ Response 200

   + Attributes (array)
        + (object)
            + id: 2 (string) - Category Id.
            + name: Towing Service (string) - Category Name.
            + primary: true (boolean) - It will be present in response only in case when sourceName = “VENDOR”



    + Body

            [
                {
                    "id": "2",
                    "name": "Towing Service",
                    "primary": true
                },
                {
                    "id": "3",
                    "name": "Auto Glass Shop",
                    "primary": true
                },
                {
                    "id": "4",
                    "name": "Car Dealer",
                    "primary": true
                },
                {
                    "id": "6",
                    "name": "Used Car Dealer",
                    "primary": true
                }
            ]




+ Response 401

    [1161][]

+ Response 429

    [89][]


+ Response 400

    [4014][]

+ Response 400

    [4012][]

+ Response 400

    [4013][]

+ Response 400

    [4015][]


## Create Listing [/v1/listing/{businessNumber}/create]
Create Listing API publishes information on online listing sources. We post presence information on more than 50+ online directories. You can use this API to not just create your detailed listing but also fix/ publish/ sync/ make live at the same time.


### Create Listing [POST]

+ Parameters

    + businessNumber: 12345678 (number, required) - Business Number.

+ Request (application/json)


    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


   + Attributes
        + businessInfo - Business Information
            + name: Drs. Chalker and Peterson, A Dental Partnership (required, string) - Name of the Business/Location. Should be Max 1000 characters long.
            + phone (required, string) - Your official Business Phone number. Format is (xxx) xxx-xxxx.
            + websiteUrl: http://www.diecispa.org/ (string) - Business website url.
            + emailId: 4568@livelovespa.com (string) - Business Email ID.
            + isAddressHidden: note that this isn’t supported by all sites Possible Values  “Yes” or “No” (string) - If your business doesn’t have a place for your customers to visit, then you can hide your street address.
            + isServiceAreaProvider: Possible Values “Yes” or “No (string) - If you deliver or provide service at customer locations.
            + serviceAreas (array) - Locations where you deliver or provide service (applicable if isServiceAreaProvider is 'Yes').NOTE: Maximum service areas that can be provided are 10.
                + (object)
                    + description (string) - Area, City, State, Zip, Country. e.g.  "1735 Berryessa Rd, San Jose, CA 95133, USA", “Onalaska, WI, USA”.
            + location (object) - Business address
                + address1: 7405 Morro Rd (string) - Address of the business.
                + address2: Suite 102 (string) - Address of the business.
                + city: Atascadero (string) - City (Max 1000 character long).
                + state: CA (string) - State (2 character state code).
                + countryCode: US (string) - Country Code (2 character country code).
                + zip: 93422 (required,string) - Zip Code.
        + additionalInfo - Business Additional Information
            + establishedYear: 2012 (number) - Year established
            + timezone: America/Los_Angeles (string)- Timezone of the business.
            + languages: English, Spanish (array) - Languages.
            + moreHours (array) -  Google more hours for specific services you offer such as delivery, takeout, drive-through, and pickup (see: Supported More Hours). Google more hours can only be added if google primary category is added. To get specific types of more hours, please refer to Get supported more hours type api.  NOTE: In more hours, day 0 denotes Monday, day 1 denotes Tuesday, …, day 6 denotes Sunday.
            Please refer /listing/get-more-hours-type/get-more-hours-type api to get google more hours type. Possible Values Breakfast, Lunch, Pickup, etc.
            + wholeWeekOperating: 0 (number) - Whether your business is open 24/7, Possible Values - 0 or 1.
            + hoursOfOperations (array, required) - Regular hours: Regular working hours of the business for each day from Monday to Sunday.
                + (object)
                    + day: 5 (number) - 0(Monday), 1(Tuesday), 2(Wednesday) and so on.
                    + workingHours (array) - Working hours of the business
                        + (object)
                            + startHour: 7:00 (string) - Start hour 9:00 (9 AM), 18:00 (6 PM)
                            + endHour: 17:30 (string) - End hour  9:00 (9 AM), 18:00 (6 PM)
                    + isOpen: 1 (number) - 0 (Business closed today), 1 (open)
                    + comment: By appointment only (string) - Add the special instruction.
            + specialHours (array) - For special holiday days, where you may have limited hours of operation and don’t want to change your preset regular hours. These would only be applicable only for the dates they are set for.
                + (object)
                    + specialDate: 10/20/2023 (string) - It should be "MM/DD/YYYY".
                    + startHour: 7:00 (string) - Start hour 9:00 (9 AM), 18:00 (6 PM)
                    + endHour: 17:30 (string) - End hour  9:00 (9 AM), 18:00 (6 PM)
                    + isOpen: 1 (number) - 0(Business closed today), 1 (open)
            + businessStatus : Open (string) - It will update your business status on lisitng page and If business will choose "Temporarily closed" then Reopen date is mandatry. [Open, Temporarily closed, Permanently closed]
            + reopenDate : 10/20/2022 - Reopen date is applicable only when the status is "temporarily closed". It should be "MM/DD/YYYY" format.
            + services:  Other Dental Specialties, Orthodontists, Dentistry (required,string) - Services offered by the business. Useful in SEO. (Comma separated list of services offered) Business services cannot be more than 1000 characters.
            + keywords: Dentists Atascadero CA, Other Dental Specialties Atascadero CA, Orthodontists Atascadero CA (string)- Important keywords related to the business. Useful in SEO. (Comma separated list of important keywords) Business keywords cannot be more than 1000 characters.
            + products: Invisalign, Cookies Set of 8, Brochure design & prints (string) - Products about the business. Useful in SEO and Business products cannot be more than 1000 characters.
            + appointmentLink (string)- Let customers reserve tables by linking them to your reservations page.
            + menuLink (string) - Show customers what you serve by linking them to your menu.
            + orderAheadLink (string) - Let customers place delivery and pick-up orders by linking them to your ordering page.
            + impressum (string) - In certain countries (like Austria, Germany and Switzerland), businesses may be required by law to include a statement of ownership on their web presence.
            + payment: Paypal, Visa, Master Card (string) - Payment Type (Max 250 character long).
            + localPhoneNumber (string)- Local phone number.
            + tollFreePhoneNumber (string) - Tollfree number.
            + androidAppURL: http://www.gmail.com (string)- Android app url.
            + iosAppURL: http://www.gmail.com (string) - IOS app url.
        + media (object) - Media details.
            + logoUrl: http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg (string) - This logo will pushed to your listings sites such as Google, Facebook, Bing, Birdeye and all the other secondary listings sites. Format: JPG, JPEG, PNG. Minimum 250 x 250px. Recommended: 720 X 720 px. 10 KB min.
            + coverImageUrl: http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg (string) - This cover photo will pushed to your listings sites such as Birdeye and all the other secondary listings sites. Cover image URL for business will be displayed on custom review site.  Format: JPG, JPEG, PNG. Minimum 1110 x 374px. 10 KB min.
            + gmbCover: http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/abcd.jpg (string) - Google Cover Image Url.
            + facebookCover: http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/fb.jpg (string) - Facebook Cover Image Url.
        + optOut (object) - Opt out section
            + gmbLogoOptOut: true (boolean)- Update profile photo on your google my business page.
                                                    Select ‘true’ if you want to opt out from updating the logo on your GBP page.
                                                    Select ‘false’ if you want to opt in to updating the logo on your GBP page.
            + fbLogoOptOut: false (boolean) - Update profile photo on your facebook profile.
                                                    Select ‘true’ if you want to opt out from updating the logo on your FB business page.
                                                    Select ‘false’ if you want to opt in to updating the logo on your FB business page.
            + gmbCoverOptOut: true (boolean) - Update cover photo on your google my business page.
                                                    Select ‘true’ if you want to opt out from updating the cover photo on your GBP page.
                                                    Select ‘false’ if you want to opt in to updating the cover photo on your GBP page.
            + fbCoverOptOut: true (boolean) - Update cover photo on your facebook profile.
                                                    Select ‘true’ if you want to opt out from updating the cover photo on your FB business page.
                                                    Select ‘false’ if you want to opt in to updating the cover photo on your FB business page.
            + gmbProfileOptOut: false (boolean) - Opt out from the google specific section on the profile page.
                                                        Select ‘true’ if you want to opt out from updating information such as category and related attributes and more hours on your Google Business Profile page.
                                                        Select ‘false’ if you want to opt in to updating information such as category and related attributes and more hours on your Google Business Profile page.
            + businessProfileOptOut: true (boolean) - Opt out from the business profile section.
                                                            Select ‘true’ if you want to opt out from updating NAP information on your Google Business Profile page.
                                                            Select ‘false’ if you want to opt in to updating NAP information on your Google Business Profile page.
        + covidInfo (object) - Provide this data for updating any COVID specific information you want to share with your customers.
            + postDescription (string) - This information is posted and updated on your Google business profile page and your FB business page.
            + covid19SupportLink (string) - Should be a valid covid19 support url
            + virtualCareLink (string) - Should be a valid url virtual care link
        + bingListing (object) - This data will be used to update your Bing listing.
            + primaryCategoryBing (string) - Primary category of bing.
            + bingCategories (array) - You can add a maximum of up to 3 categories.
            + bingPhoneNumber (string) - You can provide a phone number which will be pushed only to your Bing listing site and will override the primary phone number set.
            + bingDescription (string) - An ‘About the business description’. Bing description cannot be more than 4096 characters.
        + internalListing (object) - Provide data for microsite listing purpose.
            + description (required, string) - An ‘about your business’ description. Business description cannot be more than 5000 characters and cannot be less than 200 characters.
            + subCategories (array) - Primary category of business.
            + subcategory (string) - You can add up to 3 subcategories.
            + displayCategory (string) - Choose one of the category either from primary category or from sub categories.
        + facebookListing (object) - This data will be used to update your Facebook business page/ listing.
            + facebookPhoneNumber (string) - Phone number for facebook profile. This phone number will override the main phone number on your Facebook business page
            + categories (array) - You can add up to 3 categories.
            + facebookDescription (string) - An ‘about your business’ description. Facebook description cannot be more than 255 characters.
        + gmbListing (object) - This data will be used to update your Google Business Profile/ listing.
            + googleWebsiteUrl (string) - Website url will update on google listing. This website URL will override your existing website URL on your Google business profile.
            + googlePhoneNumber (string) - You can provide a phone number which will be pushed only to your google listing site and will override the primary phone number set.
            + googleStoreId (string) - Store id for google.
            + primaryCategoryGmb (string) - Primary category of google.
            + additionalCategories (array) - You can add up to 5 subcategories.
            + googleDescription (string) - An ‘about your business’ description. Google description cannot be more than 750 characters.
            + attributes (object) - Google my business attributes are highly visible statements about your business that appear on your Google My Business listing. Supported attributes are
                    Accessibility,Amenities,Crowd,Dining options,Highlights,Planning,Offerings,Health & safety.
            + foodDelivery (string) - Enter the redirect URL where customers can place delivery orders.This field is applicable for hospitality business and is category dependent.Example http://www.ubereats.com
            + foodTakeout (string) - Enter the redirect URL where customers can place 'takeout' food orders. This field is applicable for hospitality business and is category dependent.Example : http://www.ubereats.com
        + appleListing (object) - This data will be used to update your Google Business Profile/ listing.
            + phoneNumber (string) - This will be shown as the primary phoneNumber on your Apple maps place card and will replace/ override your business info phone number.
            + primaryCategory (string) - Primary category of apple ,This is a mandatory field. Please pass an acceptable category name/ id by first getting the approved list using the Get category API.
            + additionalCategories (array) - You can add upto 5 additional categories most suitable for your business.
            + appleLocationAttributes (object) - Apple connect attributes are highly visible statements about your business that appear on your Apple Business listing. Few Apple Supported attributes are:
crossbusiness.family_kids.kids_playarea, crossbusiness.barservice.happyhour Crossbusiness.attire.casual .These help your potential customers understand more about your business.
            + appleActionLinks (object) - Apple actionLinks are shown on the Apple maps place card which helps users to access or redirect to some website or app store. These are typical CTA’s that you would like to expose to your potential customers. Apple action links can only be selected from pre-defined set of action links which you can get using the GET Action links API.
        + thirdPartyListing (object) - This data will be used to update your secondary listings sites.
            + thirdPartyCategory: Towing Service (string) - Primary business category for third party listings. Note: This is a Mandatory field if vendor is applicable.
            + thirdPartySubCategories: Car Dealer, Auto Glass Shop (string) - Additional sub categories. You can set a maximum of 3 sub categories. Note: This is a Mandatory field if thirdPartyCategory is available.
        + socialProfileURLs (object) - Profile URLs for business on top rated social sites
            + facebookUrl: http://www.facebook.com/ChalkerandPetersonDental (string) - Facebook URL.
            + twitterUrl: https://twitter.com/DrsChaAndPet (string) - Business Twitter URL.
            + linkedInUrl: https://linkedin.com/DrsChaAndPet (string) - Business LinkedId URL.
            + googleUrl: https://plus.google.com/103957250846354895095/about?gl=US&hl=en-US (string)- Business Google URL.
            + youTubeUrl: https://www.youtube.com/channel/UCDNP0M75ySA5qt0So2F8Xxw (string)- Business Youtube URL.
            + pintrestUrl - Business Pinterest URL.
            + bbbUrl - Business BB URL.
            + lendingtreeUrl - Business Lending Tree URL.
        + healthcare (object) - This section is only applicable if you have purchased the health care listings plan and have been onboarded on the same.
            + doctorCategories: Allergist-Immunologist > Allergy, Allergist-Immunologist > General (array) - This is the doctor specific category your business belongs to. Please refer to the sheet "Doctor Specific Categories" to get the possible values.
            + isProvider: true (boolean) -  If provider then select value true. If practice then select value false. This is a true/false toggle for determining if the location is a provider or not.
            + practiceName: General Medicine (string) - Name of the practice.Must be less than 191 characters.
            + firstName: John (string) -  First name of the provider.
            + middleName: Jack (string)  -  Middle name of the provider.
            + surName: Doe (string)  -  Surname of the provider
            + npi: 1245319599  (number) - National Provider Identifier - NPI. Must be 10 digits
            + credentials: MD (string) - University of the provider/practice. Must be less than 25 characters
            + university: Sample text (string) -  University of the provider/practice. Must be less than 255 characters
            + hospitalAffiliations: Sample text (string) - Hospital Affiliations of the provider/practice. Must be less than 150 characters
            + insurancesAccepted: Sample text (string) - Insurance Accepted of the provider/practice.  Must be less than 50 characters


    + Body

            {
                "businessInfo": {
                    "name": "Dieci Lifestyle Spa",
                    "phone": "(973) 716-0007",
                    "websiteUrl": "http://www.diecispa.org/",
                    "emailId": "example@birdeye.com",
                    "isAddressHidden": "No",
                    "isServiceAreaProvider": "No",
                    "serviceAreas": [
                      {
                        "description": "Van An, Berryessa Road, San Jose, CA, USA"
                      },
                      {
                        "description": "Santa Clara, CA, USA"
                      }
                    ],
                    "location": {
                        "address1": "90 W Mount Pleasant Ave",
                        "address2": "(btwn Preston Dr. &amp; N. Mitchell Ave.)",
                        "city": "Livingston",
                        "state": "NJ",
                        "zip": "07039",
                        "countryCode": "US"
                    }
                },
                "additionalInfo": {
                    "establishedYear": "2022",
                    "timezone": "America/Los_Angeles",
                    "languages": [
                        "English",
                        "Hindi"
                    ],
                    "moreHours": {
                              "Dinner": [
                                {
                                  "day": 0,
                                  "isOpen": 0,
                                  "workingHours": [
                                    {
                                      "startHour": "",
                                      "endHour": ""
                                    }
                                  ]
                                },
                                {
                                  "day": 1,
                                  "isOpen": 0,
                                  "workingHours": [
                                    {
                                      "startHour": "",
                                      "endHour": ""
                                    }
                                  ]
                                },
                                {
                                  "day": 2,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "09:00",
                                      "endHour": "20:10"
                                    }
                                  ]
                                },
                                {
                                  "day": 3,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "09:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 4,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "9:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 5,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "09:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 6,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "00:00",
                                      "endHour": "20:30"
                                    }
                                  ]
                                }
                              ],
                              "Delivery": [
                                {
                                  "day": 0,
                                  "isOpen": 0,
                                  "workingHours": [
                                    {
                                      "startHour": "",
                                      "endHour": ""
                                    }
                                  ]
                                },
                                {
                                  "day": 1,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "7:00",
                                      "endHour": "09:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 2,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "02:00",
                                      "endHour": "09:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 3,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "00:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 4,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "0:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 5,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "0:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 6,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "1:00",
                                      "endHour": "1:00"
                                    }
                                  ]
                                }
                              ]
                            },
                    "wholeWeekOperating": 0,
                    "hoursOfOperations": [
                        {
                            "day": 0,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 1,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 2,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 3,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 4,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 5,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 6,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "18:00"
                                }
                            ]
                        }
                    ],
                    "specialHours": [
                        {
                            "specialDate": "12/31/2020",
                            "startHour": "09:00",
                            "endHour": "12:00",
                            "isOpen": 0
                        },
                        {
                            "specialDate": "01/01/2021",
                            "startHour": "",
                            "endHour": "",
                            "isOpen": 1
                        }
                    ],
                    "businessStatus": "Open",
                    "reopenDate": "01/01/2021",
                    "keywords": "HairSalons,DaySpas,BeautySalon,BeautySalons,Salons, MassageTherapists",
                    "services": "BeautySalon,HairSpa",
                    "products": "LivingProofDryShampoo,KevinMurphyBlondeAngelWash",
                    "appointmentLink": "http://www.gmail.com",
                    "reservationLink": "http://www.gmail.com",
                    "menuLink": "http://www.gmail.com",
                    "orderAheadLink": "http://www.gmail.com",
                    "impressum": "Thisissampleimpressum",
                    "payment": "Visa,MasterCard,AmericanExpress,DebitCards,Check",
                    "localPhoneNumber": "(973)716-0102",
                    "tollFreePhoneNumber": "",
                    "iosAppURL": "http://www.gmail.com",
                    "androidAppURL": "http://www.gmail.com"
                },
                "media": {
                    "logoUrl": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg",
                    "coverImageUrl": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg",
                    "gmbCover": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/abcd.jpg",
                    "facebookCover": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/fb.jpg"

                },
                 "optOut": {
                    "gmbCoverOptOut": true,
                    "gmbLogoOptOut": true,
                    "fbCoverOptOut": false,
                    "fbLogoOptOut": false,
                    "gmbProfileOptOut": false,
                    "businessProfileOptOut": false
                },
                "covidInfo": {
                    "postDescription": "SampleCovidDesc",
                    "covid19SupportLink": "http://www.covidInfo.com",
                    "virtualCareLink": "http://www.covidInfo.com"
                },
                "bingListing": {
                    "primaryCategoryBing": "Art Restoration Service",
                    "bingDescription": "Sample Bing Description",
                    "bingCategories": [
                        "Art Restoration Service"
                    ],
                    "bingPhoneNumber": "(415) 673-0868"

                },
                 "internalListing": {
                    "description": "ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridic ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridic",
                    "category": "Beauty",
                    "subCategories": [
                        "Eyelash Service",
                        "Nail Salons"
                    ],
                    "displayCategory": "Eyelash Service"
                },
                "facebookListing": {
                    "facebookDescription": "This is sample facebook description",
                    "facebookPhoneNumber": "(415) 673-0868",
                    "categories": [
                        "Science",
                        "Sports"
                    ]
                },
                   "thirdPartyListing": {
                    "thirdPartyCategory": "Towing Service",
                    "thirdPartySubCategories": [
                        "Car Dealer",
                        "Auto Glass Shop"
                    ]
                },
                  "gmbListing": {
                    "googleWebsiteUrl": "http://www.gmail.com",
                    "googleStoreId": "1232133",
                    "googlePhoneNumber": "(973) 716-0007",
                    "primaryCategoryGmb": "Storage facility",
                    "googleDescription": "This is sample description for google",
                    "additionalCategories": [
                        "Snack bar"
                    ],
                    "attributes": {
                        "Accessibility": [
                            {
                                "attributeId": "has_wheelchair_accessible_elevator",
                                "attributeName": "Wheelchair accessible elevator",
                                "value": false
                            }
                        ],
                        "Crowd": [
                            {
                                "attributeId": "welcomes_families",
                                "attributeName": "Family-friendly",
                                "value": true
                            }
                        ]
                    },
                    "foodDelivery":"https://www.ubereats.com",
                    "foodTakeout":"https://www.ubereats.com"
                },
                 "appleListing": {
                    "primaryCategory": "active.amateursportsteams",
                    "additionalCategories": [
                                "active.publicplazas",
                                "auto.autoelectric",
                                "auto.autoelectric"
                        ],
                   "appleLocationAttributes": {
                   "crossbusiness.accessibility_features": [{
                    "attributeId": "accessible_elevator"
                                  }
                            ],
                    "crossbusiness.family_kids": [{
                    "attributeId": "kidsclub"
                            },{
                    "attributeId": "parents_waitingarea"
                                   }
                             ]
                       },
                    "appleActionLinks": [{
                        "id": "quicklinks.airline_book_travel",
                        "deepLinkUrl": "https://www.google.com",
                        "appStoreUrl" : "https://apps.apple.com/your_apps_store_url"
                         }
                        ],
                    "phoneNumber": "+1 201-819-7989"
               },
                 "socialProfileURLs": {
                    "googleUrl": "http://www.google.com/123",
                    "facebookUrl": "http://www.facebook.com/123",
                    "twitterUrl": "http://www.twitter.com/123",
                    "youTubeUrl": "http://www.youtube.com/12",
                    "linkedinUrl": "http://www.linkedin.com/12",
                    "instagramUrl": "http://www.instagram.com/12",
                    "pintrestUrl": "http://www.pinterest.com/12",
                    "bbbUrl": "",
                    "lendingtreeUrl": ""
                },
                "healthcare": {
                    "doctorCategories": [
                        "Allergist-Immunologist > Allergy",
                        "Allergist-Immunologist > General",
                        "Addiction Medicine Specialist > General"
                    ],
                    "isProvider": true,
                    "practiceName": "General Medicine",
                    "firstName": "John",
                    "middleName": "Jack",
                    "surName": "Doe",
                    "npi": "1245319599",
                    "credentials": "MD",
                    "university": "Sample text",
                    "hospitalAffiliations": "Sample text",
                    "insurancesAccepted": "Sample text"
                }
            }



+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 400

    [2296][]

+ Response 400

    [2297][]

+ Response 400

    [2290][]


## Update Listing [/v1/listing/{businessNumber}/update]
The Update Listing API will update the location details on all your listings sites.


### Update Listing [PUT]

+ Parameters

    + businessNumber: 12345678 (number, required) - Business Number.

+ Request (application/json)


    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


   + Attributes
        + businessInfo - Business Information
            + name: Drs. Chalker and Peterson, A Dental Partnership (required, string) - Name of the Business/Location. Should be Max 1000 characters long.
            + phone (required, string) - Your official Business Phone number. Format is (xxx) xxx-xxxx.
            + websiteUrl: http://www.diecispa.org/ (string) - Business website url.
            + emailId: 4568@livelovespa.com (string) - Business Email ID.
            + isAddressHidden: note that this isn’t supported by all sites Possible Values  “Yes” or “No” (string) - If your business doesn’t have a place for your customers to visit, then you can hide your street address.
            + isServiceAreaProvider: Possible Values “Yes” or “No (string) - If you deliver or provide service at customer locations.
            + serviceAreas (array) - Locations where you deliver or provide service (applicable if isServiceAreaProvider is 'Yes').NOTE: Maximum service areas that can be provided are 10.
                + (object)
                    + description (string) - Area, City, State, Zip, Country. e.g.  "1735 Berryessa Rd, San Jose, CA 95133, USA", “Onalaska, WI, USA”.
            + location (object) - Business address
                + address1: 7405 Morro Rd (string) - Address of the business.
                + address2: Suite 102 (string) - Address of the business.
                + city: Atascadero (string) - City (Max 1000 character long).
                + state: CA (string) - State (2 character state code).
                + countryCode: US (string) - Country Code (2 character country code).
                + zip: 93422 (required,string) - Zip Code.
        + additionalInfo - Business Additional Information
            + establishedYear: 2012 (number) - Year established
            + timezone: America/Los_Angeles (string)- Timezone of the business.
            + languages: English, Spanish (array) - Languages.
            + moreHours (array) -  Google more hours for specific services you offer such as delivery, takeout, drive-through, and pickup (see: Supported More Hours). Google more hours can only be added if google primary category is added. To get specific types of more hours, please refer to Get supported more hours type api. NOTE: In more hours, day 0 denotes Monday, day 1 denotes Tuesday, …, day 6 denotes Sunday.
            Please refer /listing/get-more-hours-type/get-more-hours-type api to get google more hours type. Possible Values Breakfast, Lunch, Pickup, etc.
            + wholeWeekOperating: 0 (number) - Whether your business is open 24/7, Possible Values - 0 or 1.
            + hoursOfOperations (array, required) - Regular hours: Regular working hours of the business for each day from Monday to Sunday.
                + (object)
                    + day: 5 (number) - 0(Monday), 1(Tuesday), 2(Wednesday) and so on.
                    + workingHours (array) - Working hours of the business
                        + (object)
                            + startHour: 7:00 (string) - Start hour 9:00 (9 AM), 18:00 (6 PM)
                            + endHour: 17:30 (string) - End hour  9:00 (9 AM), 18:00 (6 PM)
                    + isOpen: 1 (number) - 0 (Business closed today), 1 (open)
                    + comment: By appointment only (string) - Add the special instruction.
            + specialHours (array) - For special holiday days, where you may have limited hours of operation and don’t want to change your preset regular hours. These would only be applicable only for the dates they are set for.
                + (object)
                    + specialDate: 10/20/2023 (string) - It should be "MM/DD/YYYY".
                    + startHour: 7:00 (string) - Start hour 9:00 (9 AM), 18:00 (6 PM)
                    + endHour: 17:30 (string) - End hour  9:00 (9 AM), 18:00 (6 PM)
                    + isOpen: 1 (number) - 0(Business closed today), 1 (open)
            + businessStatus : Open (string) - It will update your business status on lisitng page and If business will choose "Temporarily closed" then Reopen date is mandatry. [Open, Temporarily closed, Permanently closed]
            + reopenDate : 10/20/2022 - Reopen date is applicable only when the status is "temporarily closed". It should be "MM/DD/YYYY" format.
            + services:  Other Dental Specialties, Orthodontists, Dentistry (required,string) - Services offered by the business. Useful in SEO. (Comma separated list of services offered) Business services cannot be more than 1000 characters.
            + keywords: Dentists Atascadero CA, Other Dental Specialties Atascadero CA, Orthodontists Atascadero CA (string)- Important keywords related to the business. Useful in SEO. (Comma separated list of important keywords) Business keywords cannot be more than 1000 characters.
            + products: Invisalign, Cookies Set of 8, Brochure design & prints (string) - Products about the business. Useful in SEO and Business products cannot be more than 1000 characters.
            + appointmentLink (string)- Let customers reserve tables by linking them to your reservations page.
            + menuLink (string) - Show customers what you serve by linking them to your menu.
            + orderAheadLink (string) - Let customers place delivery and pick-up orders by linking them to your ordering page.
            + impressum (string) - In certain countries (like Austria, Germany and Switzerland), businesses may be required by law to include a statement of ownership on their web presence.
            + payment: Paypal, Visa, Master Card (string) - Payment Type (Max 250 character long).
            + localPhoneNumber (string)- Local phone number.
            + tollFreePhoneNumber (string) - Tollfree number.
            + androidAppURL: http://www.gmail.com (string)- Android app url.
            + iosAppURL: http://www.gmail.com (string) - IOS app url.
        + media (object) - Media details.
            + logoUrl: http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg (string) - This logo will pushed to your listings sites such as Google, Facebook, Bing, Birdeye and all the other secondary listings sites. Format: JPG, JPEG, PNG. Minimum 250 x 250px. Recommended: 720 X 720 px. 10 KB min.
            + coverImageUrl: http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg (string) - This cover photo will pushed to your listings sites such as Birdeye and all the other secondary listings sites. Cover image URL for business will be displayed on custom review site.  Format: JPG, JPEG, PNG. Minimum 1110 x 374px. 10 KB min.
            + gmbCover: http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/abcd.jpg (string) - Google Cover Image Url.
            + facebookCover: http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/fb.jpg (string) - Facebook Cover Image Url.
        + optOut (object) - Opt out section
            + gmbLogoOptOut: true (boolean)- Update profile photo on your google my business page.
                                                    Select ‘true’ if you want to opt out from updating the logo on your GBP page.
                                                    Select ‘false’ if you want to opt in to updating the logo on your GBP page.
            + fbLogoOptOut: false (boolean) - Update profile photo on your facebook profile.
                                                    Select ‘true’ if you want to opt out from updating the logo on your FB business page.
                                                    Select ‘false’ if you want to opt in to updating the logo on your FB business page.
            + gmbCoverOptOut: true (boolean) - Update cover photo on your google my business page.
                                                    Select ‘true’ if you want to opt out from updating the cover photo on your GBP page.
                                                    Select ‘false’ if you want to opt in to updating the cover photo on your GBP page.
            + fbCoverOptOut: true (boolean) - Update cover photo on your facebook profile.
                                                    Select ‘true’ if you want to opt out from updating the cover photo on your FB business page.
                                                    Select ‘false’ if you want to opt in to updating the cover photo on your FB business page.
            + gmbProfileOptOut: false (boolean) - Opt out from the google specific section on the profile page.
                                                        Select ‘true’ if you want to opt out from updating information such as category and related attributes and more hours on your Google Business Profile page.
                                                        Select ‘false’ if you want to opt in to updating information such as category and related attributes and more hours on your Google Business Profile page.
            + businessProfileOptOut: true (boolean) - Opt out from the business profile section.
                                                            Select ‘true’ if you want to opt out from updating NAP information on your Google Business Profile page.
                                                            Select ‘false’ if you want to opt in to updating NAP information on your Google Business Profile page.
        + covidInfo (object) - Provide this data for updating any COVID specific information you want to share with your customers.
            + postDescription (string) - This information is posted and updated on your Google business profile page and your FB business page.
            + covid19SupportLink (string) - Should be a valid covid19 support url
            + virtualCareLink (string) - Should be a valid url virtual care link
        + bingListing (object) - This data will be used to update your Bing listing.
            + primaryCategoryBing (string) - Primary category of bing.
            + bingCategories (array) - You can add a maximum of up to 3 categories.
            + bingPhoneNumber (string) - You can provide a phone number which will be pushed only to your Bing listing site and will override the primary phone number set.
            + bingDescription (string) - An ‘About the business description’. Bing description cannot be more than 4096 characters.
        + internalListing (object) - Provide data for microsite listing purpose.
            + description (required, string) - An ‘about your business’ description. Business description cannot be more than 5000 characters and cannot be less than 200 characters.
            + subCategories (array) - Primary category of business.
            + subcategory (string) - You can add up to 3 subcategories.
            + displayCategory (string) - Choose one of the category either from primary category or from sub categories.
        + facebookListing (object) - This data will be used to update your Facebook business page/ listing.
            + facebookPhoneNumber (string) - Phone number for facebook profile. This phone number will override the main phone number on your Facebook business page
            + categories (array) - You can add up to 3 categories.
            + facebookDescription (string) - An ‘about your business’ description. Facebook description cannot be more than 255 characters.
        + gmbListing (object) - This data will be used to update your Google Business Profile/ listing.
            + googleWebsiteUrl (string) - Website url will update on google listing. This website URL will override your existing website URL on your Google business profile.
            + googlePhoneNumber (string) - You can provide a phone number which will be pushed only to your google listing site and will override the primary phone number set.
            + googleStoreId (string) - Store id for google.
            + primaryCategoryGmb (string) - Primary category of google.
            + additionalCategories (array) - You can add up to 5 subcategories.
            + googleDescription (string) - An ‘about your business’ description. Google description cannot be more than 750 characters.
            + attributes (object) - Google my business attributes are highly visible statements about your business that appear on your Google My Business listing. Supported attributes are
                    Accessibility,Amenities,Crowd,Dining options,Highlights,Planning,Offerings,Health & safety.
            + foodDelivery (string) - Enter the redirect URL where customers can place delivery orders.This field is applicable for hospitality business and is category dependent.Example http://www.ubereats.com
            + foodTakeout (string) - Enter the redirect URL where customers can place 'takeout' food orders. This field is applicable for hospitality business and is category dependent.Example : http://www.ubereats.com
        + appleListing (object) - This data will be used to update your Google Business Profile/ listing.
            + phoneNumber (string) - This will be shown as the primary phoneNumber on your Apple maps place card and will replace/ override your business info phone number.
            + primaryCategory (string) - Primary category of apple ,This is a mandatory field. Please pass an acceptable category name/ id by first getting the approved list using the Get category API.
            + additionalCategories (array) - You can add upto 5 additional categories most suitable for your business.
            + appleLocationAttributes (object) - Apple connect attributes are highly visible statements about your business that appear on your Apple Business listing. Few Apple Supported attributes are:
                  crossbusiness.family_kids.kids_playarea, crossbusiness.barservice.happyhour Crossbusiness.attire.casual .These help your potential customers understand more about your business.
            + appleActionLinks (object) - Apple actionLinks are shown on the Apple maps place card which helps users to access or redirect to some website or app store. These are typical CTA’s that you would like to expose to your potential customers. Apple action links can only be selected from pre-defined set of action links which you can get using the GET Action links API.
        + thirdPartyListing (object) - This data will be used to update your secondary listings sites.
            + thirdPartyCategory: Towing Service (string) - Primary business category for third party listings. Note: This is a Mandatory field if vendor is applicable.
            + thirdPartySubCategories: Car Dealer, Auto Glass Shop (string) - Additional sub categories. You can set a maximum of 3 sub categories. Note: This is a Mandatory field if thirdPartyCategory is available.
        + socialProfileURLs (object) - Profile URLs for business on top rated social sites
            + facebookUrl: http://www.facebook.com/ChalkerandPetersonDental (string) - Facebook URL.
            + twitterUrl: https://twitter.com/DrsChaAndPet (string) - Business Twitter URL.
            + linkedInUrl: https://linkedin.com/DrsChaAndPet (string) - Business LinkedId URL.
            + googleUrl: https://plus.google.com/103957250846354895095/about?gl=US&hl=en-US (string)- Business Google URL.
            + youTubeUrl: https://www.youtube.com/channel/UCDNP0M75ySA5qt0So2F8Xxw (string)- Business Youtube URL.
            + pintrestUrl - Business Pinterest URL.
            + bbbUrl - Business BB URL.
            + lendingtreeUrl - Business Lending Tree URL.
        + healthcare (object) - This section is only applicable if you have purchased the health care listings plan and have been onboarded on the same.
            + doctorCategories: Allergist-Immunologist > Allergy, Allergist-Immunologist > General (array) - This is the doctor specific category your business belongs to. Please refer to the sheet "Doctor Specific Categories" to get the possible values.
            + isProvider: true (boolean) -  If provider then select value true. If practice then select value false. This is a true/false toggle for determining if the location is a provider or not.
            + practiceName: General Medicine (string) - Name of the practice.Must be less than 191 characters.
            + firstName: John (string) -  First name of the provider.
            + middleName: Jack (string)  -  Middle name of the provider.
            + surName: Doe (string)  -  Surname of the provider
            + npi: 1245319599  (number) - National Provider Identifier - NPI. Must be 10 digits
            + credentials: MD (string) - University of the provider/practice. Must be less than 25 characters
            + university: Sample text (string) -  University of the provider/practice. Must be less than 255 characters
            + hospitalAffiliations: Sample text (string) - Hospital Affiliations of the provider/practice. Must be less than 150 characters
            + insurancesAccepted: Sample text (string) - Insurance Accepted of the provider/practice.  Must be less than 50 characters


    + Body

            {
                "businessInfo": {
                    "name": "Dieci Lifestyle Spa",
                    "phone": "(973) 716-0007",
                    "websiteUrl": "http://www.diecispa.org/",
                    "emailId": "example@birdeye.com",
                    "isAddressHidden": "No",
                    "isServiceAreaProvider": "No",
                    "serviceAreas": [
                      {
                        "description": "Van An, Berryessa Road, San Jose, CA, USA"
                      },
                      {
                        "description": "Santa Clara, CA, USA"
                      }
                    ],
                    "location": {
                        "address1": "90 W Mount Pleasant Ave",
                        "address2": "(btwn Preston Dr. &amp; N. Mitchell Ave.)",
                        "city": "Livingston",
                        "state": "NJ",
                        "zip": "07039",
                        "countryCode": "US"
                    }
                },
                "additionalInfo": {
                    "establishedYear": "2022",
                    "timezone": "America/Los_Angeles",
                    "languages": [
                        "English",
                        "Hindi"
                    ],
                "moreHours": {
                              "Dinner": [
                                {
                                  "day": 0,
                                  "isOpen": 0,
                                  "workingHours": [
                                    {
                                      "startHour": "",
                                      "endHour": ""
                                    }
                                  ]
                                },
                                {
                                  "day": 1,
                                  "isOpen": 0,
                                  "workingHours": [
                                    {
                                      "startHour": "",
                                      "endHour": ""
                                    }
                                  ]
                                },
                                {
                                  "day": 2,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "09:00",
                                      "endHour": "20:10"
                                    }
                                  ]
                                },
                                {
                                  "day": 3,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "09:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 4,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "9:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 5,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "09:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 6,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "00:00",
                                      "endHour": "20:30"
                                    }
                                  ]
                                }
                              ],
                              "Delivery": [
                                {
                                  "day": 0,
                                  "isOpen": 0,
                                  "workingHours": [
                                    {
                                      "startHour": "",
                                      "endHour": ""
                                    }
                                  ]
                                },
                                {
                                  "day": 1,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "7:00",
                                      "endHour": "09:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 2,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "02:00",
                                      "endHour": "09:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 3,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "00:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 4,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "0:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 5,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "0:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 6,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "1:00",
                                      "endHour": "1:00"
                                    }
                                  ]
                                }
                              ]
                            },
                    "wholeWeekOperating": 0,
                    "hoursOfOperations": [
                        {
                            "day": 0,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 1,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 2,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 3,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 4,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 5,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 6,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "18:00"
                                }
                            ]
                        }
                    ],
                    "specialHours": [
                        {
                            "specialDate": "12/31/2020",
                            "startHour": "09:00",
                            "endHour": "12:00",
                            "isOpen": 0
                        },
                        {
                            "specialDate": "01/01/2021",
                            "startHour": "",
                            "endHour": "",
                            "isOpen": 1
                        }
                    ],
                    "businessStatus": "Open",
                    "reopenDate": "01/01/2021",
                    "keywords": "HairSalons,DaySpas,BeautySalon,BeautySalons,Salons, MassageTherapists",
                    "services": "BeautySalon,HairSpa",
                    "products": "LivingProofDryShampoo,KevinMurphyBlondeAngelWash",
                    "appointmentLink": "http://www.gmail.com",
                    "reservationLink": "http://www.gmail.com",
                    "menuLink": "http://www.gmail.com",
                    "orderAheadLink": "http://www.gmail.com",
                    "impressum": "Thisissampleimpressum",
                    "payment": "Visa,MasterCard,AmericanExpress,DebitCards,Check",
                    "localPhoneNumber": "(973)716-0102",
                    "tollFreePhoneNumber": "",
                    "iosAppURL": "http://www.gmail.com",
                    "androidAppURL": "http://www.gmail.com"
                },
                "media": {
                    "logoUrl": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg",
                    "coverImageUrl": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg",
                    "gmbCover": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/abcd.jpg",
                    "facebookCover": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/fb.jpg"
                },
                 "optOut": {
                    "gmbCoverOptOut": true,
                    "gmbLogoOptOut": true,
                    "fbCoverOptOut": false,
                    "fbLogoOptOut": false,
                    "gmbProfileOptOut": false,
                    "businessProfileOptOut": false
                },
                "covidInfo": {
                    "postDescription": "SampleCovidDesc",
                    "covid19SupportLink": "http://www.covidInfo.com",
                    "virtualCareLink": "http://www.covidInfo.com"
                },
                "bingListing": {
                    "primaryCategoryBing": "Art Restoration Service",
                    "bingDescription": "Sample Bing Description",
                    "bingCategories": [
                        "Art Restoration Service"
                    ],
                    "bingPhoneNumber": "(415) 673-0868"

                },
                 "internalListing": {
                    "description": "Alok ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridic Alok ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridic",
                    "category": "Beauty",
                    "subCategories": [
                        "Eyelash Service",
                        "Nail Salons"
                    ],
                    "displayCategory": "Eyelash Service"
                },
                "facebookListing": {
                    "facebookDescription": "This is sample facebook description",
                    "facebookPhoneNumber": "(415) 673-0868",
                    "categories": [
                        "Science",
                        "Sports"
                    ]
                },
                   "thirdPartyListing": {
                    "thirdPartyCategory": "Towing Service",
                    "thirdPartySubCategories": [
                        "Car Dealer",
                        "Auto Glass Shop"
                    ]
                },
                  "gmbListing": {
                    "googleWebsiteUrl": "http://www.gmail.com",
                    "googleStoreId": "1232133",
                    "googlePhoneNumber": "(973) 716-0007",
                    "primaryCategoryGmb": "Storage facility",
                    "googleDescription": "This is sample description for google",
                    "additionalCategories": [
                        "Snack bar"
                    ],
                    "attributes": {
                        "Accessibility": [
                            {
                                "attributeId": "has_wheelchair_accessible_elevator",
                                "attributeName": "Wheelchair accessible elevator",
                                "value": false
                            }
                        ],
                        "Crowd": [
                            {
                                "attributeId": "welcomes_families",
                                "attributeName": "Family-friendly",
                                "value": true
                            }
                        ]
                    },
                    "foodDelivery":"https://www.ubereats.com",
                    "foodTakeout":"https://www.ubereats.com"
                },
                  "appleListing": {
                    "primaryCategory": "active.amateursportsteams",
                    "additionalCategories": [
                                "active.publicplazas",
                                "auto.autoelectric",
                                "auto.autoelectric"
                        ],
                   "appleLocationAttributes": {
                   "crossbusiness.accessibility_features": [{
                    "attributeId": "accessible_elevator"
                                  }
                            ],
                    "crossbusiness.family_kids": [{
                    "attributeId": "kidsclub"
                            },{
                    "attributeId": "parents_waitingarea"
                                   }
                             ]
                       },
                    "appleActionLinks": [{
                        "id": "quicklinks.airline_book_travel",
                        "deepLinkUrl": "https://www.google.com",
                        "appStoreUrl" : "https://apps.apple.com/your_apps_store_url"
                         }
                        ],
                    "phoneNumber": "+1 201-819-7989"
               },
                  "socialProfileURLs": {
                    "googleUrl": "http://www.google.com/123",
                    "facebookUrl": "http://www.facebook.com/123",
                    "twitterUrl": "http://www.twitter.com/123",
                    "youTubeUrl": "http://www.youtube.com/12",
                    "linkedinUrl": "http://www.linkedin.com/12",
                    "instagramUrl": "http://www.instagram.com/12",
                    "pintrestUrl": "http://www.pinterest.com/12",
                    "bbbUrl": "",
                    "lendingtreeUrl": ""
                },
                "healthcare": {
                    "doctorCategories": [
                        "Allergist-Immunologist > Allergy",
                        "Allergist-Immunologist > General",
                        "Addiction Medicine Specialist > General"
                    ],
                    "isProvider": true,
                    "practiceName": "General Medicine",
                    "firstName": "John",
                    "middleName": "Jack",
                    "surName": "Doe",
                    "npi": "1245319599",
                    "credentials": "MD",
                    "university": "Sample text",
                    "hospitalAffiliations": "Sample text",
                    "insurancesAccepted": "Sample text"
                }
            }



+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 400

    [2296][]

+ Response 400

    [2297][]

+ Response 400

    [2290][]


## Get Listing [/v1/listing/{businessNumber}/get]
The Get Listing API will get the listing information for the given business number/ ID.


### Get Listing [GET]

+ Parameters

    + businessNumber: 12345678 (number, required) - Business Number.

+ Request (application/json)


    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


+ Response 200 (application/json)

   + Attributes
        + businessInfo - Business Information
            + name: Drs. Chalker and Peterson, A Dental Partnership (string) - Name of the Business/Location. Should be Max 1000 characters long.
            + phone (required, string) - Your official Business Phone number. Format is (xxx) xxx-xxxx.
            + websiteUrl: http://www.diecispa.org/ (string) - Business website url.
            + emailId: 4568@livelovespa.com (string) - Business Email ID.
            + isAddressHidden: note that this isn’t supported by all sites Possible Values  “Yes” or “No” (string) - If your business doesn’t have a place for your customers to visit, then you can hide your street address.
            + isServiceAreaProvider: Possible Values “Yes” or “No (string) - If you deliver or provide service at customer locations.
            + serviceAreas (array) - Locations where you deliver or provide service (applicable if isServiceAreaProvider is 'Yes').NOTE: Maximum service areas that can be provided are 10.
                + (object)
                    + description (string) - Area, City, State, Zip, Country. e.g.  "1735 Berryessa Rd, San Jose, CA 95133, USA", “Onalaska, WI, USA”.
                    + placeId (string) - ChIJk8EIXIG3j4ARwL_Ao3ykdeQ
            + location (object) - Business address
                + address1: 7405 Morro Rd (string) - Address of the business.
                + address2: Suite 102 (string) - Address of the business.
                + city: Atascadero (string) - City (Max 1000 character long).
                + state: CA (string) - State (2 character state code).
                + countryCode: US (string) - Country Code (2 character country code).
                + zip: 93422 (string) - Zip Code.
        + additionalInfo - Business Additional Information
            + establishedYear: 2012 (number) - Year established
            + timezone: America/Los_Angeles (string)- Timezone of the business.
            + languages: English, Spanish (array) - Languages.
            + moreHours (array) -  Google more hours for specific services you offer such as delivery, takeout, drive-through, and pickup (see: Supported More Hours). Google more hours can only be added if google primary category is added. To get specific types of more hours, please refer to Get supported more hours type api. NOTE: In more hours, day 0 denotes Monday, day 1 denotes Tuesday, …, day 6 denotes Sunday.
            Please refer /listing/get-more-hours-type/get-more-hours-type api to get google more hours type. Possible Values Breakfast, Lunch, Pickup, etc.
            + wholeWeekOperating: 0 (number) - Whether your business is open 24/7, Possible Values - 0 or 1.
            + hoursOfOperations (array, required) - Regular hours: Regular working hours of the business for each day from Monday to Sunday.
                + (object)
                    + day: 5 (number) - 0(Monday), 1(Tuesday), 2(Wednesday) and so on.
                    + workingHours (array) - Working hours of the business
                        + (object)
                            + startHour: 7:00 (string) - Start hour 9:00 (9 AM), 18:00 (6 PM)
                            + endHour: 17:30 (string) - End hour  9:00 (9 AM), 18:00 (6 PM)
                    + isOpen: 1 (number) - 0 (Business closed today), 1 (open)
                    + comment: By appointment only (string) - Add the special instruction.
            + specialHours (array) - For special holiday days, where you may have limited hours of operation and don’t want to change your preset regular hours. These would only be applicable only for the dates they are set for.
                + (object)
                    + specialDate: 10/20/2023 (string) - It should be "MM/DD/YYYY".
                    + startHour: 7:00 (string) - Start hour 9:00 (9 AM), 18:00 (6 PM)
                    + endHour: 17:30 (string) - End hour  9:00 (9 AM), 18:00 (6 PM)
                    + isOpen: 1 (number) - 0(Business closed today), 1 (open)
            + businessStatus : Open (string) - It will update your business status on lisitng page and If business will choose "Temporarily closed" then Reopen date is mandatry. [Open, Temporarily closed, Permanently closed]
            + reopenDate : 10/20/2022 - Reopen date is applicable only when the status is "temporarily closed". It should be "MM/DD/YYYY" format.
            + services:  Other Dental Specialties, Orthodontists, Dentistry (required,string) - Services offered by the business. Useful in SEO. (Comma separated list of services offered) Business services cannot be more than 1000 characters.
            + keywords: Dentists Atascadero CA, Other Dental Specialties Atascadero CA, Orthodontists Atascadero CA (string)- Important keywords related to the business. Useful in SEO. (Comma separated list of important keywords) Business keywords cannot be more than 1000 characters.
            + products: Invisalign, Cookies Set of 8, Brochure design & prints (string) - Products about the business. Useful in SEO and Business products cannot be more than 1000 characters.
            + appointmentLink (string)- Let customers reserve tables by linking them to your reservations page.
            + menuLink (string) - Show customers what you serve by linking them to your menu.
            + orderAheadLink (string) - Let customers place delivery and pick-up orders by linking them to your ordering page.
            + impressum (string) - In certain countries (like Austria, Germany and Switzerland), businesses may be required by law to include a statement of ownership on their web presence.
            + payment: Paypal, Visa, Master Card (string) - Payment Type (Max 250 character long).
            + localPhoneNumber (string)- Local phone number.
            + tollFreePhoneNumber (string) - Tollfree number.
            + androidAppURL (string)- Android app url.
            + iosAppURL (string) - IOS app url.
        + media (object) - Media details.
            + logoUrl: http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg (string) - This logo will pushed to your listings sites such as Google, Facebook, Bing, Birdeye and all the other secondary listings sites. Format: JPG, JPEG, PNG. Minimum 250 x 250px. Recommended: 720 X 720 px. 10 KB min.
            + coverImageUrl: http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg (string) - This cover photo will pushed to your listings sites such as Birdeye and all the other secondary listings sites. Cover image URL for business will be displayed on custom review site.  Format: JPG, JPEG, PNG. Minimum 1110 x 374px. 10 KB min.
            + gmbCover: http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/abcd.jpg (string) - Google Cover Image Url.
            + facebookCover: http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/fb.jpg (string) - Facebook Cover Image Url.
        + optOut (object) - Opt out section
            + gmbLogoOptOut: true (boolean)- Update profile photo on your google my business page.
                                                    Select ‘true’ if you want to opt out from updating the logo on your GBP page.
                                                    Select ‘false’ if you want to opt in to updating the logo on your GBP page.
            + fbLogoOptOut: false (boolean) - Update profile photo on your facebook profile.
                                                    Select ‘true’ if you want to opt out from updating the logo on your FB business page.
                                                    Select ‘false’ if you want to opt in to updating the logo on your FB business page.
            + gmbCoverOptOut: true (boolean) - Update cover photo on your google my business page.
                                                    Select ‘true’ if you want to opt out from updating the cover photo on your GBP page.
                                                    Select ‘false’ if you want to opt in to updating the cover photo on your GBP page.
            + fbCoverOptOut: true (boolean) - Update cover photo on your facebook profile.
                                                    Select ‘true’ if you want to opt out from updating the cover photo on your FB business page.
                                                    Select ‘false’ if you want to opt in to updating the cover photo on your FB business page.
            + gmbProfileOptOut: false (boolean) - Opt out from the google specific section on the profile page.
                                                        Select ‘true’ if you want to opt out from updating information such as category and related attributes and more hours on your Google Business Profile page.
                                                        Select ‘false’ if you want to opt in to updating information such as category and related attributes and more hours on your Google Business Profile page.
            + businessProfileOptOut: true (boolean) - Opt out from the business profile section.
                                                            Select ‘true’ if you want to opt out from updating NAP information on your Google Business Profile page.
                                                            Select ‘false’ if you want to opt in to updating NAP information on your Google Business Profile page.
        + covidInfo (object) - Provide this data for updating any COVID specific information you want to share with your customers.
            + postDescription (string) - This information is posted and updated on your Google business profile page and your FB business page.
            + covid19SupportLink (string) - Should be a valid covid19 support url
            + virtualCareLink (string) - Should be a valid url virtual care link
        + bingListing (object) - This data will be used to update your Bing listing.
            + primaryCategoryBing (string) - Primary category of bing.
            + bingCategories (array) - You can add a maximum of up to 3 categories.
            + bingPhoneNumber (string) - You can provide a phone number which will be pushed only to your Bing listing site and will override the primary phone number set.
            + bingDescription (string) - An ‘About the business description’. Bing description cannot be more than 4096 characters.
        + internalListing (object) - Provide data for microsite listing purpose.
            + description (required, string) - An ‘about your business’ description. Business description cannot be more than 5000 characters and cannot be less than 200 characters.
            + subCategories (array) - Primary category of business.
            + subcategory (string) - You can add up to 3 subcategories.
            + displayCategory (string) - Choose one of the category either from primary category or from sub categories.
        + facebookListing (object) - This data will be used to update your Facebook business page/ listing.
            + facebookPhoneNumber (string) - Phone number for facebook profile. This phone number will override the main phone number on your Facebook business page
            + categories (array) - You can add up to 3 categories.
            + facebookDescription (string) - An ‘about your business’ description. Facebook description cannot be more than 255 characters.
        + gmbListing (object) - This data will be used to update your Google Business Profile/ listing.
            + googleWebsiteUrl (string) - Website url will update on google listing. This website URL will override your existing website URL on your Google business profile.
            + googlePhoneNumber (string) - You can provide a phone number which will be pushed only to your google listing site and will override the primary phone number set.
            + googleStoreId (string) - Store id for google.
            + primaryCategoryGmb (string) - Primary category of google.
            + additionalCategories (array) - You can add up to 5 subcategories.
            + googleDescription (string) - An ‘about your business’ description. Google description cannot be more than 750 characters.
            + attributes (object) - Google my business attributes are highly visible statements about your business that appear on your Google My Business listing. Supported attributes are
                    Accessibility,Amenities,Crowd,Dining options,Highlights,Planning,Offerings,Health & safety.
            + foodDelivery (string) - Enter the redirect URL where customers can place delivery orders.This field is applicable for hospitality business and is category dependent.Example http://www.ubereats.com
            + foodTakeout (string) - Enter the redirect URL where customers can place 'takeout' food orders. This field is applicable for hospitality business and is category dependent.Example : http://www.ubereats.com
        + appleListing (object) - This data will be used to update your Google Business Profile/ listing.
            + phoneNumber (string) - This will be shown as the primary phoneNumber on your Apple maps place card and will replace/ override your business info phone number.
            + primaryCategory (string) - Primary category of apple ,This is a mandatory field. Please pass an acceptable category name/ id by first getting the approved list using the Get category API.
            + additionalCategories (array) - You can add upto 5 additional categories most suitable for your business.
            + appleLocationAttributes (object) - Apple connect attributes are highly visible statements about your business that appear on your Apple Business listing. Few Apple Supported attributes are:
               crossbusiness.family_kids.kids_playarea, crossbusiness.barservice.happyhour Crossbusiness.attire.casual .These help your potential customers understand more about your business.
            + appleActionLinks (object) - Apple actionLinks are shown on the Apple maps place card which helps users to access or redirect to some website or app store. These are typical CTA’s that you would like to expose to your potential customers. Apple action links can only be selected from pre-defined set of action links which you can get using the GET Action links API.
        + thirdPartyListing (object) - This data will be used to update your secondary listings sites.
            + thirdPartyCategory: Towing Service (string) - Primary business category for third party listings. Note: This is a Mandatory field if vendor is applicable.
            + thirdPartySubCategories: Car Dealer, Auto Glass Shop (string) - Additional sub categories. You can set a maximum of 3 sub categories. Note: This is a Mandatory field if thirdPartyCategory is available.
        + socialProfileURLs (object) - Profile URLs for business on top rated social sites
            + facebookUrl: http://www.facebook.com/ChalkerandPetersonDental (string) - Facebook URL.
            + twitterUrl: https://twitter.com/DrsChaAndPet (string) - Business Twitter URL.
            + linkedInUrl: https://linkedin.com/DrsChaAndPet (string) - Business LinkedId URL.
            + googleUrl: https://plus.google.com/103957250846354895095/about?gl=US&hl=en-US (string)- Business Google URL.
            + youTubeUrl: https://www.youtube.com/channel/UCDNP0M75ySA5qt0So2F8Xxw (string)- Business Youtube URL.
            + pintrestUrl - Business Pinterest URL.
            + bbbUrl - Business BB URL.
            + lendingtreeUrl - Business Lending Tree URL.
        + healthcare (object) - This section is only applicable if you have purchased the health care listings plan and have been onboarded on the same.
            + doctorCategories: Allergist-Immunologist > Allergy, Allergist-Immunologist > General (array) - This is the doctor specific category your business belongs to. Please refer to the sheet "Doctor Specific Categories" to get the possible values.
            + isProvider: true (boolean) -  If provider then select value true. If practice then select value false. This is a true/false toggle for determining if the location is a provider or not.
            + practiceName: General Medicine (string) - Name of the practice.Must be less than 191 characters.
            + firstName: John (string) -  First name of the provider.
            + middleName: Jack (string)  -  Middle name of the provider.
            + surName: Doe (string)  -  Surname of the provider
            + npi: 1245319599  (number) - National Provider Identifier - NPI. Must be 10 digits
            + credentials: MD (string) - University of the provider/practice. Must be less than 25 characters
            + university: Sample text (string) -  University of the provider/practice. Must be less than 255 characters
            + hospitalAffiliations: Sample text (string) - Hospital Affiliations of the provider/practice. Must be less than 150 characters
            + insurancesAccepted: Sample text (string) - Insurance Accepted of the provider/practice.  Must be less than 50 characters


    + Body

            {
                "businessInfo": {
                    "name": "Dieci Lifestyle Spa",
                    "phone": "(973) 716-0007",
                    "websiteUrl": "http://www.diecispa.org/",
                    "emailId": "example@birdeye.com",
                    "isAddressHidden": "No",
                    "isServiceAreaProvider": "No",
                    "serviceAreas": [
                      {
                        "description": "Van An, Berryessa Road, San Jose, CA, USA",
                        "placeId": "ChIJc_clvUTMj4AR_K0M2GO2CYg"
                      },
                      {
                        "description": "Santa Clara, CA, USA",
                        "placeId": "ChIJk8EIXIG3j4ARwL_Ao3ykdeQ"
                      }
                    ],
                    "location": {
                        "address1": "90 W Mount Pleasant Ave",
                        "address2": "(btwn Preston Dr. &amp; N. Mitchell Ave.)",
                        "city": "Livingston",
                        "state": "NJ",
                        "zip": "07039",
                        "countryCode": "US"
                    }
                },
                "additionalInfo": {
                    "establishedYear": "2022",
                    "timezone": "America/Los_Angeles",
                    "languages": [
                        "English",
                        "Hindi"
                    ],
                    "moreHours": {
                              "Dinner": [
                                {
                                  "day": 0,
                                  "isOpen": 0,
                                  "workingHours": [
                                    {
                                      "startHour": "",
                                      "endHour": ""
                                    }
                                  ]
                                },
                                {
                                  "day": 1,
                                  "isOpen": 0,
                                  "workingHours": [
                                    {
                                      "startHour": "",
                                      "endHour": ""
                                    }
                                  ]
                                },
                                {
                                  "day": 2,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "09:00",
                                      "endHour": "20:10"
                                    }
                                  ]
                                },
                                {
                                  "day": 3,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "09:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 4,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "9:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 5,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "09:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 6,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "00:00",
                                      "endHour": "20:30"
                                    }
                                  ]
                                }
                              ],
                              "Delivery": [
                                {
                                  "day": 0,
                                  "isOpen": 0,
                                  "workingHours": [
                                    {
                                      "startHour": "",
                                      "endHour": ""
                                    }
                                  ]
                                },
                                {
                                  "day": 1,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "7:00",
                                      "endHour": "09:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 2,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "02:00",
                                      "endHour": "09:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 3,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "00:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 4,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "0:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 5,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "0:00",
                                      "endHour": "11:30"
                                    }
                                  ]
                                },
                                {
                                  "day": 6,
                                  "isOpen": 1,
                                  "workingHours": [
                                    {
                                      "startHour": "1:00",
                                      "endHour": "1:00"
                                    }
                                  ]
                                }
                              ]
                            },
                            "wholeWeekOperating": 0,
                    "hoursOfOperations": [
                        {
                            "day": 0,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 1,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 2,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 3,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 4,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 5,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "19:00"
                                }
                            ]
                        },
                        {
                            "day": 6,
                            "isOpen": 1,
                            "workingHours": [
                                {
                                    "startHour": "09:00",
                                    "endHour": "13:30"
                                },
                                {
                                    "startHour": "14:30",
                                    "endHour": "18:00"
                                }
                            ]
                        }
                    ],
                    "specialHours": [
                        {
                            "specialDate": "12/31/2020",
                            "startHour": "09:00",
                            "endHour": "12:00",
                            "isOpen": 0
                        },
                        {
                            "specialDate": "01/01/2021",
                            "startHour": "",
                            "endHour": "",
                            "isOpen": 1
                        }
                    ],
                    "businessStatus": "Open",
                    "reopenDate": "01/01/2021",
                    "keywords": "HairSalons,DaySpas,BeautySalon,BeautySalons,Salons, MassageTherapists",
                    "services": "BeautySalon,HairSpa",
                    "products": "LivingProofDryShampoo,KevinMurphyBlondeAngelWash",
                    "appointmentLink": "http://www.gmail.com",
                    "reservationLink": "http://www.gmail.com",
                    "menuLink": "http://www.gmail.com",
                    "orderAheadLink": "http://www.gmail.com",
                    "impressum": "Thisissampleimpressum",
                    "payment": "Visa,MasterCard,AmericanExpress,DebitCards,Check",
                    "localPhoneNumber": "(973)716-0102",
                    "tollFreePhoneNumber": "",
                    "iosAppURL": "http://www.gmail.com",
                    "androidAppURL": "http://www.gmail.com"
                },
                "media": {
                    "logoUrl": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg",
                    "coverImageUrl": "http://d2xt3xymj142xp.cloudfront.net/712586432/other/ab60b93831ba490383b9c59c0b4cf49d.jpeg",
                    "gmbCover": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/abcd.jpg",
                    "facebookCover": "http://d3cnqzq0ivprch.cloudfront.net/common/css/images/profile/fb.jpg"
                },
                 "optOut": {
                    "gmbCoverOptOut": true,
                    "gmbLogoOptOut": true,
                    "fbCoverOptOut": false,
                    "fbLogoOptOut": false,
                    "gmbProfileOptOut": false,
                    "businessProfileOptOut": false
                },
                "covidInfo": {
                    "postDescription": "SampleCovidDesc",
                    "covid19SupportLink": "http://www.covidInfo.com",
                    "virtualCareLink": "http://www.covidInfo.com"
                },
                "bingListing": {
                    "primaryCategoryBing": "Art Restoration Service",
                    "bingDescription": "Sample Bing Description",
                    "bingCategories": [
                        "Art Restoration Service"
                    ],
                    "bingPhoneNumber": "(415) 673-0868"

                },
                 "internalListing": {
                    "description": "ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridic ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridic",
                    "category": "Beauty",
                    "subCategories": [
                        "Eyelash Service",
                        "Nail Salons"
                    ],
                    "displayCategory": "Eyelash Service"
                },
                "facebookListing": {
                    "facebookDescription": "This is sample facebook description",
                    "facebookPhoneNumber": "(415) 673-0868",
                    "categories": [
                        "Science",
                        "Sports"
                    ]
                },
                   "thirdPartyListing": {
                    "thirdPartyCategory": "Towing Service",
                    "thirdPartySubCategories": [
                        "Car Dealer",
                        "Auto Glass Shop"
                    ]
                },
                  "gmbListing": {
                    "googleWebsiteUrl": "http://www.gmail.com",
                    "googleStoreId": "1232133",
                    "googlePhoneNumber": "(973) 716-0007",
                    "primaryCategoryGmb": "Storage facility",
                    "googleDescription": "This is sample description for google",
                    "additionalCategories": [
                        "Snack bar"
                    ],
                    "attributes": {
                        "Accessibility": [
                            {
                                "attributeId": "has_wheelchair_accessible_elevator",
                                "attributeName": "Wheelchair accessible elevator",
                                "value": false
                            }
                        ],
                        "Crowd": [
                            {
                                "attributeId": "welcomes_families",
                                "attributeName": "Family-friendly",
                                "value": true
                            }
                        ]
                    },
                    "foodDelivery":"https://www.ubereats.com",
                    "foodTakeout":"https://www.ubereats.com"
                },
                 "appleListing": {
                    "primaryCategory": "active.amateursportsteams",
                    "additionalCategories": [
                                "active.publicplazas",
                                "auto.autoelectric",
                                "auto.autoelectric"
                        ],
                   "appleLocationAttributes": {
                   "crossbusiness.accessibility_features": [{
                    "attributeId": "accessible_elevator"
                                  }
                            ],
                    "crossbusiness.family_kids": [{
                    "attributeId": "kidsclub"
                            },{
                    "attributeId": "parents_waitingarea"
                                   }
                             ]
                       },
                    "appleActionLinks": [{
                        "id": "quicklinks.airline_book_travel",
                        "deepLinkUrl": "https://www.google.com",
                        "appStoreUrl" : "https://apps.apple.com/your_apps_store_url"
                         }
                        ],
                    "phoneNumber": "+1 201-819-7989"
                },
                 "socialProfileURLs": {
                    "googleUrl": "http://www.google.com/123",
                    "facebookUrl": "http://www.facebook.com/123",
                    "twitterUrl": "http://www.twitter.com/123",
                    "youTubeUrl": "http://www.youtube.com/12",
                    "linkedinUrl": "http://www.linkedin.com/12",
                    "instagramUrl": "http://www.instagram.com/12",
                    "pintrestUrl": "http://www.pinterest.com/12",
                    "bbbUrl": "",
                    "lendingtreeUrl": ""
                },
                "healthcare": {
                    "doctorCategories": [
                        "Allergist-Immunologist > Allergy",
                        "Allergist-Immunologist > General",
                        "Addiction Medicine Specialist > General"
                    ],
                    "isProvider": true,
                    "practiceName": "General Medicine",
                    "firstName": "John",
                    "middleName": "Jack",
                    "surName": "Doe",
                    "npi": "1245319599",
                    "credentials": "MD",
                    "university": "Sample text",
                    "hospitalAffiliations": "Sample text",
                    "insurancesAccepted": "Sample text"
                },
            }


+ Response 401

    [1161][]

+ Response 429

    [89][]

## Get More Hours Type [/v1/listing/{businessNumber}/more-hours-type]
Get supported more hours type for a location. This will depend on the country and gmb primary category for the particular location.

### Get More Hours Type [GET]

+ Parameters

    + businessNumber: 12345678 (number, required) - Business Number.

+ Request (application/json)


    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


+ Response 200

   + Attributes (array)
        + (object)

    + Body

            [
              "Access",
              "Breakfast",
              "Brunch",
              "Delivery",
              "Dinner",
              "Drive through",
              "Happy hours",
              "Kitchen",
              "Lunch",
              "Online service hours",
              "Pickup",
              "Takeout",
              "Senior hours"
            ]




+ Response 401

    [1161][]

+ Response 429

    [89][]


+ Response 400

    [4014][]

+ Response 400

    [4012][]

+ Response 400

    [4013][]

+ Response 400

    [4015][]

## Get Google Keywords Count [/v1/listing/{businessNumber}/gmb/keywords]
Get’s Google keywords count for an account.
Google keyword: Top keywords searched for which your business is ranked.


### Get Google Keywords Count [POST]

+ Parameters

    + businessNumber: 986031488 (string, required) - Account Business Number.


+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: - Partner specific API key provided by Birdeye for data exchange.

    + Attributes
        + selectedMonth: Oct 2023,NOV 2023 (array , required ) - Filter months for which keyword data is required
        + selectedkeywords: prom (array) - Gives you keyword count for the selected keywords. keywordsSearch: To search by keywords that may also exist in search phrases, including the keyword itself.
        + keywordsSearch (string) - To search by keywords that may also exist in search phrases, including the keyword itself.
        + limit: 25 (number) - Specify number of records to return.
        + startIndex: 0 (number) - Index to start search from. Default value 0.
        + sortby: frequency (string) - Possible values “frequency” or “keyword”.
        + order: desc (string) - Possible values “asc” or “desc”.
        + businessNumbers: 123456789, 987656789 (array) - list of the unique business ids associated with a business.


    + Body

            {
                  "businessNumbers": [147286063579104,147286063579108],
                  "selectedMonth": [
                    "Oct 2023",
                    "Sep 2023",
                    "Nov 2023"
                  ],
                  "limit": 25,
                  "startIndex": 0,
                  "selectedkeywords": [
                    "prom"
                  ],
                  "sortby": "frequency",
                  "order": "desc",
                  "keywordsSearch": "prom dresses"
            }


+ Response 200

    + Attributes
        + data (array) - Returns business/location name along with its keywords count.
            + (object)
                + label: Total (string)  - Business/location name. Total, for sum of all locations keyword count
                + frequency: 50909 (string)  - Keywords count

    + Body

            {
                  "data": [
                    {
                      "label": "Total",
                      "frequency": 50909
                    },
                    {
                      "label": "prom dresses near me",
                      "frequency": 19156
                    },
                    {
                      "label": "prom dresses",
                      "frequency": 6168
                    },
                    {
                      "label": "david's bridal prom dresses",
                      "frequency": 3642
                    },
                    {
                      "label": "davids bridal prom dresses",
                      "frequency": 1005
                    },
                    {
                      "label": "prom dresses nearby",
                      "frequency": 825
                    }
                  ],
                  "totalKeywordCount": 734
            }

+ Response 401

    [1161][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 401

    [1167][]

+ Response 400

    [2457][]

+ Response 400

    [2458][]

## Deactivate Listing [/v1/listing/{businessNumber}/deactivate]
Deactivate Listing API stops publishing any information on the given online directories/ listings sites (as per your plan/ package chosen).

> __Note__
> - If you want to reactivate posting to / update your listing sites after you have deactivated, you will need to use either of create Listings or Fix Listings API.

### Deactivate Listing [POST]

+ Parameters

    + businessNumber: 12345678 (number, required) - Business Number.

+ Request (application/json)


    + Headers

            Accept: application/json
            api_key: [Required] Partner specific API key provided by Birdeye for data exchange.


+ Response 200 (application/json)

+ Response 401

    [1161][]

+ Response 429

    [89][]



# Group Ticketing
Create standout customer support with ticketing across reviews, untagged, and survey responses.

## Create ticket [/resources/v1/ticket/{businessNumber}/create-ticket]
Create reviews, untagged, and survey responses tickets.

### Create ticket [PUT]

+ Parameters

    + businessNumber: 12345678 (number, required) - Business number of the location on which we want to create a ticket.


+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.

    + Attributes
        + externalId: 3943351204239963055 (number) - Public Review Id for which you want to create ticket, Mandatory and applicable for creating review ticket.
        + assignedTo: warne@ymail.com (required, string) - EmailId of the user to whom the ticket will be assigned.
        + ticketType: review (required, string) - Type of ticket you want to create. Possible values:
                                                review,
                                                untagged,
                                                SURVEY
        + customer (object) -Customer details for which ticket is created, Mandatory and applicable for untagged ticket
            + emailId: steven@ymail.com (string) - Email id of the customer.
            + firstName: Steve (string) - First name of the customer.
            + lastName: Smith (string) - Last name of the customer.
            + location (object) - Location details of the customer.
                + city: Dallas (string) - City of the customer’s location.
                + state: Texas (string) - State of the customer’s location.
            + phone: 4032365164 (number)- Phone number of the customer.
        + description: Issue with the Store service (string) - Description of the ticket. Applicable for untagged and survey ticket
        + sourceType: Email (string) - Source Type of the ticket. Applicable for untagged ticket Possible values:
                                        Email,
                                        Phone,
                                        Chat,
                                        Internal,
                                        Social media
        + surveyId: 43503 (number) - Id of the survey for which we want to create a ticket. Applicable for survey ticket
        + surveyResponseId: 13577112 (number) - Id of the survey response for which we want to create a ticket. Applicable for survey ticket
        + additionalParams (array) - If you want to create tickets of survey for particular question and answer. Applicable for survey ticket
            + answerId: 1024530591 (number) - Id of any of the answers on the survey. Applicable for survey ticket
            + questionId: 221132 (number) - Id of any of the questions on the survey. Applicable for survey ticket






    + Body

            {
                "externalId": 3943351204239963055,
                "assignedTo": "pranav.singh@birdeye.com",
                "ticketType":"review",
                "customer": {
                    "emailId": "test+4@yopmail.com",
                    "firstName": "Steve",
                    "lastName": "Smith",
                    "location": {
                        "city": "Dallas",
                        "state": "Texas"
                    },
                    "phone": ""
                },
                "description": "Issue with the Store service",
                "sourceType": "internal"
            }



+ Response 200

    + Attributes
        + ticketId: 882382 (number) - Id of the new ticket created.



    + Body

            {
                "ticketId": 882382
            }


+ Response 401

    [1161][]

+ Response 401

    [1167][]

+ Response 429

    [89][]

+ Response 401

    [1033][]

+ Response 404

    [1175][]




## Add Ticket Comments [/resources/v1/ticket/{businessNumber}/comment-activity]
Add comment activity on tickets.

### Add Ticket Comments [POST]

+ Parameters

    + businessNumber: 12345678 (number, required) - Business number of the location.


+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.

    + Attributes
        + comment: Had a chat with customer, he will visit again. (required, string) - Comment to be added on ticket.
        + ticketId: 886172 (required, number) - Id of the ticket.
        + userEmail: steve@ymail.com (required,string) - EmailId of the user who is adding the comment.



    + Body

            {
                "comment": "Had a chat with customer, he will visit again.",
                "ticketId": "886172",
                "userEmail": "steve@ymail.com"
            }



+ Response 200

    + Attributes
        + ticketId: 882382 (number) - Id of the new ticket created.



    + Body

            {
                "ticketId": 882382
            }


+ Response 401

    [1161][]

+ Response 401

    [1167][]

+ Response 429

    [89][]

+ Response 401

    [1033][]

+ Response 404

    [1175][]




## Update ticket [/resources/v1/ticket/{businessNumber}/update]
Update the ticket status or ticket assignee.


### Update ticket [PUT]

+ Parameters

    + businessNumber: 12345678 (number, required) - Business number of the location.


+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.

    + Attributes
        + ticketUpdateMessages (array) - Update ticket.
            + (object)
                + assignedTo: steve@ymail.com (string) - New assignee of the ticket.
                + ticketId: 882382 (string) - Id of the ticket.
                + ticketStatus: assigned (string) - Status to be changed.


    + Body

            {
                "ticketUpdateMessages": [{
                    "assignedTo": "steve@ymail.com",
                    "ticketId": "882382",
                    "ticketStatus": "assigned"
                }],
                "userEmail": "pranav.singh@birdeye.com"
            }



+ Response 200

+ Response 401

    [1161][]

+ Response 401

    [1167][]

+ Response 429

    [89][]

+ Response 401

    [1033][]

+ Response 404

    [1175][]




## Get All Ticket Data [/resources/v1/ticket/{businessNumber}/get/all?{?op,sortOrder,count,sIndex,sortBy,totalCount}]
Get tickets

### Get All Ticket Data [POST]

+ Parameters

    + businessNumber: 12345678 (number, required) - Business number of the account.
    + op: 3 (number) - Possible values are: [1] will display ticket count only, [3] will display all the data of the ticket. Default value - 3.
    + sIndex: 0 (number) - Start index of the response. Default value - 0
    + count: 25  (number) - Number of tickets want to get in the response. Default value - 25
    + sortBy: 2  (number) - Sort options, Possible values [2] will sort on the basis of ticket creation date. [3] will sort on the basis of characters of business aliases. Default value 2.
    + sortOrder: 1 (number) - Sort Order [0] will sort the data in ascending order. [1] this will sort the data in descending order. Default value - 1
    + totalCount: true (Boolean) false, total count would not be displayed. true, total count would be displayed along with the data of all the tickets. Default Value - false



+ Request (application/json)

    + Headers

            Accept: application/json
            api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.

    + Attributes
        + assignees: steve@ymail.com,smith@ymail.com (array) - List of assignee email id.
        + businessNumbers: 123123123,12314231 (array) - List of Location Business Numbers.
        + fromDate: 1581230064000 (number) - Epoc start date.
        + toDate: 1707460464000 (number) - Epoc end date.
        + sourceAliases: google (array) - Source alias.
        + sourceTypes: phone (array) - Source Type.
        + tagNames: newReview (array) - Tag assigned to any review ticket.
        + ticketStatuses: new (array) - Filter tickets with status.
        + ticketTypes: review,survey (array) - List of ticket type, Possible values
                                                review,
                                                untagged,
                                                survey


    + Body

            {
                "assignees": [],
                "businessNumbers": [],
                "fromDate": 1581230064000,
                "sourceAliases": [""],
                "sourceTypes": ["phone","socialmedia","chat","internal"],
                "tagNames": ["newReview"],
                "ticketStatuses": ["assigned", "new"],
                "ticketTypes": ["review", "survey", "untagged"],
                "toDate": 1707460464000
            }



+ Response 200

    + Attributes
        + ticketDetails (array) - Ticket Details.
            + (object)
                + id: 188556 (number) - Id of the ticket.
                + status: new (string) - Ticket status.
                + rating: 5.0 (number) - Review rating.
                + externalId: 213243231 (string) - Public review id.
                + description: Customer will visit again (number) - Description of the ticket.
                + activityCount: 4 (number) - Number of activities associated with the ticket.
                + assignedTo (object) - Assignee details.
                    + firstName: Steve (string) - First Name of the assignee.
                    + lastName: Steve (string) - Last Name of the assignee.
                    + name: Steve Smith (string) - Name  of the assignee.
                    + emailId: steve@ymail.com (string) - Email id of the assignee.
                + source (object) - Source details of the ticket
                    + name: Google (string)- Source details
                                                        [1] “Google”, in case of a review ticket.
                                                        [2] “email”, in case of an untagged ticket.
                                                        [3] “Training Feb 24th”, name of the survey in case of survey ticket.
                + ticketType: review (string) - Type of the ticket.
                + tags: newreview (array) - List of Ticket tags.
                + reporter (object) - Ticket reporter details.
                    + firstName: Steve (string) - First Name of the reporter
                    + lastName: Smith (string) -  Last Name of the reporter




    + Body

            {
                "ticketDetails": [{
                    "id": 188556,
                    "status": "assigned",
                    "rating": 5.0,
                    "externalId": 2131605005145285326,
                    "date": "2020-02-14 00:08:00",
                    "postedOn": "2020-02-08 00:00:00",
                    "updateDate": "2020-08-11 00:00:00",
                    "created": "2020-02-14 12:08:02",
                    "description": "Room was outstanding....location was also good....",
                    "activityCount": 4,
                    "assignedTo": {
                        "firstName": "Atul",
                        "lastName": "Ghainna",
                        "emailId": "atulkumar.ghainna@birdeye.com",
                        "name": "Atul Ghainna"
                    },
                    "business": {
                        "name": "JYSK - Whitby",
                        "alias": "JYSK - Whitby",
                        "number": 157851547625021,
                        "phone": "(905) 451-9054"
                    },
                    "source": {
                        "name": "Airbnb"
                    },
                    "ticketType": "review",
                    "tags": [
                        "awesome",
                        "it was good",
                        "newtest",
                        "promoters!!!",
                        "great service",
                        "time",
                        "poor",
                        "Enjoy",
                        "newtag",
                        "test",
                        "check",
                        "good review",
                        "excellent",
                        "Dirty Car",
                        "User request no response",
                        "customer service",
                        "nice"
                    ],
                    "reporter": {
                        "firstName": "Megha",
                        "lastName": ""
                    }
                },
                {
                    "id": 192727,
                    "status": "assigned",
                    "date": "2020-02-18 00:34:00",
                    "updateDate": "2020-02-18 00:00:00",
                    "created": "2020-02-18 12:34:18",
                    "description": "Apil look into it.",
                    "activityCount": 2,
                    "assignedTo": {
                        "firstName": "April",
                        "lastName": "Dover",
                        "emailId": "aparna.dass@birdeye.com",
                        "name": "April Dover"
                    },
                    "business": {
                        "name": "JYSK - Cambridge",
                        "alias": "JYSK - Cambridge",
                        "number": 157721146574913,
                        "phone": "(905) 451-9054"
                    },
                    "source": {
                        "name": "phone"
                    },
                    "ticketType": "untagged",
                    "reporter": {
                        "firstName": "Jerry",
                        "lastName": "Jacob",
                        "emailId": "jerry@jerry.com",
                        "phone": ""
                    }
                },
                {
                    "id": 199287,
                    "status": "assigned",
                    "date": "2020-02-27 01:28:00",
                    "postedOn": "2020-02-27 00:00:00",
                    "updateDate": "2020-10-29 00:00:00",
                    "created": "2020-02-27 01:28:14",
                    "description": "Question: Please rate us based on your training experience\nAnswer: 1",
                    "activityCount": 3,
                    "assignedTo": {
                        "firstName": "April",
                        "lastName": "Dover",
                        "emailId": "aparna.dass@birdeye.com",
                        "name": "April Dover"
                    },
                    "business": {
                        "name": "JYSK - Whitby",
                        "alias": "JYSK - Whitby",
                        "number": 157851547625021,
                        "phone": "(905) 451-9054"
                    },
                    "source": {
                        "name": "Training Feb 24th"
                    },
                    "ticketType": "survey",
                    "surveyId": 15492
                }
            ],
            "count": 0,
            "totalcount": 3
        }



+ Response 401

    [1161][]

+ Response 401

    [1167][]

+ Response 429

    [89][]

+ Response 401

    [1033][]

+ Response 404

    [1175][]




# Group Integration
Birdeye integrates with various software or tools you use.

## Add Business Integration Mapping[/v1/integrations/add/businessintegrationmapping{?api_key}]
Add Business Integration Mapping adds locations to integrations and set them active.

### Add locations [PUT]

+ Parameters

    + api_key: abcdefgh (string, required) - Partner specific API key provided by Birdeye for data exchange.


+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes
        + businessNumber: 166015909542313 (required, number) - Business number.
        + integrationGroupId: 12345 (required, number) - Integration Group Id.
        + active: true (required, boolean) - Active state.
        + integrationProperties (object) - Add properties in key value pair.


    + Body

            {
                "businessNumber": 166015909542313,
                "integrationGroupId": 12345,
                "active": true,
                "integrationProperties": [
                    {
                        "propertyKey": "property_key",
                        "propertyValue": "1234567"
                    }
                  ]
            }

+ Response 200

+ Response 401

    [1161][]

+ Response 401

    [1167][]

+ Response 429

    [89][]

+ Response 401

    [1033][]

+ Response 404

    [1175][]

+ Response 400

    [1422][]



# Group Change Logs

* <b>03/22/2024</b> - Add Update Hierarchy API (BIRD-32609)
* <b>03/19/2024</b> - Added Ticket APIs Create, Get, Update APIs under Ticket module
* <b>02/26/2024</b> - Updated logoUrl description in Get, Update APIs under Business module and Create, Get, Update APIs under Listing module (BIRD-29386)
* <b>12/21/2023</b> - Add listing phase 2 api changes (BIRD-16589)
* <b>11/08/2023</b> - Add survey changes (BIRD-11944) and listing changes (BIRD-14345)
* <b>11/08/2023</b> - Added CRUD APIs for Apple chat
* <b>10/15/2023</b> - Added CRUD APIs for Business Media.
* <b>10/11/2023</b> - Added new APIs under Listing module, Create, Update, Get, Deactive Listings
* <b>09/18/2023</b> - Added new API under Contact module i.e, Get opt-out contact data
* <b>08/25/2023</b> - Added new APIs under Business and Listing modules, Get Category List API, Get GMB Attributes API & Get Timezone List
* <b>07/21/2023</b> - Added new API under Business module i.e, Business Search API.
* <b>06/30/2023</b> - Added support for service area based information in Get Business API and Update Business API.
* <b>03/27/2024</b> - Response sample has been updated for List Response API of survey.
